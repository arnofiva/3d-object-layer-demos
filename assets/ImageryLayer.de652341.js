var yt=Object.defineProperty,ft=Object.defineProperties;var gt=Object.getOwnPropertyDescriptors;var Ue=Object.getOwnPropertySymbols;var Rt=Object.prototype.hasOwnProperty,vt=Object.prototype.propertyIsEnumerable;var Qe=(r,i,e)=>i in r?yt(r,i,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[i]=e,R=(r,i)=>{for(var e in i||(i={}))Rt.call(i,e)&&Qe(r,e,i[e]);if(Ue)for(var e of Ue(i))vt.call(i,e)&&Qe(r,e,i[e]);return r},A=(r,i)=>ft(r,gt(i));import{a as n,d as o,d6 as O,fg as P,dh as bt,n as J,eu as q,eJ as j,rM as wt,iu as Ae,d7 as ue,jf as St,aQ as ee,rN as Q,bF as ae,er as tt,r as I,hz as ie,hA as pe,hB as ce,bs as _,fx as $e,ap as Re,hv as it,fy as rt,hw as Je,fs as Ee,bK as xt,ab as Ft,gb as re,rH as It,mE as Nt,da as Tt,bI as Dt,t as X,N as L,hx as se,rO as Pt,aZ as Ct,H as Fe,rP as _t,v as Ot,B as Vt,g as jt,rQ as Mt,kN as At,r8 as $t,rA as Jt,ra as Et,r9 as zt,mx as Lt,my as qt,ry as kt,mw as Ht,mz as Ut,E as Qt,mB as Gt,dc as Bt,rR as Wt,rt as Kt,df as Zt,dg as Xt}from"./vendor.fd144a9e.js";import{n as Yt,p as st,o as te,i as he,l as ei,a as ti,u as ii,m as ri,V as si,B as ni,k as ai,t as oi,f as li,b as ui,c as pi}from"./fetchRasterInfo.f0916882.js";import{R as ci,_ as nt,h as at,f as mi,d as di,l as ot,c as hi,U as yi,S as Ge,P as fi,e as gi}from"./dataUtils.5fc24393.js";import{u as Ri}from"./PixelBlock.2733b9cf.js";import{s as vi,n as bi}from"./executeForIds.3529c405.js";import"./ClassBreaksDefinition.e6a81499.js";var Te;const ve=new Set(["raster","raster2","dem","fillraster"]),be=new Set(["rasters"]),Be=r=>r&&r.rasterFunction?E.fromJSON(r):r,Ie=r=>r&&r instanceof E?r.toJSON():r,De=r=>(r==null?void 0:r.functionName)&&!r.declaredClass,We=r=>De(r)?new E(r):r,wi=r=>{if(r==null)return null;r=j(r);const i={};for(const e of Object.keys(r))ve.has(e.toLowerCase())?i[e]=Be(r[e]):be.has(e.toLowerCase())&&Array.isArray(r[e])?i[e]=r[e].map(Be):i[e]=r[e];return i};let E=Te=class extends q{constructor(r){super(r),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.rasterFunctionDefinition=null}set functionArguments(r){if(r){const i=Object.keys(r);if(i.some(e=>ve.has(e.toLowerCase())&&De(r[e]))||i.some(e=>be.has(e.toLowerCase())&&Array.isArray(r[e])&&r[e].some(t=>De(t)))){r=j(r);for(const e of i)ve.has(e.toLowerCase())?r[e]=We(r[e]):be.has(e.toLowerCase())&&Array.isArray(r[e])&&(r[e]=r[e].map(t=>We(t)))}}this._set("functionArguments",r)}readFunctionArguments(r){return wi(r)}writeFunctionArguments(r,i,e){const t={};for(const s of Object.keys(r))ve.has(s.toLowerCase())?t[s]=Ie(r[s]):be.has(s.toLowerCase())&&Array.isArray(r[s])?t[s]=r[s].map(Ie):t[s]=Ie(r[s]);i[e]=t}readFunctionName(r,i){const e=i.rasterFunctionInfos;return i.name||(e&&e.length&&e[0].name!=="None"?e[0].name:i.rasterFunctionDefinition?i.rasterFunctionDefinition.name:i.rasterFunction)}clone(){return new Te({functionName:this.functionName,functionArguments:j(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,rasterFunctionDefinition:j(this.rasterFunctionDefinition)})}};n([o({json:{type:Object,name:"rasterFunctionArguments"}})],E.prototype,"functionArguments",null),n([O("functionArguments")],E.prototype,"readFunctionArguments",null),n([P("functionArguments")],E.prototype,"writeFunctionArguments",null),n([o({json:{type:String,write:{target:"rasterFunction"}}})],E.prototype,"functionName",void 0),n([O("functionName",["rasterFunction","rasterFunctionInfos","rasterFunctionDefinition"])],E.prototype,"readFunctionName",null),n([bt({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1}),o({json:{default:"unknown"}})],E.prototype,"outputPixelType",void 0),n([o({type:String,json:{read:!0,write:!0}})],E.prototype,"variableName",void 0),n([o({type:Object,json:{name:"rasterFunctionDefinition"}})],E.prototype,"rasterFunctionDefinition",void 0),E=Te=n([J("esri.layers.support.RasterFunction")],E);const x=E,Si={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}},xi={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},Fi={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},Ii=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function lt(r){return Ii.has(r.type)}function Ke(r,i){if(!r||!i)return j(r||i);const e=j(r);if(i.rasterFunctionDefinition){const t=i.rasterFunctionDefinition;(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),ut(e.rasterFunctionDefinition.arguments,i)}else i.functionName.toLowerCase()!=="none"&&(pt(e.functionArguments).Raster=i);return e}function ut(r,i){for(const e in r)e.toLowerCase()==="raster"&&(r[e].type==="RasterFunctionVariable"?(r[e]=i.rasterFunctionDefinition,r[e].type="RasterFunctionTemplate"):r[e].type==="RasterFunctionTemplate"&&ut(r[e].arguments,i))}function W(r){const i=j(Si[r.functionName+"Function"]),e=r.functionArguments;for(const t in e)t.toLowerCase()==="raster"?(i.arguments[t]=W(e[t]),i.arguments[t].type="RasterFunctionTemplate"):t.toLowerCase()==="colormap"?(i.arguments[t].value=ji(e[t]),i.arguments.ColorSchemeType.value=0):i.arguments[t].value=e[t];return i}function Ni(r,i){switch(i=i||{},r.type){case"raster-stretch":return Pi(r,i);case"class-breaks":return Ci(r,i);case"unique-value":return _i(r,i);case"raster-colormap":return Oi(r,i);case"vector-field":return Ti(r,i);case"raster-shaded-relief":return Di(r,i);case"flow":throw new Error("Unsupported rendering rule.")}}function pt(r){const i=r.Raster;return i&&i.declaredClass==="esri.layers.support.RasterFunction"?pt(i.functionArguments):r}const de={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function Ti(r,i){const e=new x;e.functionName="VectorFieldRenderer";const{dataType:t,bandProperties:s}=i,a=t==="vector-uv";let l,u;s&&s.length===2&&(l=s.map(v=>v.BandName.toLowerCase()).indexOf("magnitude"),u=s.map(v=>v.BandName.toLowerCase()).indexOf("direction")),l!==-1&&l!==null||(l=0,u=1);const c=r.rotationType==="arithmetic"?1:2,m=r.flowRepresentation==="flow-from"?0:1,p=r.visualVariables?r.visualVariables.find(v=>v.field==="Magnitude"):new wt,f={magnitudeBandID:l,directionBandID:u,isUVComponents:a,referenceSystem:c,massFlowAngleRepresentation:m,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:Fi[r.style.toLowerCase().replace("-","_")],minimumMagnitude:p.minDataValue,maximumMagnitude:p.maxDataValue,minimumSymbolSize:p.minSize,maximumSymbolSize:p.maxSize};return e.functionArguments=f,i.convertToRFT?new x({rasterFunctionDefinition:W(e)}):e}function Di(r,i){const e=i.convertToRFT;if(i.dataType!=="elevation")return new x;const t=new x;t.functionName="Hillshade";const s=r.hillshadeType==="traditional"?0:1,a=r.scalingType==="none"?1:3,l={HillshadeType:s,SlopeType:a,ZFactor:r.zFactor};return s===0&&(l.Azimuth=r.azimuth,l.Altitude=r.altitude),a===3&&(l.PSPower=r.pixelSizePower,l.PSZFactor=r.pixelSizeFactor),t.functionArguments=l,t.variableName="Raster",r.colorRamp&&(t.functionName="ShadedRelief",e?l.ColorRamp=nt(r.colorRamp):l.Colormap=at(r.colorRamp,256)),e?new x({rasterFunctionDefinition:W(t)}):t}function Pi(r,i){var u;const e=i.convertToRFT,t=new x;t.functionName="Stretch";const s=de[Yt.toJSON(r.stretchType)],a="u8",l={StretchType:s,Statistics:Vi(r.statistics),DRA:r.dynamicRangeAdjustment,UseGamma:r.useGamma,Gamma:r.gamma,ComputeGamma:r.computeGamma};if(r.outputMin!=null&&(l.Min=r.outputMin),r.outputMax!=null&&(l.Max=r.outputMax),s===de.standardDeviation?(l.NumberOfStandardDeviations=r.numberOfStandardDeviations,t.outputPixelType=a):s===de.percentClip?(l.MinPercent=r.minPercent,l.MaxPercent=r.maxPercent,t.outputPixelType=a):s===de.minMax?t.outputPixelType=a:s===de.sigmoid&&(l.SigmoidStrengthLevel=r.sigmoidStrengthLevel),t.functionArguments=l,t.variableName="Raster",r.colorRamp){const c=r.colorRamp,m=new x;if(e)m.functionArguments={ColorRamp:nt(c)};else{const p=mi(c);if(p)m.functionArguments={colorRamp:p};else if(!i.convertColorRampToColormap||c.type!=="algorithmic"&&c.type!=="multipart"){const f=r.colorRamp.toJSON();f.type==="algorithmic"?f.algorithm=f.algorithm||"esriCIELabAlgorithm":f.type==="multipart"&&((u=f.colorRamps)==null?void 0:u.length)&&f.colorRamps.forEach(v=>v.algorithm=v.algorithm||"esriCIELabAlgorithm"),m.functionArguments={colorRamp:f}}else m.functionArguments={Colormap:at(c,256)}}return m.variableName="Raster",m.functionName="Colormap",m.functionArguments.Raster=t,e?new x({rasterFunctionDefinition:W(m)}):m}return e?new x({rasterFunctionDefinition:W(t)}):t}function Ci(r,i){const e=[],t=[],s=[],a=[],{pixelType:u,rasterAttributeTable:c}=i,m=c&&c.features,p=ct(c);if(m&&Array.isArray(m)&&r.classBreakInfos){r.classBreakInfos.forEach((h,F)=>{const b=h.symbol.color;let C;b.a&&m.forEach(N=>{C=N.attributes[r.field],(C>=h.minValue&&C<h.maxValue||F===r.classBreakInfos.length-1&&C>=h.minValue)&&a.push([N.attributes[p],b.r,b.g,b.b])})});const y=u?xe(a,u):a,d=new x;return d.functionName="Colormap",d.functionArguments={},d.functionArguments.Colormap=y,d.variableName="Raster",i.convertToRFT?new x({rasterFunctionDefinition:W(d)}):d}r.classBreakInfos.forEach((y,d)=>{const h=y.symbol&&y.symbol.color;h.a?(d===0?e.push(y.minValue,y.maxValue+1e-6):e.push(y.minValue+1e-6,y.maxValue+1e-6),t.push(d),a.push([d,h.r,h.g,h.b])):s.push(y.minValue,y.maxValue)});const f=u?xe(a,u):a,v=new x;v.functionName="Remap",v.functionArguments={InputRanges:e,OutputValues:t,NoDataRanges:s},v.variableName="Raster";const g=new x;return g.functionName="Colormap",g.functionArguments={Colormap:f,Raster:v},i.convertToRFT?new x({rasterFunctionDefinition:W(g)}):g}function xe(r,i){const e=xi[String(i).toLowerCase()];return e&&r.push([Math.floor(e[0]-1),0,0,0],[Math.ceil(e[1]+1),0,0,0]),r}function ct(r){if(!r)return;const{fields:i}=r,e=i&&i.find(t=>t&&t.name&&t.name.toLowerCase()==="value");return e&&e.name}function _i(r,i){var f,v;const e=[],{pixelType:t,rasterAttributeTable:s}=i,a=s&&s.features,l=ct(s),u=(v=(f=r.defaultSymbol)==null?void 0:f.color)==null?void 0:v.toRgb(),c=r.uniqueValueInfos;if(c)if(a){const g=new Map;c.forEach(d=>{var b;const h=d.value,F=(b=d.symbol.color)==null?void 0:b.toRgb();h!=null&&F&&g.set(String(h),F)});const y=r.field;a.forEach(({attributes:d})=>{const h=String(d[y]),F=d[l];if(g.has(h)){const b=g.get(h);e.push([F,...b])}else u&&e.push([F,...u])})}else for(let g=0;g<c.length;g++){const y=c[g],d=y.symbol.color,h=+y.value;if(d==null?void 0:d.a){if(isNaN(h))return null;e.push([h,d.r,d.g,d.b])}}const m=t&&e.length>0?xe(e,t):e,p=new x;return p.functionName="Colormap",p.functionArguments={},p.functionArguments.Colormap=m,p.variableName="Raster",i.convertToRFT?new x({rasterFunctionDefinition:W(p)}):p}function Oi(r,i){const e=r.extractColormap();if(!e||e.length===0)return;const{pixelType:t}=i,s=t?xe(e,t):e,a=new x;return a.functionName="Colormap",a.functionArguments={},a.functionArguments.Colormap=s,i.convertToRFT?new x({rasterFunctionDefinition:W(a)}):a}function Vi(r){const i=[];return r.forEach(e=>{const t=e;if(Array.isArray(t))i.push(t);else{if(t.min==null||t.max==null)return;const s=[t.min,t.max,t.avg||0,t.stddev||0];i.push(s)}}),i}function ji(r){const i=[],e=[];return r.forEach(t=>{i.push(t[0]),e.push(ci([...t.slice(1),255]))}),{type:"RasterColormap",values:i,colors:e}}var Pe;const ye=Ae()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),Ce=Ae()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});function Mi(r){let i;switch(r?r.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":i="esriMosaicAttribute";break;case"lockraster":i="esriMosaicLockRaster";break;case"center":i="esriMosaicCenter";break;case"northwest":i="esriMosaicNorthwest";break;case"nadir":i="esriMosaicNadir";break;case"viewpoint":i="esriMosaicViewpoint";break;case"seamline":i="esriMosaicSeamline";break;default:i="esriMosaicNone"}return Ce.fromJSON(i)}let V=Pe=class extends q{constructor(r){super(r),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(r,i){return i.ascending!=null?i.ascending:i.sortAscending==null||i.sortAscending}readMethod(r,i){return Mi(i.mosaicMethod||i.defaultMosaicMethod)}readOperation(r,i){const e=i.mosaicOperation,t=i.mosaicOperator&&i.mosaicOperator.toLowerCase(),s=e||(t?ye.toJSON(t):null);return ye.fromJSON(s)||"first"}castSortValue(r){return r==null||typeof r=="string"||typeof r=="number"?r:`${r}`}clone(){return new Pe({ascending:this.ascending,itemRenderingRule:j(this.itemRenderingRule),lockRasterIds:j(this.lockRasterIds),method:this.method,multidimensionalDefinition:j(this.multidimensionalDefinition),objectIds:j(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:j(this.viewpoint),where:this.where})}};n([o({type:Boolean,json:{write:!0}})],V.prototype,"ascending",void 0),n([O("ascending",["ascending","sortAscending"])],V.prototype,"readAscending",null),n([o({type:x,json:{write:!0}})],V.prototype,"itemRenderingRule",void 0),n([o({type:[ue],json:{write:{overridePolicy(){return{enabled:this.method==="lock-raster"}}}}})],V.prototype,"lockRasterIds",void 0),n([o({type:String,json:{type:Ce.jsonValues,write:{target:"mosaicMethod",writer:Ce.write}}})],V.prototype,"method",void 0),n([O("method",["mosaicMethod","defaultMosaicMethod"])],V.prototype,"readMethod",null),n([o({type:[st],json:{write:!0}})],V.prototype,"multidimensionalDefinition",void 0),n([o({type:[ue],json:{name:"fids",write:!0}})],V.prototype,"objectIds",void 0),n([o({json:{type:ye.jsonValues,read:{reader:ye.read},write:{target:"mosaicOperation",writer:ye.write}}})],V.prototype,"operation",void 0),n([O("operation",["mosaicOperation","mosaicOperator"])],V.prototype,"readOperation",null),n([o({type:String,json:{write:{overridePolicy(){return{enabled:this.method==="attribute"}}}}})],V.prototype,"sortField",void 0),n([o({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:this.method==="attribute",allowNull:!0}}}}})],V.prototype,"sortValue",void 0),n([St("sortValue")],V.prototype,"castSortValue",null),n([o({type:ee,json:{write:!0}})],V.prototype,"viewpoint",void 0),n([o({type:String,json:{write:!0}})],V.prototype,"where",void 0),V=Pe=n([J("esri.layers.support.MosaicRule")],V);const H=V;let T=class extends q{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.bandIds=void 0,this.compression=void 0,this.compressionQuality=void 0,this.compressionTolerance=.01,this.interpolation=null,this.noData=null,this.noDataInterpretation=void 0,this.pixelType=void 0,this.lercVersion=2}writeAdjustAspectRatio(r,i,e){this.layer.version<10.3||(i[e]=r)}writeCompressionQuality(r,i,e){this.format&&this.format.toLowerCase().includes("jpg")&&r!=null&&(i[e]=r)}writeCompressionTolerance(r,i,e){this.format==="lerc"&&r!=null&&(i[e]=r)}get format(){var r;return((r=this.layer.renderer)==null?void 0:r.type)==="vector-field"?"lerc":this.layer.format}writeLercVersion(r,i,e){this.format==="lerc"&&this.layer.version>=10.5&&(i[e]=r)}get version(){const r=this.layer;return r.commitProperty("bandIds"),r.commitProperty("format"),r.commitProperty("compressionQuality"),r.commitProperty("compressionTolerance"),r.commitProperty("interpolation"),r.commitProperty("noData"),r.commitProperty("noDataInterpretation"),r.commitProperty("mosaicRule"),r.commitProperty("renderingRule"),r.commitProperty("adjustAspectRatio"),r.commitProperty("pixelFilter"),r.commitProperty("renderer"),r.commitProperty("definitionExpression"),(this._get("version")||0)+1}set version(r){this._set("version",r)}get mosaicRule(){const r=this.layer;let i=r.mosaicRule;const e=r.definitionExpression;return i?e&&e!==i.where&&(i=i.clone(),i.where=e):e&&(i=new H({where:e})),i}get renderingRule(){var s;const r=this.layer;let i=r.renderingRule;const e=r.pixelFilter,t=!r.format||r.format.includes("jpg")||r.format.includes("png");return i=this._addResampleRasterFunction(i),t&&!e&&((s=r.renderer)==null?void 0:s.type)!=="vector-field"&&(i=this.combineRendererWithRenderingRule()),i}combineRendererWithRenderingRule(){var s;const r=this.layer,{rasterInfo:i,renderingRule:e,renderer:t}=r;return!t||!lt(t)?e:Ke(Ni(t,{rasterAttributeTable:i.attributeTable,pixelType:i.pixelType,dataType:i.dataType,bandProperties:(s=i.keyProperties)==null?void 0:s.BandProperties,convertColorRampToColormap:r.version<10.6,convertToRFT:!!(e==null?void 0:e.rasterFunctionDefinition)}),e)}_addResampleRasterFunction(r){var t;if(((t=this.layer.renderer)==null?void 0:t.type)!=="vector-field"||(r==null?void 0:r.functionName)==="Resample")return r;const i=this.layer.serviceDataType==="esriImageServiceDataTypeVector-UV"?7:10;let e=new x({functionName:"Resample",functionArguments:{ResamplingType:i,InputCellSize:{x:this.layer.pixelSizeX,y:this.layer.pixelSizeY}}});return e=(r==null?void 0:r.rasterFunctionDefinition)?new x({rasterFunctionDefinition:W(e)}):e,Ke(e,r)}};n([o()],T.prototype,"layer",void 0),n([o({json:{write:!0}})],T.prototype,"adjustAspectRatio",void 0),n([P("adjustAspectRatio")],T.prototype,"writeAdjustAspectRatio",null),n([o({json:{write:!0}}),Q("layer.bandIds")],T.prototype,"bandIds",void 0),n([o({json:{write:!0}})],T.prototype,"compression",void 0),n([o({json:{write:!0}}),Q("layer.compressionQuality")],T.prototype,"compressionQuality",void 0),n([P("compressionQuality")],T.prototype,"writeCompressionQuality",null),n([o({json:{write:!0}}),Q("layer.compressionTolerance")],T.prototype,"compressionTolerance",void 0),n([P("compressionTolerance")],T.prototype,"writeCompressionTolerance",null),n([o({json:{write:!0}})],T.prototype,"format",null),n([o({type:String,json:{read:{reader:te.read},write:{writer:te.write}}}),Q("layer.interpolation")],T.prototype,"interpolation",void 0),n([o({json:{write:!0}}),Q("layer.noData")],T.prototype,"noData",void 0),n([o({type:String,json:{read:{reader:he.read},write:{writer:he.write}}}),Q("layer.noDataInterpretation")],T.prototype,"noDataInterpretation",void 0),n([o({json:{write:!0}})],T.prototype,"pixelType",void 0),n([o({json:{write:!0}})],T.prototype,"lercVersion",void 0),n([P("lercVersion")],T.prototype,"writeLercVersion",null),n([o({type:Number})],T.prototype,"version",null),n([o({json:{write:!0}})],T.prototype,"mosaicRule",null),n([o({json:{write:!0}})],T.prototype,"renderingRule",null),T=n([J("esri.layers.mixins.ExportImageServiceParameters")],T);let oe=class extends q{constructor(){super(...arguments),this.north=null,this.up=null,this.spatialReference=null}};n([o({type:Number,json:{write:!0}})],oe.prototype,"north",void 0),n([o({type:Number,json:{write:!0}})],oe.prototype,"up",void 0),n([o({type:ae,json:{write:!0}})],oe.prototype,"spatialReference",void 0),oe=n([J("esri.rest.support.ImageAngleResult")],oe);const Ai=oe;let U=class extends q{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};n([o({json:{write:!0}})],U.prototype,"catalogItemVisibilities",void 0),n([o({type:tt,json:{write:!0}})],U.prototype,"catalogItems",void 0),n([o({type:ee,json:{write:!0}})],U.prototype,"location",void 0),n([o({json:{write:!0}})],U.prototype,"name",void 0),n([o({json:{write:!0}})],U.prototype,"objectId",void 0),n([o({json:{write:!0}})],U.prototype,"processedValues",void 0),n([o({json:{write:!0}})],U.prototype,"properties",void 0),n([o({json:{write:!0}})],U.prototype,"value",void 0),U=n([J("esri.rest.support.ImageIdentifyResult")],U);const $i=U;let we=class extends q{constructor(){super(...arguments),this.geometries=null}};n([o({json:{write:!0}})],we.prototype,"geometries",void 0),we=n([J("esri.rest.support.ImagePixelLocationResult")],we);const Ji=we;let Y=class extends q{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};n([o({json:{write:!0}})],Y.prototype,"attributes",void 0),n([o({type:ee,json:{write:!0}})],Y.prototype,"location",void 0),n([o({json:{write:!0}})],Y.prototype,"locationId",void 0),n([o({json:{write:!0}})],Y.prototype,"rasterId",void 0),n([o({json:{write:!0}})],Y.prototype,"resolution",void 0),n([o({json:{write:!0}})],Y.prototype,"pixelValue",void 0),Y=n([J("esri.rest.support.ImageSample")],Y);const Ei=Y;let Se=class extends q{constructor(){super(...arguments),this.samples=null}};n([o({type:[Ei],json:{write:!0}})],Se.prototype,"samples",void 0),Se=n([J("esri.rest.support.ImageSampleResult")],Se);const zi=Se;function mt(r){const i=r==null?void 0:r.time;if(i&&(i.start!=null||i.end!=null)){const e=[];i.start!=null&&e.push(i.start),i.end==null||e.includes(i.end)||e.push(i.end),r.time=e.join(",")}}async function dt(r,i,e){const t=ie(r),s=i.geometry?[i.geometry]:[],a=await $e(s),l=i.toJSON();mt(l);const u=a&&a[0];I(u)&&(l.geometry=u.toJSON());const c=pe(R(A(R({},t.query),{f:"json"}),l));return ce(c,e)}async function Li(r,i,e){var c;const t=i.toJSON();I(t.angleName)&&(t.angleName=t.angleName.join(",")),I(i.point)&&((c=i.point.spatialReference)==null?void 0:c.imageCoordinateSystem)&&(t.point.spatialReference=ze(i.point.spatialReference)),I(i.spatialReference)&&i.spatialReference.imageCoordinateSystem&&(t.spatialReference=ht(i.spatialReference));const s=ie(r),a=pe(R(A(R({},s.query),{f:"json"}),t)),l=ce(a,e),{data:u}=await _(`${s.path}/computeAngles`,l);return u.spatialReference=u.spatialReference?u.spatialReference.geodataXform!=null?new ae({wkid:0,imageCoordinateSystem:u.spatialReference}):ae.fromJSON(u.spatialReference):null,u.north==="NaN"&&(u.north=null),u.up==="NaN"&&(u.up=null),new Ai(u)}async function qi(r,i,e){var m;const t=i.toJSON(),{geometries:s}=i;for(let p=0;p<s.length;p++)((m=s[p].spatialReference)==null?void 0:m.imageCoordinateSystem)&&(t.geometries.geometries[p].spatialReference=ze(s[p].spatialReference));const a=ie(r),l=pe(R(A(R({},a.query),{f:"json"}),t)),u=ce(l,e),{data:c}=await _(`${a.path}/computePixelLocation`,u);return Ji.fromJSON(c)}async function ki(r,i,e){const t=await dt(r,i,e),s=ie(r),{data:a}=await _(`${s.path}/computeStatisticsHistograms`,t),{statistics:l}=a;return(l==null?void 0:l.length)&&l.forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation}),{statistics:l,histograms:a.histograms}}async function Hi(r,i,e){const t=await dt(r,i,e),s=ie(r),{data:a}=await _(`${s.path}/computeHistograms`,t);return{histograms:a.histograms}}async function Ui(r,i,e){var p,f,v;const t=i.toJSON();mt(t),((p=t.outFields)==null?void 0:p.length)&&(t.outFields=t.outFields.join(","));const s=(f=await $e(i.geometry))==null?void 0:f[0];I(s)&&(t.geometry=s.toJSON());const a=ie(r),l=pe(R(A(R({},a.query),{f:"json"}),t)),u=ce(l,e),{data:c}=await _(`${a.path}/getSamples`,u),m=(v=c==null?void 0:c.samples)==null?void 0:v.map(g=>{const y=g.value==="NaN"||g.value===""?null:g.value.split(" ").map(d=>Number(d));return A(R({},g),{pixelValue:y})});return zi.fromJSON({samples:m})}async function Ze(r,i,e){const t=ie(r),s=i.geometry?[i.geometry]:[];return $e(s).then(a=>{const l=i.toJSON(),u=a&&a[0];I(u)&&(l.geometry=JSON.stringify(u.toJSON()));const c=pe(R(A(R({},t.query),{f:"json"}),l)),m=ce(c,e);return _(t.path+"/identify",m)}).then(a=>$i.fromJSON(a.data))}function ze(r){const{imageCoordinateSystem:i}=r;if(i){const{id:e,referenceServiceName:t}=i;return e!=null?t?{icsid:e,icsns:t}:{icsid:e}:{ics:i}}return r.toJSON()}function ht(r,i){const e=ze(r),{icsid:t,icsns:s,wkid:a}=e;return t!=null?s==null||(i==null?void 0:i.toLowerCase().includes("/"+s.toLowerCase()+"/"))?`0:${t}`:JSON.stringify(e):a?a.toString():JSON.stringify(e)}async function Qi(r,i,e){var N,S;const t=ie(r),s=pe(A(R({},t.query),{f:"json"})),a=ce(s,e),l=`${t.path}/${i}/info`,u=_(`${l}`,a),c=_(`${l}/keyProperties`,a),m=await Promise.allSettled([u,c]),p=m[0].status==="fulfilled"?m[0].value.data:null,f=m[1].status==="fulfilled"?m[1].value.data:null;let v=null;((N=p.statistics)==null?void 0:N.length)&&(v=p.statistics.map(M=>({min:M[0],max:M[1],avg:M[2],stddev:M[3]})));const g=Re.fromJSON(p.extent),y=Math.ceil(g.width/p.pixelSizeX-.1),d=Math.ceil(g.height/p.pixelSizeY-.1),h=g.spatialReference,F=new ee({x:p.pixelSizeX,y:p.pixelSizeY,spatialReference:h}),b=((S=p.histograms)==null?void 0:S.length)?p.histograms:null,C=new di({origin:p.origin,blockWidth:p.blockWidth,blockHeight:p.blockHeight,firstPyramidLevel:p.firstPyramidLevel,maximumPyramidLevel:p.maxPyramidLevel});return new ot({width:y,height:d,bandCount:p.bandCount,extent:g,spatialReference:h,pixelSize:F,pixelType:p.pixelType.toLowerCase(),statistics:v,histograms:b,keyProperties:f,storageInfo:C})}var _e;let ne=_e=class extends q{constructor(){super(...arguments),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new _e(j({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};n([o({type:[String],json:{name:"angleName",write:!0}})],ne.prototype,"angleNames",void 0),n([o({type:ee,json:{write:!0}})],ne.prototype,"point",void 0),n([o({type:ae,json:{write:!0}})],ne.prototype,"spatialReference",void 0),n([o({type:ue,json:{write:!0}})],ne.prototype,"rasterId",void 0),ne=_e=n([J("esri.rest.support.ImageAngleParameters")],ne);const Gi=ne;var Oe;let B=Oe=class extends q{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.renderingRule=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null}writeGeometry(r,i,e){r!=null&&(i.geometryType=Ee(r),i[e]=r.toJSON())}clone(){return new Oe(j({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};n([o({types:it,json:{read:rt}})],B.prototype,"geometry",void 0),n([P("geometry")],B.prototype,"writeGeometry",null),n([o({type:H,json:{write:!0}})],B.prototype,"mosaicRule",void 0),n([o({type:x,json:{write:!0}})],B.prototype,"renderingRule",void 0),n([o({type:ee,json:{write:!0}})],B.prototype,"pixelSize",void 0),n([o({json:{write:!0}})],B.prototype,"raster",void 0),n([o({type:Je,json:{read:{source:"time"},write:{target:"time"}}})],B.prototype,"timeExtent",void 0),B=Oe=n([J("esri.rest.support.ImageHistogramParameters")],B);const Xe=B;var Ve;let D=Ve=class extends q{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(r,i,e){r!=null&&(i.geometryType=Ee(r),i[e]=JSON.stringify(r.toJSON()))}set mosaicRule(r){let i=r;i&&i.mosaicMethod&&(i=H.fromJSON(A(R({},i.toJSON()),{mosaicMethod:i.mosaicMethod,mosaicOperation:i.mosaicOperation}))),this._set("mosaicRule",i)}writeMosaicRule(r,i,e){r!=null&&(i[e]=JSON.stringify(r.toJSON()))}set renderingRule(r){let i=r;i&&i.rasterFunction&&(i=x.fromJSON(A(R({},i.toJSON()),{rasterFunction:i.rasterFunction,rasterFunctionArguments:i.rasterFunctionArguments}))),this._set("renderingRule",i)}writeRenderingRule(r,i,e){r!=null&&(i[e]=JSON.stringify(r.toJSON())),r.rasterFunctionDefinition&&(i[e]=JSON.stringify(r.rasterFunctionDefinition))}writeRenderingRules(r,i,e){r!=null&&(i[e]=JSON.stringify(r.map(t=>t.rasterFunctionDefinition||t.toJSON())))}writePixelSize(r,i,e){r!=null&&(i[e]=JSON.stringify(r))}writeTimeExtent(r,i,e){if(r!=null){const t=I(r.start)?r.start.getTime():null,s=I(r.end)?r.end.getTime():null;i[e]=t!=null?s!=null?`${t},${s}`:`${t}`:null}}clone(){return new Ve(j({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};n([o({json:{write:!0}})],D.prototype,"geometry",void 0),n([P("geometry")],D.prototype,"writeGeometry",null),n([o({type:H,json:{write:!0}})],D.prototype,"mosaicRule",null),n([P("mosaicRule")],D.prototype,"writeMosaicRule",null),n([o({type:x,json:{write:!0}})],D.prototype,"renderingRule",null),n([P("renderingRule")],D.prototype,"writeRenderingRule",null),n([o({type:[x],json:{write:!0}})],D.prototype,"renderingRules",void 0),n([P("renderingRules")],D.prototype,"writeRenderingRules",null),n([o({type:ee,json:{write:!0}})],D.prototype,"pixelSize",void 0),n([P("pixelSize")],D.prototype,"writePixelSize",null),n([o({type:Boolean,json:{write:!0}})],D.prototype,"returnGeometry",void 0),n([o({type:Boolean,json:{write:!0}})],D.prototype,"returnCatalogItems",void 0),n([o({type:Boolean,json:{write:!0}})],D.prototype,"returnPixelValues",void 0),n([o({type:Number,json:{write:!0}})],D.prototype,"maxItemCount",void 0),n([o({type:Je,json:{write:{target:"time"}}})],D.prototype,"timeExtent",void 0),n([P("timeExtent")],D.prototype,"writeTimeExtent",null),n([o({json:{write:!0}})],D.prototype,"raster",void 0),n([o({json:{write:!0}})],D.prototype,"viewId",void 0),n([o({type:Boolean,json:{write:!0}})],D.prototype,"processAsMultidimensional",void 0),D=Ve=n([J("esri.rest.support.ImageIdentifyParameters")],D);const Ye=D;var je;let le=je=class extends q{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(r,i,e){i.geometries={geometryType:"esriGeometryPoint",geometries:r.map(t=>t.toJSON())}}clone(){return new je({geometries:this.geometries.map(r=>r.clone()),rasterId:this.rasterId})}};n([o({type:[ee],json:{write:!0}})],le.prototype,"geometries",void 0),n([P("geometries")],le.prototype,"writeGeometry",null),n([o({type:ue,json:{write:!0}})],le.prototype,"rasterId",void 0),le=je=n([J("esri.rest.support.ImagePixelLocationParameters")],le);const Bi=le;var Me;let $=Me=class extends q{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(r,i,e){r!=null&&(i.geometryType=Ee(r),i[e]=r.toJSON())}set locations(r){if(r==null?void 0:r.length){const i=new xt({spatialReference:r[0].spatialReference});i.points=r.map(e=>[e.x,e.y]),this._set("locations",r),this.geometry=i}}clone(){return new Me(j({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};n([o({types:it,json:{read:rt}})],$.prototype,"geometry",void 0),n([P("geometry")],$.prototype,"writeGeometry",null),n([o()],$.prototype,"locations",null),n([o({type:String,json:{type:te.jsonValues,read:te.read,write:te.write}})],$.prototype,"interpolation",void 0),n([o({type:H,json:{write:!0}})],$.prototype,"mosaicRule",void 0),n([o({type:[String],json:{write:!0}})],$.prototype,"outFields",void 0),n([o({type:ee,json:{write:!0}})],$.prototype,"pixelSize",void 0),n([o({type:String,json:{write:!0}})],$.prototype,"raster",void 0),n([o({type:Boolean,json:{write:!0}})],$.prototype,"returnFirstValueOnly",void 0),n([o({type:Number,json:{write:!0}})],$.prototype,"sampleDistance",void 0),n([o({type:Number,json:{write:!0}})],$.prototype,"sampleCount",void 0),n([o({type:Number,json:{write:!0}})],$.prototype,"sliceId",void 0),n([o({type:Je,json:{read:{source:"time"},write:{target:"time"}}})],$.prototype,"timeExtent",void 0),$=Me=n([J("esri.rest.support.ImageSampleParameters")],$);const Wi=$,et=Ft.getLogger("esri.layers.mixins.ArcGISImageService"),Ne=Ae()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),Ki=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Zi=Mt(At,{min:0,max:255});function Xi(r){var e;if(!r)return null;const i=(e=JSON.stringify(r).match(/"rasterFunction":"(.*?")/gi))==null?void 0:e.map(t=>t.replace('"rasterFunction":"',"").replace('"',""));return i?i.join("/"):null}const Yi=r=>{let i=class extends r{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._defaultServiceMosaicRule=null,this._serviceSourceType=null,this._serviceSupportsMosaicRule=null,this.rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandCount=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelSizeX=null,this.pixelSizeY=null,this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.symbolizer=null,this.rasterAttributeTable=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new T({layer:this}))}readDefaultServiceMosaicRule(e,t){return this._serviceSupportsMosaicRule?H.fromJSON(t):null}readServiceSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||I(this.rasterFunctionInfos)&&this.rasterFunctionInfos.length<1||I(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)}),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(s=>typeof s=="number"))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,s){e!=null&&this.format!=="lerc"&&(t[s]=e)}writeCompressionTolerance(e,t,s){this.format==="lerc"&&e!=null&&(t[s]=e)}get fieldsIndex(){return this.fields?new Tt(this.fields):null}set format(e){e&&Ki.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return t.serviceDataType==="esriImageServiceDataTypeVector-UV"||t.serviceDataType==="esriImageServiceDataTypeVector-MagDir"||this.pixelFilter!=null?"lerc":"jpgpng"}readMinScale(e,t){return t.minLOD!=null&&t.maxLOD!=null?e:0}readMaxScale(e,t){return t.minLOD!=null&&t.maxLOD!=null?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=H.fromJSON(A(R({},t.toJSON()),{mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation}))),this._set("mosaicRule",t)}readMosaicRule(e,t){const s=e||t.mosaicRule;return s?H.fromJSON(s):this._isMosaicRuleSupported(t)?H.fromJSON(t):null}writeMosaicRule(e,t,s){let a=this.mosaicRule;const l=this.definitionExpression;a?l&&l!==a.where&&(a=a.clone(),a.where=l):l&&(a=new H({where:l})),this._isValidCustomizedMosaicRule(a)&&(t[s]=a.toJSON())}writeNoData(e,t,s){e!=null&&typeof e=="number"&&(t[s]=Zi(e))}readObjectIdField(e,t){if(!e){const s=t.fields.filter(a=>a.type==="esriFieldTypeOID"||a.type==="oid");e=s&&s[0]&&s[0].name}return e}get parsedUrl(){return this.url?Dt(this.url):null}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("renderer",e)}readRenderer(e,t,s){var u,c;const a=(c=(u=t==null?void 0:t.layerDefinition)==null?void 0:u.drawingInfo)==null?void 0:c.renderer,l=ii(a,s);return l==null?null:(l.type==="vector-field"&&t.symbolTileSize&&!a.symbolTileSize&&(l.symbolTileSize=t.symbolTileSize),lt(l)||et.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),l)}writeRenderer(e,t,s){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),e.type==="vector-field"&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this.rasterAttributeTableFieldPrefix||"Raster.",t=new re({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),s=new re({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),a=new re({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let l=this.fields?j(this.fields):[];l.push(s),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&l.push(t),this.version>=10.4&&I(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some(c=>c.name.toLowerCase()==="none")&&l.push(a),I(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter(c=>c.name.toLowerCase()!=="none").forEach(c=>{l.push(new re({name:"Raster.ServicePixelValue."+c.name,alias:c.name,domain:null,editable:!1,length:50,type:"string"}))}),this._isVectorDataSet()&&(l.push(new re({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),l.push(new re({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const u=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(u&&u.length>0){const c=u.filter(m=>m.type!=="esriFieldTypeOID"&&m.name.toLowerCase()!=="value").map(m=>{const p=j(m);return p.name=e+m.name,p});l=l.concat(c)}return l}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=x.fromJSON(A(R({},t.toJSON()),{rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments}))),this._set("renderingRule",t)}readRenderingRule(e,t){const s=t.rasterFunctionInfos;return t.renderingRule||s&&s.length&&s[0].name!=="None"?this._isRFTJson(t.renderingRule)?x.fromJSON({rasterFunctionDefinition:t.renderingRule}):x.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,s){const a=e.toJSON();a.rasterFunctionDefinition?t[s]=a.rasterFunctionDefinition:t[s]=a}readSpatialReference(e,t){const s=e||t.extent.spatialReference;return s?ae.fromJSON(s):null}readPixelType(e){return Ne.fromJSON(e)||e}writePixelType(e,t,s){(X(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[s]=Ne.toJSON(e))}readVersion(e,t){let s=t.currentVersion;return s||(s=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),s}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let s=e;if(!this._isPicture()&&this.renderer&&this.symbolizer&&!this.pixelFilter){const a=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),l=this._rasterJobHandler.instance,{bandIds:u}=this;if(l){a&&(this.symbolizer.bind(),await l.updateSymbolizer(this.symbolizer,t),this._cachedRendererJson=this.renderer.toJSON());const c=await l.symbolize(R({bandIds:u},e),t);s={extent:e.extent,pixelBlock:c}}else s={extent:e.extent,pixelBlock:this.symbolizer.symbolize(R({bandIds:u},e))}}return s}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(await this._fetchCapabilities(t==null?void 0:t.signal),!this.capabilities.operations.supportsComputeAngles)throw new L("imagery-layer:compute-angles","this operation is not supported on the input image service");return e=se(Gi,e).clone(),Li(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(await this._fetchCapabilities(t==null?void 0:t.signal),!this.capabilities.operations.supportsComputePixelLocation)throw new L("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=se(Bi,e).clone(),qi(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(await this._fetchCapabilities(t==null?void 0:t.signal),!this.capabilities.operations.supportsComputeHistograms)throw new L("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=se(Xe,e).clone();const{raster:s,mosaicRule:a,renderingRule:l}=this;return l&&e.renderingRule==null&&(e.renderingRule=l),a&&e.mosaicRule==null&&(e.mosaicRule=a),s&&e.raster==null&&(e.raster=s),Hi(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(await this._fetchCapabilities(t==null?void 0:t.signal),!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new L("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=se(Xe,e).clone();const{raster:s,mosaicRule:a,renderingRule:l}=this;return l&&e.renderingRule==null&&(e.renderingRule=l),a&&e.mosaicRule==null&&(e.mosaicRule=a),s&&e.raster==null&&(e.raster=s),ki(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return I(t)?t.get(e):void 0}getFieldDomain(e,t){const s=this.getField(e);return s?s.domain:null}fetchImage(e,t,s,a={}){if(e==null||t==null||s==null)return Promise.reject(new L("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const l=this.renderer||this.symbolizer?this.generateRasterInfo(this.renderingRule,{signal:a.signal}):null;return Pt(l).then(u=>{u&&(this.rasterInfo=u);const c={imageServiceParameters:this.getExportImageServiceParameters(e,t,s,a.timeExtent),imageProps:{extent:e,width:t,height:s,format:this.format},requestAsImageElement:a.requestAsImageElement&&!this.pixelFilter||!1,signal:a.signal};return this._requestArrayBuffer(c)})}fetchKeyProperties(e){return _(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e==null?void 0:e.renderingRule:null})}).then(t=>t.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new L("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):_(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e==null?void 0:e.renderingRule:null})}).then(t=>tt.fromJSON(t.data))}getCatalogItemRasterInfo(e,t){const s=A(R({},t),{query:this._getQueryParams()});return Qi(this.parsedUrl.path,e,s)}async getCatalogItemICSInfo(e,t){var qe,ke,He;const{data:s}=await _(this.parsedUrl.path+"/"+e+"/info/ics",R({query:this._getQueryParams()},t)),a=s&&s.ics;if(!a)return;let l=null;try{l=(await _(this.parsedUrl.path+"/"+e+"/info",R({query:this._getQueryParams()},t))).data.extent}catch{}if(!l||!l.spatialReference)return{ics:a,icsToPixelTransform:null,icsExtent:null,northDirection:null};const u=this.version>=10.7?_(this.parsedUrl.path+"/"+e+"/info/icstopixel",R({query:this._getQueryParams()},t)).then(w=>w.data).catch(()=>({})):{},c=l.spatialReference,m={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[l]}),inSR:c.wkid||JSON.stringify(c),outSR:"0:"+e},p=_(this.parsedUrl.path+"/project",R({query:this._getQueryParams(m)},t)).then(w=>w.data).catch(()=>({})),f=5,v=(l.xmin+l.xmax)/2,g=(l.ymax-l.ymin)/(f+1),y=l.ymin+g,d=[];for(let w=0;w<f;w++)d.push({x:v,y:y+g*w});const h={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:d}),inSR:c.wkid||JSON.stringify(c),outSR:"0:"+e},F=_(this.parsedUrl.path+"/project",R({query:this._getQueryParams(h)},t)).then(w=>w.data).catch(()=>({})),b=await Promise.all([u,p,F]);let C=b[0].ipxf;if(C==null){const w=(qe=a.geodataXform)==null?void 0:qe.xf_0;((ke=w==null?void 0:w.name)==null?void 0:ke.toLowerCase())==="topup"&&((He=w==null?void 0:w.coefficients)==null?void 0:He.length)===6&&(C={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:w.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const N=Re.fromJSON(b[1]&&b[1].geometries&&b[1].geometries[0]);N&&(N.spatialReference=new ae({wkid:0,imageCoordinateSystem:a}));const S=b[2].geometries?b[2].geometries.filter(w=>w!=null&&w.x!=null&&w.y!=null&&w.x!=="NaN"&&w.y!=="NaN"):[],M=S.length;if(M<3)return{ics:a,icsToPixelTransform:C,icsExtent:N,northDirection:null};let K=0,me=0,fe=0,ge=0;for(let w=0;w<M;w++)K+=S[w].x,me+=S[w].y,fe+=S[w].x*S[w].x,ge+=S[w].x*S[w].y;const z=(M*ge-K*me)/(M*fe-K*K);let G=0;const Z=S[f-1].x>S[0].x,Le=S[f-1].y>S[0].y;return z===1/0?G=Le?90:270:z===0?G=Z?0:180:z>0?G=Z?180*Math.atan(z)/Math.PI:180*Math.atan(z)/Math.PI+180:z<0&&(G=Le?180+180*Math.atan(z)/Math.PI:360+180*Math.atan(z)/Math.PI),{ics:a,icsToPixelTransform:C,icsExtent:N,northDirection:G}}async generateRasterInfo(e,t){var l;if((!e||((l=e==null?void 0:e.functionName)==null?void 0:l.toLowerCase())==="none"||this._isVectorFieldResampleFunction(e))&&I(this.serviceRasterInfo))return this.serviceRasterInfo;const s=Xi(e);if(this._functionRasterInfos[s])return this._functionRasterInfos[s];const a=this._generateRasterInfo(e,t);this._functionRasterInfos[s]=a;try{return await a}catch{return this._functionRasterInfos[s]=null,null}}getExportImageServiceParameters(e,t,s,a){var d;e=e.clone().shiftCentralMeridian();const l=ht(e.spatialReference,this.parsedUrl.path);I(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const u=this.exportImageServiceParameters.toJSON(),{bandIds:c,noData:m}=u;let{renderingRule:p}=u;const f=(d=this.renderingRule)==null?void 0:d.rasterFunctionDefinition,v=!this.renderer||this.renderer.type==="raster-stretch";if((c==null?void 0:c.length)&&this._hasRenderingRule(this.renderingRule)&&!f&&v){const h={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:c}};if(p.rasterFunction==="Stretch")h.rasterFunctionArguments.Raster=p.rasterFunctionArguments.Raster,p.rasterFunctionArguments.Raster=h;else if(p.rasterFunction==="Colormap"){const F=p.rasterFunctionArguments.Raster;(F==null?void 0:F.rasterFunction)==="Stretch"?(h.rasterFunctionArguments.Raster=F.rasterFunctionArguments.Raster,F.rasterFunctionArguments.Raster=h):(h.rasterFunctionArguments.Raster=F,p.rasterFunctionArguments.Raster=h)}else h.rasterFunctionArguments.Raster=p,p=h;u.bandIds=void 0}else u.bandIds=c==null?void 0:c.join(",");m instanceof Array&&m.length>0&&(u.noData=m.join(","));const g=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,a):null;u.mosaicRule=g&&JSON.stringify(g),u.renderingRule=this._getRenderingRuleString(x.fromJSON(p));const y={};if(a){const{start:h,end:F}=a.toJSON();h&&F&&h===F?y.time=""+h:h==null&&F==null||(y.time=`${h==null?"null":h},${F==null?"null":F}`)}return R(R({bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:l,imageSR:l,size:t+","+s},u),y)}async getSamples(e,t){if(await this._fetchCapabilities(t==null?void 0:t.signal),!this.capabilities.operations.supportsGetSamples)throw new L("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=se(Wi,e).clone();const{raster:s}=this;return s&&e.raster==null&&(e.raster=s),Ui(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(await this._fetchCapabilities(t==null?void 0:t.signal),!this.capabilities.operations.supportsIdentify)throw new L("imagery-layer:query-rasters","query operation is not supported on the input image service");e=se(Ye,e).clone();const{raster:s,mosaicRule:a,renderingRule:l}=this;if(l&&e.renderingRule==null&&(e.renderingRule=l),a&&e.mosaicRule==null){const u=this._combineMosaicRuleWithTimeExtent(a,e.timeExtent);e.mosaicRule=Ct(u)}return s&&e.raster==null&&(e.raster=s),Ze(this.url,e,this._getRequestOptions(t))}createQuery(){const e=new Fe;return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e}async queryRasters(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),_t(this.url,e,t)}async queryObjectIds(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),vi(this.url,e,t)}async queryRasterCount(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),bi(this.url,e,t)}async queryVisibleRasters(e,t){var b,C;if(!e)throw new L("imagery-layer: query-visible-rasters","missing query parameter");const{pixelSize:s,returnDomainValues:a,returnTopmostRaster:l,showNoDataRecords:u}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let c=!1,m=null,p=null;const f="raster.servicepixelvalue",v=this.rasterFunctionNamesIndex;if(I(e.outFields)&&(c=e.outFields.some(N=>!N.toLowerCase().includes(f)),this.version>=10.4)){const N=e.outFields.filter(S=>S.toLowerCase().includes(f)&&S.length>f.length).map(S=>{const M=S.slice(f.length+1);return[this._updateRenderingRulesFunctionName(M,v),M]});m=N.map(S=>new x({functionName:S[0]})),p=N.map(S=>S[1]),m.length===0?this.renderingRule?(m.push(this.renderingRule),p.push(this.renderingRule.functionName)):m=null:this.renderingRule&&!m.some(S=>S.functionName===this.renderingRule.functionName)&&(m.push(this.renderingRule),p.push(this.renderingRule.functionName))}const g=X(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),y=e.timeExtent||this.timeExtent,d=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,y),h=this._getQueryParams({geometry:e.geometry,timeExtent:y,mosaicRule:d,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:m,pixelSize:s,returnCatalogItems:c,returnGeometry:g,raster:this.raster,maxItemCount:l?1:null});delete h.f;const F=new Ye(h);try{await this.generateRasterInfo(this.renderingRule);const N=await Ze(this.url,F,{signal:t==null?void 0:t.signal,query:R({},this.customParameters)}),S=e.outFields,M=N.value.toLowerCase().includes("nodata");if(!(c&&!g&&((b=N==null?void 0:N.catalogItems)==null?void 0:b.features.length)&&(u||!M)))return this._processVisibleRastersResponse(N,{returnDomainValues:a,templateRRFunctionNames:p,showNoDataRecords:u,templateFields:S});const K=this.objectIdField||"ObjectId",me=N.catalogItems.features,fe=me.map(G=>{var Z;return(Z=G.attributes)==null?void 0:Z[K]}),ge=new Fe({objectIds:fe,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[K]}),z=await this.queryRasters(ge);return((C=z==null?void 0:z.features)==null?void 0:C.length)&&z.features.forEach(G=>{me.forEach(Z=>{Z.attributes[K]===G.attributes[K]&&(Z.geometry=new Ot(G.geometry),I(e.outSpatialReference)&&(Z.geometry.spatialReference=e.outSpatialReference))})}),this._processVisibleRastersResponse(N,{returnDomainValues:a,templateRRFunctionNames:p,showNoDataRecords:u,templateFields:S})}catch{throw new L("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const s=_(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then(u=>{var c;return(c=u.data)==null?void 0:c.statistics}),a=_(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then(u=>{var c;return(c=u.data)==null?void 0:c.histograms}),l=await Promise.all([s,a]);return l[0]&&l[0].forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation}),{statistics:l[0]||null,histograms:l[1]||null}}async createFlowMesh(e,t){const s=this._rasterJobHandler.instance;return s?s.createFlowMesh(e,t):hi(e.meshType,e.simulationSettings,e.flowData,I(t.signal)?t.signal:new AbortController().signal)}async _fetchService(e){await this._fetchServiceInfo(e),I(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,s=I(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):ri(this.parsedUrl.path,t,{signal:e,query:this._getQueryParams()}).then(u=>(this._set("serviceRasterInfo",u),u)),a=this._hasRenderingRule(this.renderingRule)?this.generateRasterInfo(this.renderingRule,{signal:e}):null,l=this._getRasterFunctionInfos();return Promise.all([s,a,l]).then(u=>{u[1]?this._set("rasterInfo",u[1]):this._set("rasterInfo",u[0]),u[2]&&this._set("rasterFunctionInfos",u[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set("renderer",null),et.warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("renderer",this._configRenderer(this.renderer)),this.own(Vt(()=>this.renderingRule,m=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(m).then(p=>{p&&(this.rasterInfo=p)})}));const{serviceRasterInfo:c}=this;I(c)&&c.multidimensionalInfo&&this._updateMultidimensionalDefinition(c)})}_combineMosaicRuleWithTimeExtent(e,t){var g;const s=this.timeInfo;if(X(e)||X(this.multidimensionalInfo)||X(t)||X(s==null?void 0:s.startField))return e;const{startField:a}=s,l=this.multidimensionalInfo.variables.some(y=>y.dimensions.some(d=>d.name===a))?a:"StdTime";if(e=e.clone(),this._serviceSourceType==="mosaic-dataset")return e.multidimensionalDefinition=(g=e.multidimensionalDefinition)==null?void 0:g.filter(y=>y.dimensionName!==l),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const u=e.multidimensionalDefinition.filter(y=>y.dimensionName===l),c=I(t.start)?t.start.getTime():null,m=I(t.end)?t.end.getTime():null,p=c==null||m==null||c===m,f=p?[c||m]:[[c,m]],v=this.version>=10.8;if(u.length)u.forEach(y=>{y.dimensionName===l&&(v?(y.dimensionName=null,y.isSlice=null,y.values=null):(y.isSlice=p,y.values=f))});else if(!v){const y=e.multidimensionalDefinition.filter(d=>d.variableName!=null&&d.dimensionName==null);y.length?y.forEach(d=>{d.dimensionName=l,d.isSlice=p,d.values=f}):e.multidimensionalDefinition.push(new st({variableName:"",dimensionName:l,isSlice:p,values:f}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return X(e)?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(t=>!(!t.variableName&&!t.dimensionName)),e.multidimensionalDefinition.length===0&&(e.multidimensionalDefinition=null)),this._serviceSourceType!=="mosaic-dataset"&&e.multidimensionalDefinition==null?null:e)}async _prepareForQuery(e,t){if(await this._fetchCapabilities(t==null?void 0:t.signal),!this.capabilities.operations.supportsQuery)throw new L("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=I(e)?se(Fe,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query=A(R({},t.query),{raster:this.raster})),{query:e,requestOptions:t}}async _initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const e=new pi;this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e},()=>null),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:s}=this;return e.type==="unique-value"&&this._hasRenderingRule(s)&&t.bandCount===1&&["u8","s8"].includes(t.pixelType)||si(this.rasterInfo).includes(this.renderer.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var s;let t=this.sourceJSON;if(!t){const{data:a,ssl:l}=await _(this.parsedUrl.path,{query:this._getQueryParams(),signal:e});t=a,this.sourceJSON=t,l&&(this.url=this.url.replace(/^http:/i,"https:"))}if(((s=t.capabilities)==null?void 0:s.toLowerCase().split(",").map(a=>a.trim()).indexOf("tilesonly"))>-1)throw new L("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(t,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){var t;return e.serviceSourceType?e.serviceSourceType==="esriImageServiceSourceTypeMosaicDataset":((t=e.fields)==null?void 0:t.length)>0}_isMosaicRuleSupported(e){var a;if(!e)return!1;const t=this._isMosaicDataset(e),s=e.currentVersion>=10.71&&e.hasMultidimensions&&e.timeInfo&&!(e.objectIdField&&((a=e.fields)==null?void 0:a.length)>1);return t||s}_isVectorFieldResampleFunction(e){if(X(e))return!1;const{functionName:t,functionArguments:s}=e,a=(t==null?void 0:t.toLowerCase())==="resample",l=(s==null?void 0:s.ResampleType)||(s==null?void 0:s.resampleType);return a&&(l===7||l===10)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){var t,s;if(!this._isPicture()&&!this.pixelFilter||this._isVectorDataSet()){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const l=ni(this.rasterInfo);!l||this.rasterInfo.bandCount===3&&l[0]===0&&l[1]===1&&l[2]===2||(this.bandIds=l)}e||(e=ai(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:(s=(t=this.mosaicRule)==null?void 0:t.multidimensionalDefinition)==null?void 0:s[0].variableName}));const a=oi(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=a,this.symbolizer.rasterInfo=this.rasterInfo):this.symbolizer=new yi({rendererJSON:a,rasterInfo:this.rasterInfo}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return e==null?e:{extent:e.extent&&e.extent.clone(),pixelBlock:I(e.pixelBlock)&&e.pixelBlock.clone()}}_getQueryParams(e){I(e==null?void 0:e.renderingRule)&&typeof e.renderingRule!="string"&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:s}=this;return R(R({raster:t,viewId:s,f:"json"},e),this.customParameters)}_getRequestOptions(e){return A(R({},e),{query:R(R({},e==null?void 0:e.query),this.customParameters)})}_decodePixelBlock(e,t,s){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):Ge(e,t,s)}async _getRasterFunctionInfos(e){var s;const t=this.sourceJSON.rasterFunctionInfos;return this.serviceRasterInfo?t:t&&this.version>=10.3?t.length===1&&t[0].name.toLowerCase()==="none"?t:(s=(await _(this.parsedUrl.path+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data)==null?void 0:s.rasterFunctionInfos:null}async _requestArrayBuffer(e){var g;const{imageProps:t,requestAsImageElement:s,signal:a}=e;if(s&&!this.pixelFilter&&((g=t.format)==null?void 0:g.indexOf("png"))>-1)return{imageElement:(await _(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams(R({f:"image"},e.imageServiceParameters)),signal:a})).data,params:t};const l=this._initJobHandler(),u=_(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams(R({f:"image"},e.imageServiceParameters)),signal:a}),c=(await Promise.all([u,l]))[0].data,m=t.format||"jpgpng";let p=m;if(p!=="bsq"&&p!=="bip"&&(p=fi(c)),!p)throw new L("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(c)));const f={signal:a};return{pixelData:{pixelBlock:await(m==="gif"||m==="bmp"||m.includes("png")&&(p==="png"||p==="jpg")?Ge(c,R({useCanvas:!0},t),f):this._decodePixelBlock(c,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:m},f)),extent:t.extent},params:t}}_generateRasterInfo(e,t){const s=A(R({},t),{query:this._getQueryParams()});return li(this.parsedUrl.path,e,s)}_isValidCustomizedMosaicRule(e){var t;return e&&JSON.stringify(e.toJSON())!==JSON.stringify((t=this._defaultServiceMosaicRule)==null?void 0:t.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=ui(e);if(I(t)&&t.length>0){this.mosaicRule=this.mosaicRule||new H;const s=this.mosaicRule.multidimensionalDefinition;(!s||s&&s.length<=0)&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){t=t||{};const s=e.value,{templateRRFunctionNames:a,showNoDataRecords:l,returnDomainValues:u,templateFields:c}=t,m=e.processedValues;let p=e.catalogItems&&e.catalogItems.features,f=e.properties&&e.properties.Values&&e.properties.Values.map(b=>b.replace(/ /gi,", "))||[];const v=this.objectIdField||"ObjectId",g=typeof s=="string"&&s.toLowerCase().includes("nodata"),y=[];if(s&&!p&&!g){const b={};b[v]=0,f=[s],p=[new jt(this.fullExtent,null,b)]}if(!p)return[];let d,h,F;this._updateResponseFieldNames(p,c),g&&!l&&(p=[]);for(let b=0;b<p.length;b++){if(d=p[b],s!=null){if(h=f[b],F=this.renderingRule&&m&&m.length>0&&a&&a.length>0&&a.includes(this.renderingRule.functionName)?m[a.indexOf(this.renderingRule.functionName)]:s,h.toLowerCase()==="nodata"&&!l)continue;const C="Raster.ItemPixelValue",N="Raster.ServicePixelValue";d.attributes[C]=h,d.attributes[N]=F,this._updateFeatureWithMagDirValues(d,h);const S=this.fields&&this.fields.length>0;let M=this.renderingRule&&I(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?S?h:s:F;this.renderingRule||(M=S?h:s),this._updateFeatureWithRasterAttributeTableValues(d,M)}if(d.sourceLayer=d.layer=this,u&&this._updateFeatureWithDomainValues(d),a&&m&&a.length===m.length)for(let C=0;C<a.length;C++){const N="Raster.ServicePixelValue."+a[C];d.attributes[N]=m[C]}y.push(p[b])}return y}_updateFeatureWithRasterAttributeTableValues(e,t){const s=this.rasterInfo&&this.rasterInfo.attributeTable||I(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,a=s&&s.features;if(!a)return;const l=s.fields,u=l.map(p=>p.name).filter(p=>p.toLowerCase()==="value"),c=u&&u[0];if(!c)return;const m=a.filter(p=>p.attributes[c]===(t!=null?parseInt(t,10):null));m&&m[0]&&l.forEach(p=>{const f=this.rasterAttributeTableFieldPrefix+p.name;e.attributes[f]=m[0].attributes[p.name]})}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const s=t.split(/,\s*/).map(m=>parseFloat(m)),a=s.map(m=>[m]),l=s.map(m=>({minValue:m,maxValue:m,noDataValue:null})),u=new Ri({height:1,width:1,pixelType:"f32",pixels:a,statistics:l});this.pixelFilter!=null&&this.pixelFilter({pixelBlock:u,extent:new Re(0,0,0,0,this.spatialReference)});const c=this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"?[u.pixels[0][0],u.pixels[1][0]]:gi([u.pixels[0][0],u.pixels[1][0]]);e.attributes["Raster.Magnitude"]=c[0],e.attributes["Raster.Direction"]=c[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter(s=>s.domain&&s.domain.type==="coded-value");t!=null&&t.forEach(s=>{const a=e.attributes[s.name];if(a!=null){const l=s.domain.codedValues.find(u=>u.code===a);l&&(e.attributes[s.name]=l.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const s=this.fieldsIndex;X(s)||e.forEach(a=>{if(a&&a.attributes){for(const l of t)if(s.has(l)){const u=s.get(l).name;u!==l&&(a.attributes[l]=a.attributes[u],delete a.attributes[u])}}})}_getRenderingRuleString(e){var t;if(this._hasRenderingRule(e)){let s=e.toJSON();return s=(t=s.rasterFunctionDefinition)!=null?t:s,(s.thumbnail||s.thumbnailEx)&&(s.thumbnail=s.thumbnailEx=null),JSON.stringify(s)}return null}_hasRenderingRule(e){return e&&e.functionName&&e.functionName.toLowerCase()!=="none"}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if(e==="Raw")return e.replace("Raw","None");const s=e.toLowerCase().replace(/ /gi,"_");return t.has(s)?t.get(s):e}_isRFTJson(e){return e&&e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(f=>f.trim()):["image","catalog"],{currentVersion:s,advancedQueryCapabilities:a,maxRecordCount:l}=e,u=t.includes("image"),c=e.serviceDataType==="esriImageServiceDataTypeElevation",m=!!(e.spatialReference||e.extent&&e.extent.spatialReference),p=t.includes("edit");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:u,supportsExportImage:u,supportsIdentify:u,supportsMeasure:t.includes("mensuration")&&m,supportsDownload:t.includes("download"),supportsQuery:t.includes("catalog")&&e.fields&&e.fields.length>0,supportsGetSamples:s>=10.2&&u,supportsProject:s>=10.3&&u,supportsComputeStatisticsHistograms:s>=10.4&&u,supportsQueryBoundary:s>=10.6&&u,supportsCalculateVolume:s>=10.7&&c,supportsComputePixelLocation:s>=10.7&&t.includes("catalog"),supportsComputeAngles:s>=10.91,supportsAdd:p,supportsDelete:p,supportsEditing:p,supportsUpdate:p,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1},query:{maxRecordCount:l,maxRecordCountFactor:void 0,supportsStatistics:!!(a==null?void 0:a.supportsStatistics),supportsOrderBy:!!(a==null?void 0:a.supportsOrderBy),supportsDistinct:!!(a==null?void 0:a.supportsDistinct),supportsPagination:!!(a==null?void 0:a.supportsPagination),supportsStandardizedQueriesOnly:!!(a==null?void 0:a.useStandardizedQueries),supportsPercentileStatistics:!!(a==null?void 0:a.supportsPercentileStatistics),supportsCentroid:!!(a==null?void 0:a.supportsReturningGeometryCentroid),supportsDistance:!!(a==null?void 0:a.supportsQueryWithDistance),supportsExtent:!!(a==null?void 0:a.supportsReturningQueryExtent),supportsGeometryProperties:!!(a==null?void 0:a.supportsReturningGeometryProperties),supportsHavingClause:!!(a==null?void 0:a.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!(a==null?void 0:a.supportsDefaultSR),supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}}};return n([o()],i.prototype,"_functionRasterInfos",void 0),n([o()],i.prototype,"_rasterJobHandler",void 0),n([o({dependsOn:["_serviceSupportsMosaicRule"]})],i.prototype,"_defaultServiceMosaicRule",void 0),n([O("_defaultServiceMosaicRule",["defaultMosaicMethod"])],i.prototype,"readDefaultServiceMosaicRule",null),n([o()],i.prototype,"_cachedRendererJson",void 0),n([o({readOnly:!0})],i.prototype,"_serviceSourceType",void 0),n([O("_serviceSourceType",["serviceSourceType","fields"])],i.prototype,"readServiceSourceType",null),n([o({readOnly:!0})],i.prototype,"_serviceSupportsMosaicRule",void 0),n([O("_serviceSupportsMosaicRule",["currentVersion","fields"])],i.prototype,"readServiceSupportsMosaicRule",null),n([o()],i.prototype,"rasterAttributeTableFieldPrefix",void 0),n([o({readOnly:!0})],i.prototype,"rasterFunctionNamesIndex",null),n([o()],i.prototype,"adjustAspectRatio",void 0),n([o({readOnly:!0}),Q("serviceRasterInfo.bandCount")],i.prototype,"bandCount",void 0),n([o({type:[ue],json:{write:!0}})],i.prototype,"bandIds",void 0),n([O("bandIds")],i.prototype,"readBandIds",null),n([o({readOnly:!0,json:{read:!1}})],i.prototype,"capabilities",void 0),n([O("service","capabilities",["capabilities","currentVersion","serviceDataType"])],i.prototype,"readCapabilities",null),n([o({type:Number})],i.prototype,"compressionQuality",void 0),n([P("compressionQuality")],i.prototype,"writeCompressionQuality",null),n([o({type:Number})],i.prototype,"compressionTolerance",void 0),n([P("compressionTolerance")],i.prototype,"writeCompressionTolerance",null),n([o({json:{read:{source:"copyrightText"}}})],i.prototype,"copyright",void 0),n([o({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],i.prototype,"definitionExpression",void 0),n([o({readOnly:!0,constructOnly:!0})],i.prototype,"exportImageServiceParameters",void 0),n([o()],i.prototype,"rasterInfo",void 0),n([o({readOnly:!0,type:[re]})],i.prototype,"fields",void 0),n([o({readOnly:!0})],i.prototype,"fieldsIndex",null),n([o({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],i.prototype,"format",null),n([O("service","format",["serviceDataType"])],i.prototype,"readFormat",null),n([o({type:Re})],i.prototype,"fullExtent",void 0),n([o({readOnly:!0})],i.prototype,"hasMultidimensions",void 0),n([o({json:{read:{source:"maxImageHeight"}}})],i.prototype,"imageMaxHeight",void 0),n([o({json:{read:{source:"maxImageWidth"}}})],i.prototype,"imageMaxWidth",void 0),n([o({type:String,json:{type:te.jsonValues,read:te.read,write:te.write}})],i.prototype,"interpolation",void 0),n([o()],i.prototype,"minScale",void 0),n([O("service","minScale")],i.prototype,"readMinScale",null),n([o()],i.prototype,"maxScale",void 0),n([O("service","maxScale")],i.prototype,"readMaxScale",null),n([o({type:H})],i.prototype,"mosaicRule",null),n([O("mosaicRule",["mosaicRule","defaultMosaicMethod"])],i.prototype,"readMosaicRule",null),n([P("mosaicRule")],i.prototype,"writeMosaicRule",null),n([o({readOnly:!0}),Q("serviceRasterInfo.multidimensionalInfo")],i.prototype,"multidimensionalInfo",void 0),n([o({json:{type:ue}})],i.prototype,"noData",void 0),n([P("noData")],i.prototype,"writeNoData",null),n([o({type:String,json:{type:he.jsonValues,read:he.read,write:he.write}})],i.prototype,"noDataInterpretation",void 0),n([o({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],i.prototype,"objectIdField",void 0),n([O("objectIdField")],i.prototype,"readObjectIdField",null),n([o({})],i.prototype,"geometryType",void 0),n([o({})],i.prototype,"typeIdField",void 0),n([o({})],i.prototype,"types",void 0),n([o({readOnly:!0})],i.prototype,"parsedUrl",null),n([o({readOnly:!0}),Q("serviceRasterInfo.pixelSize.x")],i.prototype,"pixelSizeX",void 0),n([o({readOnly:!0}),Q("serviceRasterInfo.pixelSize.y")],i.prototype,"pixelSizeY",void 0),n([o({type:Function})],i.prototype,"pixelFilter",void 0),n([o()],i.prototype,"raster",void 0),n([o()],i.prototype,"viewId",void 0),n([o({types:ei,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:ti,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&e.type!=="vector-field"&&e.type!=="flow"})}}}}})],i.prototype,"renderer",null),n([O("renderer")],i.prototype,"readRenderer",null),n([P("renderer")],i.prototype,"writeRenderer",null),n([o()],i.prototype,"symbolizer",void 0),n([o(It)],i.prototype,"opacity",void 0),n([o({readOnly:!0}),Q("serviceRasterInfo.attributeTable")],i.prototype,"rasterAttributeTable",void 0),n([o({readOnly:!0})],i.prototype,"rasterFields",null),n([o({constructOnly:!0})],i.prototype,"rasterFunctionInfos",void 0),n([o({type:x})],i.prototype,"renderingRule",null),n([O("renderingRule",["renderingRule","rasterFunctionInfos"])],i.prototype,"readRenderingRule",null),n([P("renderingRule")],i.prototype,"writeRenderingRule",null),n([o()],i.prototype,"serviceDataType",void 0),n([o({readOnly:!0,type:ae})],i.prototype,"spatialReference",void 0),n([O("spatialReference",["spatialReference","extent"])],i.prototype,"readSpatialReference",null),n([o({json:{type:Ne.jsonValues}})],i.prototype,"pixelType",void 0),n([O("pixelType")],i.prototype,"readPixelType",null),n([P("pixelType")],i.prototype,"writePixelType",null),n([o({constructOnly:!0,type:ot})],i.prototype,"serviceRasterInfo",void 0),n([o()],i.prototype,"sourceJSON",void 0),n([o(Nt)],i.prototype,"url",void 0),n([o({readOnly:!0})],i.prototype,"version",void 0),n([O("version",["currentVersion","fields","timeInfo"])],i.prototype,"readVersion",null),i=n([J("esri.layers.mixins.ArcGISImageService")],i),i};let k=class extends $t(Jt(Et(zt(Lt(qt(Yi(kt(Ht(Ut(Qt)))))))))){constructor(...r){super(...r),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(r,i){return typeof r=="string"?R({url:r},i):r}load(r){const i=I(r)?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},r).catch(Gt).then(()=>this._fetchService(i))),Promise.resolve(this)}writeOperationalLayerType(r,i,e){var s;const t=((s=this.renderer)==null?void 0:s.type)==="vector-field";i[e]=t?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(r){const i=this.rasterFields,e=this.title,t=new Set;let s=!1,a=!1;this.capabilities&&(s=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,a=this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir");const l=new Set;s&&l.add("raster.itempixelvalue");for(const u of i){const c=u.name.toLowerCase();l.has(c)||c.includes("raster.servicepixelvalue.")||t.add(u.name)}return a&&t.add("raster.magnitude").add("raster.direction"),Bt({fields:i,title:e},A(R({},r),{visibleFieldNames:t}))}queryFeatures(r,i){return this.queryRasters(r,i).then(e=>{if(e==null?void 0:e.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e})}queryFeatureCount(r,i){return this.queryRasterCount(r,i)}redraw(){this.emit("redraw")}serviceSupportsSpatialReference(r){return Wt(this,r)}};n([o(Kt)],k.prototype,"legendEnabled",void 0),n([o({type:["show","hide"]})],k.prototype,"listMode",void 0),n([o({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],k.prototype,"isReference",void 0),n([o({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],k.prototype,"operationalLayerType",void 0),n([P("web-map","operationalLayerType")],k.prototype,"writeOperationalLayerType",null),n([o(Zt)],k.prototype,"popupEnabled",void 0),n([o({type:Xt,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],k.prototype,"popupTemplate",void 0),n([o({readOnly:!0})],k.prototype,"defaultPopupTemplate",null),n([o({readOnly:!0,json:{read:!1}})],k.prototype,"type",void 0),k=n([J("esri.layers.ImageryLayer")],k);const or=k;export{or as default};

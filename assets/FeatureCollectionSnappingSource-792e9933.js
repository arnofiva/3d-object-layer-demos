import{au as m,fV as b,bm as g,aU as c,dq as E,fW as F,fX as V,ax as p,aD as o,aE as r,aF as D,fY as C}from"./index-cdda5707.js";import{i as $,o as A}from"./queryEngineUtils-55f7991f.js";import{i as h,r as I,n as v}from"./symbologySnappingCandidates-5232552d.js";import"./VertexSnappingCandidate-cc15b3c5.js";import"./PointSnappingHint-512a7cc6.js";let i=class extends m{get availability(){return 1}get updating(){return this.layerSource.updating}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,n=e!=null&&e.type==="3d";if(!n||t.type==="subtype-group")return h();const a=async(l,s)=>(await C(e.whenLayerView(t),s)).elevationAlignPointsInFeatures(l,s);return h(n,{elevationInfo:t.elevationInfo,alignPointsInFeatures:a,spatialReference:e.spatialReference})}get _snappingElevationFilter(){const{view:e}=this,t=e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="subtype-group";return I(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource;return e!=null&&e.type==="3d"&&t.type!=="subtype-group"?v(this._symbologySnappingSupported,async(n,a)=>{const l=await e.whenLayerView(t);return p(a),l.queryForSymbologySnapping({candidates:n,spatialReference:e.spatialReference},a)}):v()}get _symbologySnappingSupported(){return this._layerView3D!=null&&this._layerView3D.symbologySnappingSupported}initialize(){const{view:e}=this,{layer:t}=this.layerSource;e!=null&&e.type==="3d"&&t.type!=="subtype-group"&&(e.whenLayerView(t).then(n=>this._layerView3D=n),this.addHandles([e.elevationProvider.on("elevation-change",({context:n})=>{const{elevationInfo:a}=t;b(n,a)&&this._snappingElevationAligner.notifyElevationSourceChange()}),g(()=>t.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),c),g(()=>this._layerView3D!=null?this._layerView3D.processor?.renderer:null,()=>this._symbologySnappingFetcher.notifySymbologyChange(),c),E(()=>this._layerView3D?.layer,["edits","apply-edits","graphic-update"],()=>this._symbologySnappingFetcher.notifySymbologyChange())]))}constructor(e){super(e),this.view=null,this._layerView3D=null}refresh(){}async fetchCandidates(e,t){const{layer:n}=this.layerSource,a=n.source;if(!a?.querySnapping)return[];const l=F(n),s=V(e,this.view?.type??"2d",l),d=await a.querySnapping(s,{signal:t});p(t);const y=await this._snappingElevationAligner.alignCandidates(d.candidates,t);p(t);const u=await this._symbologySnappingFetcher.fetch(y,t);p(t);const S=u.length===0?y:[...y,...u],w=this._snappingElevationFilter.filter(s,S),_=this._getGroundElevation;return w.map(f=>$(f,_))}get _getGroundElevation(){return A(this.view)}};o([r({constructOnly:!0})],i.prototype,"layerSource",void 0),o([r({constructOnly:!0})],i.prototype,"view",void 0),o([r()],i.prototype,"_snappingElevationAligner",null),o([r()],i.prototype,"_snappingElevationFilter",null),o([r()],i.prototype,"_symbologySnappingFetcher",null),o([r()],i.prototype,"_layerView3D",void 0),o([r()],i.prototype,"_symbologySnappingSupported",null),o([r()],i.prototype,"_getGroundElevation",null),i=o([D("esri.views.interactive.snapping.featureSources.FeatureCollectionSnappingSource")],i);export{i as FeatureCollectionSnappingSource};

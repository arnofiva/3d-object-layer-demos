import{aD as i,aE as a,aF as g,bi as S,dx as b,fR as m,fS as C,ly as k,bQ as v,ha as L,aC as H,m4 as E,dS as w,gU as $,dM as O,au as I,ax as R,bz as V}from"./index-cdda5707.js";import{r as x}from"./VertexSnappingCandidate-cc15b3c5.js";import"./PointSnappingHint-512a7cc6.js";let d=class extends S{constructor(e){super(e),this.availability=0,this._ids=new Set}destroy(){this._workerHandle.destroy(),this._workerHandle=null}initialize(){this._workerHandle=new P(this.schedule,{fetchAllEdgeLocations:(e,t)=>this._fetchAllEdgeLocations(e,t)})}async fetchCandidates(e,t){const s=e.coordinateHelper,{point:p}=e,n=j;this.renderCoordsHelper.toRenderCoords(p,s.spatialReference,n);const h=e.distance,c=typeof h=="number"?h:h.distance,u=await this._workerHandle.invoke({bounds:b(n[0],n[1],n[2],c),returnEdge:e.returnEdge,returnVertex:e.returnVertex},t);return u.candidates.sort((y,f)=>y.distance-f.distance),u.candidates.map(y=>this._convertCandidate(s,y))}async add(e,t){this._ids.add(e.id),await this._workerHandle.invokeMethod("add",e,t)}async remove(e,t){this._ids.delete(e.id),await this._workerHandle.invokeMethod("remove",e,t)}_convertCandidate(e,t){switch(t.type){case"edge":return new m({objectId:t.objectId,targetPoint:this._convertRenderCoordinate(e,t.target),edgeStart:this._convertRenderCoordinate(e,t.start),edgeEnd:this._convertRenderCoordinate(e,t.end),isDraped:!1});case"vertex":return new x({objectId:t.objectId,targetPoint:this._convertRenderCoordinate(e,t.target),isDraped:!1})}}_convertRenderCoordinate({spatialReference:e},t){const s=v();return this.renderCoordsHelper.fromRenderCoords(t,s,e),C(s)}async _fetchAllEdgeLocations(e,t){const s=[],p=[];for(const{id:n,uid:h}of e.components)this._ids.has(n)&&s.push((async()=>{const c=await this.fetchEdgeLocations(n,t.signal),u=c.locations.buffer;return p.push(u),{id:n,uid:h,objectIds:c.objectIds,locations:u,origin:c.origin,type:c.type}})());return{result:{components:(await Promise.all(s)).filter(({id:n})=>this._ids.has(n))},transferList:p}}};i([a({constructOnly:!0})],d.prototype,"renderCoordsHelper",void 0),i([a({constructOnly:!0})],d.prototype,"fetchEdgeLocations",void 0),i([a({constructOnly:!0})],d.prototype,"schedule",void 0),i([a({readOnly:!0})],d.prototype,"availability",void 0),d=i([g("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],d);class P extends k{constructor(e,t){super("SceneLayerSnappingSourceWorker","fetchCandidates",{},e,{strategy:"dedicated",client:t})}}const j=v();let o=class extends S{get updating(){return this.updatingHandles.updating}constructor(r){super(r),this.availability=1,this._abortController=new AbortController}destroy(){this._tracker=L(this._tracker),this._abortController=H(this._abortController)}initialize(){const{view:r}=this,e=r.resourceController;this._edgeWorker=new E(_(e)),this._workerHandle=new d({renderCoordsHelper:this.view.renderCoordsHelper,schedule:_(e),fetchEdgeLocations:async(t,s)=>{if(this._tracker==null)throw new Error("tracker-not-initialized");return this._tracker.fetchEdgeLocations(t,this._edgeWorker,s)}}),this.updatingHandles.addPromise(this._setupLayerView()),this.handles.add([w(this._workerHandle),w(this._edgeWorker)])}async fetchCandidates(r,e){return this._workerHandle.fetchCandidates(r,e)}refresh(){}async _setupLayerView(){if(this.destroyed)return;const r=$(this._abortController,t=>t.signal),e=await this.getLayerView();e==null||O(r)||(this._tracker=e.trackSnappingSources({add:(t,s)=>{this.updatingHandles.addPromise(this._workerHandle.add({id:t,bounds:s},r))},remove:t=>{this.updatingHandles.addPromise(this._workerHandle.remove({id:t},r))}}))}};function _(r){return e=>r.immediate.schedule(e)}i([a({constructOnly:!0})],o.prototype,"getLayerView",void 0),i([a({constructOnly:!0})],o.prototype,"view",void 0),i([a({readOnly:!0})],o.prototype,"updating",null),i([a({readOnly:!0})],o.prototype,"availability",void 0),o=i([g("esri.views.interactive.snapping.featureSources.I3SSnappingSource")],o);let l=class extends I{get updating(){return this._i3sSources.some(r=>r.updating)}constructor(r){super(r),this.availability=1,this._i3sSources=[]}destroy(){this._i3sSources.forEach(r=>r.destroy()),this._i3sSources.length=0}initialize(){const{view:r}=this,e=this.layerSource.layer;this._i3sSources=e.type==="building-scene"?this._getBuildingSceneI3SSources(r,e):[this._getSceneLayerI3SSource(r,e)]}async fetchCandidates(r,e){const t=await Promise.all(this._i3sSources.map(s=>s.fetchCandidates(r,e)));return R(e),t.flat()}refresh(){this._i3sSources.forEach(r=>r.refresh())}_getBuildingSceneI3SSources(r,e){return e.allSublayers.toArray().map(t=>t.type==="building-component"?new o({getLayerView:async()=>(await r.whenLayerView(e)).whenSublayerView(t),view:r}):null).filter(V)}_getSceneLayerI3SSource(r,e){return new o({getLayerView:async()=>{const t=await r.whenLayerView(e);return t.type==="scene-layer-graphics-3d"?void 0:t},view:r})}};i([a({constructOnly:!0})],l.prototype,"layerSource",void 0),i([a({constructOnly:!0})],l.prototype,"view",void 0),i([a({readOnly:!0})],l.prototype,"updating",null),i([a({readOnly:!0})],l.prototype,"availability",void 0),l=i([g("esri.views.interactive.snapping.featureSources.SceneLayerSnappingSource")],l);export{l as SceneLayerSnappingSource};

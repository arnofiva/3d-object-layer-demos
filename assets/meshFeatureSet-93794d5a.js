import{dR as E,bA as y,cg as S,dk as w,aA as M,bO as N,e3 as T,e4 as h,cd as D}from"./main-79e5ed80.js";import d from"./Mesh-d3af21f3.js";import{m as I}from"./MeshGeoreferencedRelativeVertexSpace-4cbafb45.js";import{m as P}from"./MeshLocalVertexSpace-0353b8cf.js";import{N as F}from"./MeshTransform-d557c89a.js";import{i as O,a as A}from"./External-2117cdfc.js";import"./georeference-ab089445.js";const g=()=>D.getLogger("esri.rest.support.meshFeatureSet");function U(e,t,r){const n=r.features;r.features=[],delete r.geometryType;const s=E.fromJSON(r);if(s.geometryType="mesh",!r.assetMaps)return s;const o=v(t,r.assetMaps),a=e.sourceSpatialReference??y.WGS84,l=r.globalIdFieldName,{outFields:i}=e,c=i!=null&&i.length>0?R(i.includes("*")?null:new Set(i)):()=>({});for(const f of n){const u=b(f,l,a,t,o);u!=null&&s.features.push(new S({geometry:u,attributes:c(f)}))}return s}function R(e){return({attributes:t})=>{if(!t)return{};if(!e)return t;for(const r in t)e.has(r)||delete t[r];return t}}function b(e,t,r,n,s){const o=e.attributes[t],a=s.get(o);if(a==null)return g().error("mesh-feature-set:asset-not-found","Service returned a feature which was not found in the asset map",e),null;if(!e.geometry)return g().error("mesh-feature-set:no-geometry","Service returned a feature without geometry",e),null;const{originPoint:l,originVector:i}=x(e,r,n),c=w.fromJSON(e.geometry);c.spatialReference=r;const f=L(e.attributes,n),u=a.projectVertices?new I({origin:i}):new P({origin:i}),p=$(a);return p?d.createWithExternalSource(l,p,{extent:c,transform:f,vertexSpace:u}):d.createIncomplete(l,{extent:c,transform:f,vertexSpace:u})}function x({attributes:e},t,{transformFieldRoles:r}){const n=e[r.originX],s=e[r.originY],o=e[r.originZ];return{originPoint:new M({x:n,y:s,z:o,spatialReference:t}),originVector:N(n,s,o)}}function L(e,{transformFieldRoles:t}){return new F({translation:[e[t.translationX],-e[t.translationZ],e[t.translationY]],rotationAxis:[e[t.rotationX],e[t.rotationZ],e[t.rotationY]],rotationAngle:e[t.rotationDeg],scale:[e[t.scaleX],e[t.scaleY],e[t.scaleZ]]})}var m;function v(e,t){const r=new Map;for(const n of t){const s=n.parentGlobalId;if(s==null)continue;const o=n.assetName,a=n.assetType,l=n.assetHash,i=n.assetURL,c=n.conversionStatus,f=n.seqNo,u=T(a,e.supportedFormats);if(!u){g().error("mesh-feature-set:unknown-format",`Service returned an asset of type ${a}, but it does not list it as a supported type`);continue}const p=h(r,s,()=>({projectVertices:V(n.flags).projectVertices,files:new Map}));h(p.files,o,()=>({name:o,type:a,mimeType:u,status:C(c),parts:[]})).parts[f]={hash:l,url:i}}return r}function $(e){const t=Array.from(e.files.values()),r=new Array;for(const n of t){if(n.status!==m.COMPLETED)return null;const s=new Array;for(const o of n.parts){if(!o)return null;s.push(new O(o.url,o.hash))}r.push(new A(n.name,n.mimeType,s))}return r}function C(e){switch(e){case"COMPLETED":case"SUBMITTED":return m.COMPLETED;case"INPROGRESS":return m.PENDING;default:return m.FAILED}}function V(e){return{projectVertices:e.includes("PROJECT_VERTICES")}}(function(e){e[e.FAILED=0]="FAILED",e[e.PENDING=1]="PENDING",e[e.COMPLETED=2]="COMPLETED"})(m||(m={}));export{v as assetMapFromAssetMapsJSON,b as extractMesh,U as meshFeatureSetFromJSON};

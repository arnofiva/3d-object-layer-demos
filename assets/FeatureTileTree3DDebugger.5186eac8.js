var p=Object.defineProperty,c=Object.defineProperties;var u=Object.getOwnPropertyDescriptors;var n=Object.getOwnPropertySymbols;var y=Object.prototype.hasOwnProperty,T=Object.prototype.propertyIsEnumerable;var o=(t,e,i)=>e in t?p(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i,d=(t,e)=>{for(var i in e||(e={}))y.call(e,i)&&o(t,i,e[i]);if(n)for(var i of n(e))T.call(e,i)&&o(t,i,e[i]);return t},l=(t,e)=>c(t,u(e));import{c as w,u as m,h as v,v as f,a,d as s,n as k}from"./vendor.fd144a9e.js";import{b as U}from"./TileTreeDebugger.cbdad9bc.js";let r=class extends U{constructor(t){super(t),this.watchUpdatingTracking=new w,this.handles=new m}initialize(){const{featureTiles:t}=this.view;this.handles.add(t.addClient()),this.watchUpdatingTracking.addOnCollectionChange(()=>t==null?void 0:t.tiles,()=>this.update(),v)}destroy(){this.handles&&(this.handles.destroy(),this.handles=null),this.watchUpdatingTracking.destroy()}getTiles(){const t=e=>{const[i,h,g]=e.lij;return f.fromExtent(this.view.featureTiles.tilingScheme.getExtentGeometry(i,h,g))};return this.view.featureTiles.tiles.toArray().sort((e,i)=>e.loadPriority-i.loadPriority).map(e=>l(d({},e),{geometry:t(e)}))}};a([s({readOnly:!0})],r.prototype,"watchUpdatingTracking",void 0),a([s({readOnly:!0,aliasOf:"watchUpdatingTracking.updating"})],r.prototype,"updating",void 0),a([s()],r.prototype,"view",void 0),r=a([k("esri.views.3d.layers.support.FeatureTileTree3DDebugger")],r);export{r as FeatureTileTree3DDebugger};

var at=Object.defineProperty,ot=Object.defineProperties;var lt=Object.getOwnPropertyDescriptors;var Ee=Object.getOwnPropertySymbols;var ct=Object.prototype.hasOwnProperty,ut=Object.prototype.propertyIsEnumerable;var Ne=(t,e,i)=>e in t?at(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i,B=(t,e)=>{for(var i in e||(e={}))ct.call(e,i)&&Ne(t,i,e[i]);if(Ee)for(var i of Ee(e))ut.call(e,i)&&Ne(t,i,e[i]);return t},L=(t,e)=>ot(t,lt(e));import{ab as Ze,a as w,d as T,ap as G,rN as xe,bF as V,mF as le,mE as Qe,n as ee,s3 as et,t as O,r as P,hG as ht,bs as tt,bR as ft,eu as dt,N as E,aZ as Y,aQ as j,c1 as mt,er as pt,aE as it,a9 as yt,c3 as gt,bI as xt,r8 as It,r9 as wt,mx as bt,my as vt,ry as St,rA as Tt,ra as Rt,mz as _t,E as kt,mB as Ct,gb as me,dc as Pt,B as Mt,d7 as Ft,dh as Bt,rt as $t,dg as Dt,d6 as Ot}from"./vendor.fd144a9e.js";import{p as zt,l as st,b as He,t as Ae,d as rt,I as Et,B as Nt,k as Ht,c as At,e as Lt,r as Jt,s as Wt,m as Gt,u as jt,o as qt,a as Ut}from"./fetchRasterInfo.f0916882.js";import{m as Vt,c as Xt,U as Yt,u as ke,S as Kt,d as pe,C as Zt,b as Qt,p as ei,e as ti,r as Le,l as ye,M as ii,a as si,n as Be,P as ri,x as ni,o as ai,N as oi,q as li,s as Ie,t as ci,v as ui,D as hi}from"./dataUtils.5fc24393.js";import{k as Je,X as we,_ as We,t as Ge,e as fi,D as Ce,F as Pe,V as di,H as mi,v as pi}from"./rasterProjectionHelper.b057bdd8.js";import{f as yi,i as gi,m as $e,c as xi}from"./utils.c5871764.js";import{n as Ii,z as wi}from"./TilemapCache.faaf790a.js";import{u as bi}from"./PixelBlock.2733b9cf.js";import"./ClassBreaksDefinition.e6a81499.js";const je=Ze.getLogger("esri.layers.mixins.ImageryTileMixin"),vi=t=>{let e=class extends t{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.multidimensionalDefinition=null,this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set url(i){this._set("url",et(i,je))}set renderer(i){this._set("renderer",i),this.updateRenderer()}async convertVectorFieldData(i,s){if(O(i))return null;const r=this._rasterJobHandler.instance,n=this.rasterInfo.dataType;return r?r.convertVectorFieldData({pixelBlock:i,dataType:n},s):Vt(i,n)}async createFlowMesh(i,s){const r=this._rasterJobHandler.instance;return r?r.createFlowMesh(i,s):Xt(i.meshType,i.simulationSettings,i.flowData,P(s.signal)?s.signal:new AbortController().signal)}normalizeRasterFetchOptions(i){var a,c;const{multidimensionalInfo:s}=this.rasterInfo;if(O(s))return i;let r=i.multidimensionalDefinition||this.multidimensionalDefinition;!O(r)&&r.length||(r=He(this.raster.rasterInfo));const n=i.timeExtent||this.timeExtent;if(P(r)&&P(n)&&(P(n.start)||P(n.end))){r=r.map(m=>m.clone());const o=(c=(a=s.variables.find(({name:m})=>m===r[0].variableName))==null?void 0:a.dimensions)==null?void 0:c.find(({name:m})=>m==="StdTime"),l=r.find(({dimensionName:m})=>m==="StdTime");if(!o||!l)return L(B({},i),{multidimensionalDefinition:null});const{start:u,end:h}=n,f=O(u)?null:u.getTime(),d=O(h)?null:h.getTime(),p=f!=null?f:d,y=d!=null?d:f;if(P(o.values)){const m=o.values.filter(g=>{if(Array.isArray(g)){if(p===y)return g[0]<=p&&g[1]>=p;const b=g[0]<=p&&g[1]>p||g[0]<y&&g[1]>=y,v=g[0]>=p&&g[1]<=y||g[0]<p&&g[1]>y;return b||v}return p===y?g===p:g>=p&&g<=y});if(m.length){const g=m.sort((b,v)=>{var _,k,R,x;return p===y?((_=b[0])!=null?_:b)-((k=v[0])!=null?k:v):Math.abs(((R=b[1])!=null?R:b)-y)-Math.abs(((x=v[1])!=null?x:v)-y)})[0];l.values=[g]}else r=null}else if(o.hasRegularIntervals&&o.extent){const[m,g]=o.extent;p>g||y<m?r=null:l.values=p===y?[p]:[Math.max(m,p),Math.min(g,y)]}}return L(B({},i),{multidimensionalDefinition:r})}async updateRenderer(){if(!this.loaded||JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const i=this._rasterJobHandler.instance;i&&(this.symbolizer.rendererJSON=Ae(this.renderer.toJSON()),this.symbolizer.bind(),await i.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(i,s){const r=i&&i.pixelBlock;if(!(P(r)&&r.pixels&&r.pixels.length>0))return null;let n;await this.updateRenderer();const a=this._rasterJobHandler.instance,{bandIds:c}=this;return n=a?await a.symbolize(L(B({},i),{simpleStretchParams:s,bandIds:c})):this.symbolizer.symbolize(L(B({},i),{simpleStretchParams:s,bandIds:c})),n}getTileUrl(i,s,r){return this.raster.datasetFormat==="RasterTileServer"?`${this.url}/tile/${i}/${s}/${r}`:""}getCompatibleTileInfo(i,s,r=!1){if(!this.loaded||O(s))return null;if(r&&i.equals(this.spatialReference))return this.tileInfo;const n=ht(i);return le.create({size:256,spatialReference:i,origin:n?{x:n.origin[0],y:n.origin[1]}:{x:s.xmin,y:s.ymax}})}getCompatibleFullExtent(i){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(i)||(this._compatibleFullExtent=this.raster.computeExtent(i)),this._compatibleFullExtent):null}async fetchTile(i,s,r,n={}){if(n.requestAsImageElement){const a=this.getTileUrl(i,s,r);return tt(a,{responseType:"image",query:B(B({},this.refreshParameters),this.raster.ioConfig.customFetchParameters),signal:n.signal}).then(c=>c.data)}if(P(this.rasterInfo.multidimensionalInfo)&&(n=this.normalizeRasterFetchOptions(n),O(n.multidimensionalDefinition))){const a=n.tileInfo||this.rasterInfo.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(i,s,r,a),pixelBlock:null}}return await this._initJobHandler(),this.renderer.type==="raster-shaded-relief"&&(n=L(B({},n),{buffer:{cols:1,rows:1}})),this.raster.fetchTile(i,s,r,n)}async fetchPixels(i,s,r,n={}){return P(this.rasterInfo.multidimensionalInfo)&&(n=this.normalizeRasterFetchOptions(n),O(n.multidimensionalDefinition))?{extent:i,pixelBlock:null}:(await this._initJobHandler(),this.raster.fetchPixels(i,s,r,n))}async identify(i,s={}){return P(this.rasterInfo.multidimensionalInfo)&&!(this.rasterInfo.hasMultidimensionalTranspose&&!!(rt(s.multidimensionalDefinition)||s.transposedVariableName||s.timeExtent))&&(s=this.normalizeRasterFetchOptions(s),O(s.multidimensionalDefinition))?{location:i,value:null}:this.raster.identify(i,s)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var r;const i=this.rasterInfo.multidimensionalInfo;if(O(i)||this.rasterInfo.dataType!=="standard-time")return!1;const s=(r=this.multidimensionalDefinition[0])==null?void 0:r.variableName;return i.variables.some(n=>n.name===s&&n.dimensions.some(a=>a.name==="StdTime"))}getStandardTimeValue(i){return new Date(24*(i-25569)*3600*1e3).toString()}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=He(this.raster.rasterInfo)),this._configDefaultRenderer()}_initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const i=new At;return this._rasterJobHandler.connectionPromise=i.initialize().then(()=>{this._rasterJobHandler.instance=i,this.raster.rasterJobHandler=i,this.renderer&&this.updateRenderer()}).catch(()=>null),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null,this._cachedRendererJson=null}_configDefaultInterpolation(){var i;if(this.interpolation==null){const s=Et(this.rasterInfo,this.raster.tileType,(i=this.sourceJSON)==null?void 0:i.defaultResamplingMethod);this._set("interpolation",s)}}_configDefaultRenderer(){var r,n,a;const i=this.raster.rasterInfo;if(this.bandIds||(this.bandIds=Nt(i)),!this.renderer){const c=Ht(i,{bandIds:this.bandIds,variableName:P(this.multidimensionalDefinition)?(r=this.multidimensionalDefinition[0])==null?void 0:r.variableName:null});this.raster.datasetFormat==="WCSServer"&&c.type==="raster-stretch"&&(((n=i.statistics)==null?void 0:n[0].max)>1e24||((a=i.statistics)==null?void 0:a[0].min)<-1e24)&&(c.dynamicRangeAdjustment=!0,c.statistics=null,c.stretchType==="none"&&(c.stretchType="min-max")),this.renderer=c}this.symbolizer?(this.symbolizer.rendererJSON=Ae(this.renderer.toJSON()),this.symbolizer.rasterInfo=i):this.symbolizer=new Yt({rendererJSON:this.renderer.toJSON(),rasterInfo:i});const s=this.symbolizer.bind();s.success||je.warn("imagery-tile-mixin",s.error||"The given renderer is not supported by the layer.")}};return w([T()],e.prototype,"_cachedRendererJson",void 0),w([T()],e.prototype,"_compatibleFullExtent",void 0),w([T()],e.prototype,"_rasterJobHandler",void 0),w([T()],e.prototype,"bandIds",void 0),w([T({json:{origins:{service:{read:{source:"copyrightText"}}}}})],e.prototype,"copyright",void 0),w([T({type:G,json:{read:!1}}),xe("rasterInfo.extent")],e.prototype,"fullExtent",void 0),w([T()],e.prototype,"interpolation",void 0),w([T()],e.prototype,"ioConfig",void 0),w([T({type:[zt]})],e.prototype,"multidimensionalDefinition",void 0),w([T()],e.prototype,"raster",void 0),w([T({readOnly:!0}),xe("raster.rasterInfo")],e.prototype,"rasterInfo",void 0),w([T()],e.prototype,"sourceJSON",void 0),w([T({type:V,json:{read:!1}}),xe("rasterInfo.spatialReference")],e.prototype,"spatialReference",void 0),w([T({type:le,json:{read:!1}}),xe("rasterInfo.storageInfo.tileInfo")],e.prototype,"tileInfo",void 0),w([T(Qe)],e.prototype,"url",null),w([T({types:st})],e.prototype,"renderer",null),w([T()],e.prototype,"symbolizer",void 0),e=w([ee("esri.layers.ImageryTileMixin")],e),e};class Si{constructor(e=15e3,i=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,i)}decreaseRefCount(e,i){const s=e+"/"+i,r=this._cachedBlocks;if(r.has(s)){const n=r.get(s);return n.refCount--,n.refCount<=0&&(r.delete(s),n.controller&&n.controller.abort()),n.refCount}return 0}getBlock(e,i){const s=e+"/"+i,r=this._cachedBlocks;if(r.has(s)){const n=r.get(s);return n.ts=Date.now(),n.refCount++,r.delete(s),r.set(s,n),n.block}return null}putBlock(e,i,s,r=null){const n=this._cachedBlocks,a=e+"/"+i;if(n.has(a)){const c=n.get(a);c.ts=Date.now(),c.refCount++}else n.set(a,{block:s,ts:Date.now(),refCount:1,controller:r});this._trim(),this._updateTimer()}deleteBlock(e,i){const s=this._cachedBlocks,r=e+"/"+i;s.has(r)&&s.delete(r)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(this._timer!=null)return;const e=this._cachedBlocks;this._timer=setInterval(()=>{const i=Array.from(e),s=Date.now();for(let r=0;r<i.length&&i[r][1].ts<=s-this._duration;r++)e.delete(i[r][0]);e.size===0&&this._clearTimer()},this._interval)}_trim(){const e=this._cachedBlocks;if(this._size===-1||this._size>=e.size)return;const i=Array.from(e);for(let s=0;s<i.length-this._size;s++)e.delete(i[s][0])}_clearTimer(){this._timer!=null&&(clearInterval(this._timer),this._timer=null)}}const ie=new Map,se=new Si;function qe(t,e){return e==null?t:`${t}?sliceId=${e}`}function Ti(t,e,i){if(!ie.has(t))return e==null?se.decreaseRefCount(t,i):0;const s=ie.get(t);if(s[e]==null)return se.decreaseRefCount(t,i);const r=s[e].cache;if(r.has(i)){const n=r.get(i);if(n.refCount--,n.refCount===0){r.delete(i);for(let a=0;a<s.length;a++)s[a]&&s[a].cache.has(i)&&s[a].cache.delete(i);n.controller&&n.controller.abort()}return n.refCount}return 0}function Ue(t,e,i){if(!ie.has(t))return e==null?se.getBlock(t,i):null;const s=ie.get(t);if(s[e]==null){for(let n=0;n<s.length;n++)if(s[n]&&s[n].cache.has(i)){const a=s[n].cache.get(i);return a.refCount++,a.block}return se.getBlock(t,i)}const r=s[e].cache;if(r.has(i)){const n=r.get(i);return n.refCount++,n.block}for(let n=0;n<s.length;n++)if(n!==e&&s[n]&&s[n]&&s[n].cache.has(i)){const a=s[n].cache.get(i);return a.refCount++,r.set(i,a),a.block}return null}function Ve(t,e,i,s,r=null){if(!ie.has(t))return void(e==null&&se.putBlock(t,i,s,r));const n=ie.get(t);if(n[e]==null)return void se.putBlock(t,i,s,r);const a={refCount:1,block:s,isResolved:!1,isRejected:!1,controller:r};s.then(()=>a.isResolved=!0).catch(()=>a.isRejected=!0),n[e].cache.set(i,a)}function Ri(t,e,i){if(!ie.has(t))return void(e==null&&se.deleteBlock(t,i));const s=ie.get(t);s[e]!=null?s[e].cache.delete(i):se.deleteBlock(t,i)}const be=8;let X=class extends ft(dt){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const t=Je();this.addResolvingPromise(t),await this.when()}normalizeCtorArgs(t){return t&&t.ioConfig&&(t=L(B({},t),{ioConfig:B({resolution:null,bandIds:null,sampling:"closest",tileInfo:le.create()},t.ioConfig)})),t}get _isGlobalWrappableSource(){const{rasterInfo:t}=this,e=we(t.spatialReference);return P(e)&&t.extent.width>=e/2}set url(t){this._set("url",et(t,Ze.getLogger(this.declaredClass)))}async open(t){throw new E("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(t,e,i,s={}){const r=s.tileInfo||this.rasterInfo.storageInfo.tileInfo,n=this.getTileExtentFromTileInfo(t,e,i,r);return this.fetchPixels(n,r.size[0],r.size[1],s)}async identify(t,e={}){var C;const{multidimensionalDefinition:i,timeExtent:s}=e,{hasMultidimensionalTranspose:r,multidimensionalInfo:n}=this.rasterInfo;let{transposedVariableName:a}=e;const c=P(n)&&r&&(s!=null||rt(i));c&&!a&&(a=P(i)&&i.length>0?i[0].variableName:n.variables[0].name,e=L(B({},e),{transposedVariableName:a})),e=this._getRequestOptionsWithSliceId(e);const{spatialReference:o,extent:l}=this.rasterInfo,{datumTransformation:u}=e;let h=We(t,o,u);if(!l.intersects(h))return{location:h,value:null};if(P(this.rasterInfo.transform)){const F=this.rasterInfo.transform.inverseTransform(h);if(!this.rasterInfo.nativeExtent.intersects(F))return{location:F,value:null};h=F}let f=0;const d=a&&P(n)&&this.rasterInfo.hasMultidimensionalTranspose;if(!d){if(e.srcResolution)f=Ge(e.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(f=await this.computeBestPyramidLevelForLocation(t,e),f==null)return{location:h,value:null}}const p=this.identifyPixelLocation(h,f,null,d);if(p===null)return{location:h,value:null};const{row:y,col:m,rowOffset:g,colOffset:b,blockWidth:v}=p,_=a!=null?a:Y(e.sliceId),k=qe(this.url,_),R=`${f}/${y}/${m}`;let x=Ue(k,null,R);O(x)&&(x=this.fetchRawTile(f,y,m,e),Ve(k,null,R,x));const I=await x;if(O(I)||!((C=I.pixels)==null?void 0:C.length))return{location:h,value:null};const S=g*v+b;return this._processIdentifyResult(I,{srcLocation:h,position:S,pyramidLevel:f,useTransposedTile:d,requestSomeSlices:c,identifyOptions:e})}async fetchPixels(t,e,i,s={}){if(t=fi(t),(s=this._getRequestOptionsWithSliceId(s)).requestRawData)return this._fetchPixels(t,e,i,s);const r=we(t.spatialReference),n=Ce(t);if(O(r)||n===0||n===1&&this._isGlobalWrappableSource)return this._fetchPixels(t,e,i,s);if(n>=3)return{extent:t,pixelBlock:null};const a=[],{xmin:c,xmax:o}=t,l=Math.round(r/(o-c)*e),u=l-Math.round((r/2-c)/(o-c)*e);let h=0;const f=[];for(let m=0;m<=n;m++){const g=new G({xmin:m===0?c:-r/2,xmax:m===n?o-r*m:r/2,ymin:t.ymin,ymax:t.ymax,spatialReference:t.spatialReference}),b=m===0?l-u:m===n?e-h:l;h+=b,f.push(b);const v=s.disableWrapAround&&m>0?null:this._fetchPixels(g,b,i,s);a.push(v)}const d=(await Promise.all(a)).map(m=>m==null?void 0:m.pixelBlock);let p=null;const y={width:e,height:i};return this.rasterJobHandler?p=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:d,srcMosaicSize:y,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:f},s)).pixelBlock:p=ke(d,y,{blockWidths:f}),{extent:t,srcExtent:Pe(t,this.rasterInfo.spatialReference,s.datumTransformation),pixelBlock:p}}async fetchRawPixels(t,e,i,s={}){e={x:Math.floor(e.x),y:Math.floor(e.y)};const r=await this._fetchRawTiles(t,e,i,s),{nativeExtent:n,nativePixelSize:a,storageInfo:c}=this.rasterInfo,o=2**t,l=a.x*o,u=a.y*o,h=new G({xmin:n.xmin+l*e.x,xmax:n.xmin+l*(e.x+i.width-1),ymin:n.ymax-u*(e.y+i.height-1),ymax:n.ymax-u*e.y,spatialReference:n.spatialReference});if(!r)return{extent:h,srcExtent:h,pixelBlock:null};const{pixelBlocks:f,mosaicSize:d}=r;if(f.length===1&&P(f[0])&&f[0].width===i.width&&f[0].height===i.height)return{extent:h,srcExtent:h,pixelBlock:r.pixelBlocks[0]};const p=t>0?c.pyramidBlockWidth:c.blockWidth,y=t>0?c.pyramidBlockHeight:c.blockHeight,m={x:e.x%p,y:e.y%y};let g;return this.rasterJobHandler?g=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:f,srcMosaicSize:d,destDimension:i,clipOffset:m,clipSize:i,coefs:null,sampleSpacing:null,interpolation:s.interpolation,alignmentInfo:null,blockWidths:null},s)).pixelBlock:g=ke(f,d,{clipOffset:m,clipSize:i}),{extent:h,srcExtent:h,pixelBlock:g}}fetchRawTile(t,e,i,s){throw new E("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(t){return Pe(this.rasterInfo.extent,t)}decodePixelBlock(t,e){return!this.rasterJobHandler||e.useCanvas?Kt(t,e):this.rasterJobHandler.decode({data:t,options:e})}async request(t,e,i){var o;const{customFetchParameters:s}=this.ioConfig,{range:r,query:n,headers:a}=e;i=(o=i!=null?i:e.retryCount)!=null?o:this.ioConfig.retryCount;const c=r?{Range:`bytes=${r.from}-${r.to}`}:null;try{return await tt(t,L(B({},e),{query:B(B({},n),s),headers:B(B({},a),c)}))}catch(l){if(i>0)return i--,this.request(t,e,i);throw l}}getSliceIndex(t){const{multidimensionalInfo:e}=this.rasterInfo;return O(e)||O(t)||t.length===0?null:Lt(t,e)}getTileExtentFromTileInfo(t,e,i,s){const r=s.lodAt(t);return this.getTileExtent({x:r.resolution,y:r.resolution},e,i,s.origin,s.spatialReference,s.size)}updateTileInfo(){const{storageInfo:t,spatialReference:e,extent:i,pixelSize:s}=this.rasterInfo;if(!t.tileInfo){const r=[],n=t.maximumPyramidLevel||0;let a=Math.max(s.x,s.y),c=1/.0254*96*a;for(let l=0;l<=n;l++)r.push({level:n-l,resolution:a,scale:c}),a*=2,c*=2;const o=new j({x:i.xmin,y:i.ymax,spatialReference:e});t.tileInfo=new le({origin:o,size:[t.blockWidth,t.blockHeight],spatialReference:e,lods:r}),t.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(t,e=512,i=512,s){const{width:r,height:n,nativeExtent:a,pixelSize:c,spatialReference:o}=t,l=new j({x:a.xmin,y:a.ymax,spatialReference:o});s==null&&(s=Math.max(0,Math.round(Math.log(Math.max(r,n))/Math.LN2-8)));const u=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[c],s);t.storageInfo=new pe({blockWidth:e,blockHeight:i,pyramidBlockWidth:e,pyramidBlockHeight:i,origin:l,firstPyramidLevel:1,maximumPyramidLevel:s,blockBoundary:u})}async computeBestPyramidLevelForLocation(t,e={}){return 0}computeBlockBoundary(t,e,i,s,r,n=0,a=2){if(r.length===1&&n>0){r=[...r];let{x:u,y:h}=r[0];for(let f=0;f<n;f++)u*=a,h*=a,r.push({x:u,y:h})}const c=[],{x:o,y:l}=s;for(let u=0;u<r.length;u++){const{x:h,y:f}=r[u];c.push({minCol:Math.floor((t.xmin-o+.1*h)/e/h),maxCol:Math.floor((t.xmax-o-.1*h)/e/h),minRow:Math.floor((l-t.ymax+.1*f)/i/f),maxRow:Math.floor((l-t.ymin-.1*f)/i/f)})}return c}getPyramidPixelSize(t){const{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:s}=this.rasterInfo.storageInfo;if(t===0)return e;if(P(i)&&i.length)return i[t-1];const r=s**t;return{x:e.x*r,y:e.y*r}}identifyPixelLocation(t,e,i,s){const{spatialReference:r,nativeExtent:n,storageInfo:a}=this.rasterInfo,{maximumPyramidLevel:c,origin:o,transposeInfo:l}=a,u=s&&P(l)?l.tileSize[0]:a.blockWidth,h=s&&P(l)?l.tileSize[1]:a.blockHeight,f=We(t,r,i);if(!n.intersects(f)||e<0||e>c)return null;const d=this.getPyramidPixelSize(e),{x:p,y}=d,m=(o.y-f.y)/y/h,g=(f.x-o.x)/p/u,b=Math.min(h-1,Math.floor((m-Math.floor(m))*h)),v=Math.min(u-1,Math.floor((g-Math.floor(g))*u));return{pyramidLevel:e,row:Math.floor(m),col:Math.floor(g),rowOffset:b,colOffset:v,blockWidth:u,srcLocation:f}}getTileExtent(t,e,i,s,r,n){const[a,c]=n,o=s.x+i*a*t.x,l=o+a*t.x,u=s.y-e*c*t.y,h=u-c*t.y;return new G({xmin:o,xmax:l,ymin:h,ymax:u,spatialReference:r})}getBlockWidthHeight(t){return{blockWidth:t>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:t>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(t,e,i){const s=this.rasterInfo.storageInfo.blockBoundary[t];return!s||s.maxRow<e||s.maxCol<i||s.minRow>e||s.minCol>i}async _fetchPixels(t,e,i,s={}){let r=Ce(t);if(r>=2)return{extent:t,pixelBlock:null};const n=this._getSourceDataInfo(t,e,i,s),{pyramidLevel:a,pyramidResolution:c,srcResolution:o,srcExtent:l,srcWidth:u,srcHeight:h}=n;if(u===0||h===0)return{extent:t,srcExtent:l,pixelBlock:null};const f=Y(this.rasterInfo.transform),d=(f==null?void 0:f.type)==="gcs-shift",p=P(we(t.spatialReference));!d&&p||(r=Ce(n.srcExtent,d));const y=this.rasterInfo.storageInfo,m={x:Math.floor((l.xmin-y.origin.x)/c.x+.1),y:Math.floor((y.origin.y-l.ymax)/c.y+.1)},g=await this._fetchRawTiles(a,m,{width:u,height:h,wrapCount:r},s);if(!g)return{extent:t,srcExtent:l,pixelBlock:null};const b=a>0?y.pyramidBlockWidth:y.blockWidth,v=a>0?y.pyramidBlockHeight:y.blockHeight,_=b===u&&v===h&&m.x%b==0&&m.y%v==0,k=new j({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/i,spatialReference:t.spatialReference}),R=!t.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:x}=s;if(!R&&_&&g.pixelBlocks.length===1&&b===e&&v===i&&o.x===k.x&&o.y===k.y)return{extent:t,srcExtent:l,pixelBlock:g.pixelBlocks[0]};const I=p&&P(we(l.spatialReference)),S=s.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");S&&!this.rasterJobHandler&&await Je();const C=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:t,srcBufferExtent:g.extent,pixelSize:k.toJSON(),datumTransformation:x,rasterTransform:f,hasWrapAround:r>0||I,isAdaptive:this.ioConfig.optimizeProjectionAccuracy!==!1,includeGCSGrid:S},s):di({projectedExtent:t,srcBufferExtent:g.extent,pixelSize:k,datumTransformation:x,rasterTransform:f,hasWrapAround:r>0||I,isAdaptive:!1,includeGCSGrid:S});let F;const q=!s.requestRawData,K={rows:C.spacing[0],cols:C.spacing[1]},M=Y(this._getRasterTileAlignmentInfo(a,g.extent.xmin)),{pixelBlocks:N,mosaicSize:H,isPartiallyFilled:A}=g;let W=null;if(this.rasterJobHandler)({pixelBlock:F,localNorthDirections:W}=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:N,srcMosaicSize:H,destDimension:q?{width:e,height:i}:null,coefs:q?C.coefficients:null,sampleSpacing:q?K:null,projectDirections:S,gcsGrid:S?C.gcsGrid:null,isUV:this.rasterInfo.dataType==="vector-uv",interpolation:s.interpolation,alignmentInfo:M,blockWidths:null},s));else{const z=ke(N,H,{alignmentInfo:M});F=q?Zt(z,{width:e,height:i},C.coefficients,K,s.interpolation):z,S&&C.gcsGrid&&(W=Qt({width:e,height:i},C.gcsGrid),F=ei(F,this.rasterInfo.dataType,W))}return s.requestRawData||S?{srcExtent:l,pixelBlock:F,transformGrid:C,localNorthDirections:W,extent:t,isPartiallyFilled:A}:{srcExtent:l,extent:t,pixelBlock:F}}async _fetchRawTiles(t,e,i,s){const{origin:r,blockBoundary:n}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:c}=this.getBlockWidthHeight(t);let{x:o,y:l}=e,{width:u,height:h,wrapCount:f}=i;const d=this._getRasterTileAlignmentInfo(t,0);s.buffer&&(o-=s.buffer.cols,l-=s.buffer.rows,u+=2*s.buffer.cols,h+=2*s.buffer.rows);let p=0,y=0,m=0;f&&P(d)&&({worldColumnCountFromOrigin:y,originColumnOffset:m,rightPadding:p}=d,y*d.blockWidth-p>=o+u&&(p=0));const g=Math.floor(o/a),b=Math.floor(l/c),v=Math.floor((o+u+p-1)/a),_=Math.floor((l+h+p-1)/c),k=n[t];if(!k)return null;const{minRow:R,minCol:x,maxCol:I,maxRow:S}=k;if(f===0&&(_<R||v<x||b>S||g>I))return null;const C=new Array;let F=!1;const q=this.ioConfig.allowPartialFill==null?s.allowPartialFill:this.ioConfig.allowPartialFill;for(let z=b;z<=_;z++)for(let $=g;$<=v;$++){let ge=$;if(!s.disableWrapAround&&f&&P(d)&&y<=$&&(ge=$-y-m),z>=R&&ge>=x&&S>=z&&I>=ge){const Oe=this._fetchRawTile(t,z,ge,s);q?C.push(new Promise(ze=>{Oe.then(nt=>ze(nt)).catch(()=>{F=!0,ze(null)})})):C.push(Oe)}else C.push(null)}if(C.length===0)return null;const K=await Promise.all(C),M={height:(_-b+1)*c,width:(v-g+1)*a},{spatialReference:N}=this.rasterInfo,H=this.getPyramidPixelSize(t),{x:A,y:W}=H;return{extent:new G({xmin:r.x+g*a*A,xmax:r.x+(v+1)*a*A,ymin:r.y-(_+1)*c*W,ymax:r.y-b*c*W,spatialReference:N}),pixelBlocks:K,mosaicSize:M,isPartiallyFilled:F}}_fetchRawTile(t,e,i,s){const r=this.rasterInfo.storageInfo.blockBoundary[t];if(!r)return Promise.resolve(null);const{minRow:n,minCol:a,maxCol:c,maxRow:o}=r;if(e<n||i<a||e>o||i>c)return Promise.resolve(null);const l=qe(this.url,s.sliceId),u=`${t}/${e}/${i}`;let h=Ue(l,s.registryId,u);if(O(h)){const f=new AbortController;h=this.fetchRawTile(t,e,i,L(B({},s),{signal:f.signal})),Ve(l,s.registryId,u,h,f),h.catch(()=>Ri(l,s.registryId,u))}return s.signal&&mt(s,()=>{Ti(l,s.registryId,u)}),h}_computeMagDirValues(t){var o;const{bandCount:e,dataType:i}=this.rasterInfo;if(!(e===2&&i==="vector-magdir"||i==="vector-uv")||(t==null?void 0:t.length)!==2||!((o=t[0])==null?void 0:o.length))return null;const s=t[0].length;if(i==="vector-magdir"){const l=t[1].map(u=>(u+360)%360);return[t[0],l]}const[r,n]=t,a=[],c=[];for(let l=0;l<s;l++){const[u,h]=ti([r[l],n[l]]);a.push(u),c.push(h)}return[a,c]}_getRasterTileAlignmentInfo(t,e){return this._rasterTileAlighmentInfo==null&&(this._rasterTileAlighmentInfo=mi(this.rasterInfo)),O(this._rasterTileAlighmentInfo.pyramidsInfo)?null:B({startX:e,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform},this._rasterTileAlighmentInfo.pyramidsInfo[t])}_getSourceDataInfo(t,e,i,s={}){const r={datumTransformation:s.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};s.srcResolution&&(r.srcResolution=s.srcResolution,this._updateSourceDataInfo(t,r));const n=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:a,srcHeight:c,pyramidLevel:o}=r,l=a/e,u=c/i,h=o<n&&l*u>=16;if(h||o===n&&(l>be||u>be)||a===0||c===0){const f=new j({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/i,spatialReference:t.spatialReference});let d=pi(f,this.rasterInfo.spatialReference,t,r.datumTransformation);const p=!d||s.srcResolution&&d.x+d.y<s.srcResolution.x+s.srcResolution.y;if(h&&s.srcResolution&&p){const y=Math.round(Math.log(Math.max(l,u))/Math.LN2)-1;if(n-o+3>=y){const m=2**y;d={x:s.srcResolution.x*m,y:s.srcResolution.y*m}}}d&&(r.srcResolution=d,this._updateSourceDataInfo(t,r))}return(r.srcWidth/e>be||r.srcHeight/i>be)&&(r.srcWidth=0,r.srcHeight=0),r}_updateSourceDataInfo(t,e){e.srcWidth=0,e.srcHeight=0;const i=this.rasterInfo.spatialReference,{srcResolution:s,datumTransformation:r}=e,{pyramidLevel:n,pyramidResolution:a,excessiveReading:c}=Ge(s,this.rasterInfo,this.ioConfig.sampling);if(c)return;let o=e.srcExtent||Pe(t,i,r);if(o==null)return;const l=Y(this.rasterInfo.transform);l&&(o=l.inverseTransform(o)),e.srcExtent=o;const u=Math.ceil((o.xmax-o.xmin)/a.x-.1),h=Math.ceil((o.ymax-o.ymin)/a.y-.1);e.pyramidLevel=n,e.pyramidResolution=a,e.srcWidth=u,e.srcHeight=h}_getRequestOptionsWithSliceId(t){return P(this.rasterInfo.multidimensionalInfo)&&t.sliceId==null&&(t=L(B({},t),{sliceId:this.getSliceIndex(t.multidimensionalDefinition)})),t}_processIdentifyResult(t,e){const{srcLocation:i,position:s,pyramidLevel:r,useTransposedTile:n}=e,a=t.pixels[0].length/t.width/t.height;if(!(!t.mask||t.mask[s]))return{location:i,value:null};const{multidimensionalInfo:c}=this.rasterInfo;if(O(c)||!n){const d=t.pixels.map(m=>m[s]),p={location:i,value:d,pyramidLevel:r},y=this._computeMagDirValues(d.map(m=>[m]));return(y==null?void 0:y.length)&&(p.magdirValue=y.map(m=>m[0])),p}let o=t.pixels.map(d=>Array.prototype.slice.call(d,s*a,s*a+a)),l=this._computeMagDirValues(o);const{requestSomeSlices:u,identifyOptions:h}=e;let f=Jt(c,h.transposedVariableName);if(u){const d=Wt(f,Y(h.multidimensionalDefinition),Y(h.timeExtent));o=o.map(p=>d.map(y=>p[y])),l=l==null?void 0:l.map(p=>d.map(y=>p[y])),f=d.map(p=>f[p])}return{location:i,value:null,dataSeries:f.map((d,p)=>{const y={value:o.map(m=>m[p]),multidimensionalDefinition:d.multidimensionalDefinition,variableName:d.multidimensionalDefinition[0].variableName,dimensionValues:{}};return(l==null?void 0:l.length)&&(y.magdirValue=[l[0][p],l[1][p]]),d.multidimensionalDefinition.forEach(m=>y.dimensionValues[m.dimensionName]=m.values[0]),y}),pyramidLevel:r}}};w([T()],X.prototype,"_rasterTileAlighmentInfo",void 0),w([T({readOnly:!0})],X.prototype,"_isGlobalWrappableSource",null),w([T(Qe)],X.prototype,"url",null),w([T({type:String,json:{write:!0}})],X.prototype,"datasetName",void 0),w([T({type:String,json:{write:!0}})],X.prototype,"datasetFormat",void 0),w([T()],X.prototype,"rasterInfo",void 0),w([T()],X.prototype,"ioConfig",void 0),w([T()],X.prototype,"sourceJSON",void 0),X=w([ee("esri.layers.support.rasterDatasets.BaseRaster")],X);const ue=X;function _i(t){const e=t.fields,i=t.records,s=e.some(l=>l.name.toLowerCase()==="oid")?"OBJECTID":"OID",r=[{name:s,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(l=>({name:l.name,type:"esriFieldType"+l.typeName,alias:l.name}))),n=r.map(l=>l.name),a=[];let c=0,o=0;return i.forEach(l=>{const u={};for(u[s]=c++,o=1;o<n.length;o++)u[n[o]]=l[o-1];a.push({attributes:u})}),{displayFieldName:"",fields:r,features:a}}class ki{static get supportedVersions(){return[5]}static parse(e){const i=new DataView(e),s=3&i.getUint8(0);if(s!==3)return{header:{version:s},recordSet:null};const r=i.getUint32(4,!0),n=i.getUint16(8,!0),a=i.getUint16(10,!0),c={version:s,recordCount:r,headerByteCount:n,recordByteCount:a};let o=32;const l=[],u=[];let h;if(s===3){for(;i.getUint8(o)!==13;)h=String.fromCharCode(i.getUint8(o+11)).trim(),l.push({name:Le(new Uint8Array(e,o,11)),type:h,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(h)],length:i.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;u.length<r&&e.byteLength-o>a;){const f=[];i.getUint8(o)===32?(o+=1,l.forEach(d=>{if(d.type==="C")f.push(Le(new Uint8Array(e,o,d.length)).trim());else if(d.type==="N")f.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,d.length)).trim(),10));else if(d.type==="F")f.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,d.length)).trim()));else if(d.type==="D"){const p=String.fromCharCode.apply(null,new Uint8Array(e,o,d.length)).trim();f.push(new Date(parseInt(p.substring(0,4),10),parseInt(p.substring(4,6),10)-1,parseInt(p.substring(6,8),10)))}o+=d.length}),u.push(f)):o+=a}}return{header:c,fields:l,records:u,recordSet:_i({fields:l,records:u})}}}const re=new Map;re.set("int16","esriFieldTypeSmallInteger"),re.set("int32","esriFieldTypeInteger"),re.set("int64","esriFieldTypeInteger"),re.set("float32","esriFieldTypeSingle"),re.set("float64","esriFieldTypeDouble"),re.set("text","esriFieldTypeString");const Xe=8;let he=class extends ue{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(t){await this.init();const{data:e}=await this.request(this.url+"/conf.json",{signal:t==null?void 0:t.signal});if(!this._validateHeader(e))throw new E("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:s}=this._parseHeader(e);if(s.dataType==="thematic"){const r=await this._fetchAuxiliaryInformation();s.attributeTable=r}this._set("storageInfo",i),this._set("rasterInfo",s),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(t,e,i,s={}){const{transposeInfo:r}=this.rasterInfo.storageInfo,{transposedVariableName:n}=s,a=!(!r||!n),c=a?0:this.rasterInfo.storageInfo.maximumPyramidLevel-t;if(c<0)return null;const o=this._buildCacheFilePath(c,e,i,s.multidimensionalDefinition,n),l=this._getIndexRecordFromBundle(e,i,a),u=await this.request(o,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:s.signal});if(!u)return null;const h=new Uint8Array(u.data),f=this._getTileEndAndContentType(h,l);if(f.recordSize===0)return null;const d=await this.request(o,{range:{from:f.position,to:f.position+f.recordSize},responseType:"array-buffer",signal:s.signal});if(!d)return null;const[p,y]=this._getTileSize(a);return this.decodePixelBlock(d.data,{width:p,height:y,planes:null,pixelType:null,returnPixelInterleavedDims:a})}_validateHeader(t){const e=["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"];return t&&t.type==="RasterInfo"&&!e.some(i=>!t[i])}_parseHeader(t){var W,z;const e=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][t.pixelType],{bandCount:i,histograms:s,colormap:r,blockWidth:n,blockHeight:a,firstPyramidLevel:c,maximumPyramidLevel:o}=t,l=t.statistics&&t.statistics.map($=>({min:$.min,max:$.max,avg:$.mean,stddev:$.standardDeviation,median:$.median,mode:$.mode})),u=t.extent.spatialReference,h=(W=t.geodataXform)==null?void 0:W.spatialReference,f=new V((u==null?void 0:u.wkid)||(u==null?void 0:u.wkt)?u:h);let d=new G({xmin:t.extent.xmin,ymin:t.extent.ymin,xmax:t.extent.xmax,ymax:t.extent.ymax,spatialReference:f});const p=new j({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:f}),y=Math.round((d.xmax-d.xmin)/p.x),m=Math.round((d.ymax-d.ymin)/p.y),g=this._parseTransform(t.geodataXform),b=g?d:null;g&&(d=g.forwardTransform(d),p.x=(d.xmax-d.xmin)/y,p.y=(d.ymax-d.ymin)/m);const v=(z=t.properties)!=null?z:{},_=t.format.toLowerCase().replace("cache/",""),k=new j(t.origin.x,t.origin.y,f);let R,x,I,S;if(r&&r.colors)for(R=[],x=0;x<r.colors.length;x++)I=r.colors[x],S=r.values?r.values[x]:x,R.push([S,255&I,I<<16>>>24,I<<8>>>24,I>>>24]);const C=t.LODInfos,F=[];for(x=0;x<C.levels.length;x++)F.push({level:C.levels[x],resolution:C.resolutions[x],scale:96/.0254*C.resolutions[x]});const q=new le({dpi:96,lods:F,format:_,origin:k,size:[n,a],spatialReference:f}),K={recordSize:Xe,packetSize:t.packetSize,headerSize:t.packetSize*t.packetSize*Xe+64},M=[{maxCol:Math.ceil(y/n)-1,maxRow:Math.ceil(m/a)-1,minCol:0,minRow:0}];let N=2;if(o>0)for(x=0;x<o;x++)M.push({maxCol:Math.ceil(y/N/n)-1,maxRow:Math.ceil(m/N/a)-1,minCol:0,minRow:0}),N*=2;const H=t.mdInfo;let A=null;if(H&&v._yxs){const $=v._yxs;A={packetSize:$.PacketSize,tileSize:[$.TileXSize,$.TileYSize]}}return{storageInfo:K,rasterInfo:new ye({width:y,height:m,pixelType:e,bandCount:i,extent:d,nativeExtent:b,transform:g,spatialReference:f,pixelSize:p,keyProperties:v,statistics:l,histograms:s,multidimensionalInfo:H,colormap:R,storageInfo:new pe({blockWidth:n,blockHeight:a,pyramidBlockWidth:n,pyramidBlockHeight:a,origin:k,tileInfo:q,transposeInfo:A,firstPyramidLevel:c,maximumPyramidLevel:o,blockBoundary:M})})}}_parseTransform(t){var i,s;if(!yi(t))throw new E("cloudraster:open","the data contains unsupported geodata transform types");const e=gi(t);if(e.type==="identity")return null;if(e.type!=="polynomial"||!((i=e.forwardCoefficients)==null?void 0:i.length)||!((s=e.inverseCoefficients)==null?void 0:s.length))throw new E("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return e}async _fetchAuxiliaryInformation(t){const e=this.request(this.url+"/conf.vat.json",{signal:t}).then(n=>n.data).catch(()=>null),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:t}).then(n=>n.data).catch(()=>null),s=await Promise.all([e,i]);let r;if(s[0]){let n=s[0].fields;const a=s[0].values;if(n&&a){n=n.map(o=>({type:o.name==="OID"?"esriFieldTypeOID":re.get(o.type),name:o.name,alias:o.alias||o.name}));const c=a.map(o=>({attributes:o}));n&&a&&(r={fields:n,features:c})}}return!r&&s[1]&&(r=ki.parse(s[1]).recordSet),pt.fromJSON(r)}_buildCacheFilePath(t,e,i,s,r){const n=this._getPackageSize(!!r),a=Math.floor(e/n)*n,c=Math.floor(i/n)*n,o="R"+this._toHexString4(a)+"C"+this._toHexString4(c);let l="L";l+=t>=10?t.toString():"0"+t.toString();const{multidimensionalInfo:u}=this.rasterInfo,h=s==null?void 0:s[0];if(O(u)||!h)return`${this.url}/_alllayers/${l}/${o}.bundle`;let f="_yxs";if(!r){f=u.variables.find(y=>y.name===h.variableName).dimensions[0].values.indexOf(h.values[0]).toString(16);const p=4-f.length;for(let y=0;y<p;y++)f="0"+f;f="S"+f}const d=this._getVariableFolderName(r||h.variableName);return`${this.url}/_alllayers/${d}/${f}/${l}/${o}.bundle`}_getPackageSize(t=!1){const{transposeInfo:e}=this.rasterInfo.storageInfo;return t&&P(e)?e.packetSize:this.storageInfo.packetSize}_getTileSize(t=!1){const{storageInfo:e}=this.rasterInfo,{transposeInfo:i}=e;return t&&P(i)?i.tileSize:e.tileInfo.size}_getVariableFolderName(t){return(t=t.trim())===""?"_v":t.replace(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(t,e,i=!1){const s=this._getPackageSize(i),r=s*(t%s)+e%s;if(r<0)throw"Invalid level / row / col";return 20+r*this.storageInfo.recordSize+44}_getTileEndAndContentType(t,e){const i=t.subarray(e,e+8);let s,r=0;for(s=0;s<5;s++)r|=(255&i[s])<<8*s;const n=1099511627775&r;for(r=0,s=5;s<8;s++)r|=(255&i[s])<<8*(s-5);return{position:n,recordSize:1099511627775&r}}_toHexString4(t){let e=t.toString(16);if(e.length!==4){let i=4-e.length;for(;i-- >0;)e="0"+e}return e}};w([T({readOnly:!0})],he.prototype,"storageInfo",void 0),w([T({type:String,json:{write:!0}})],he.prototype,"datasetFormat",void 0),he=w([ee("esri.layers.support.rasterDatasets.CloudRaster")],he);const Ci=he;let fe=class extends ue{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(t){var y;await this.init();const{pixelBlock:e,statistics:i,histograms:s,name:r,keyProperties:n,nativeExtent:a,transform:c}=this.data,{width:o,height:l,pixelType:u}=e,h=this.data.extent||new G({xmin:-.5,ymin:.5,xmax:o-.5,ymax:l-.5,spatialReference:new V({wkid:3857})}),f=(y=this.data.isPseudoSpatialReference)!=null?y:!this.data.extent,d={x:h.width/o,y:h.height/l},p=new ye({width:o,height:l,pixelType:u,extent:h,nativeExtent:a,transform:c,pixelSize:d,spatialReference:h.spatialReference,bandCount:3,keyProperties:n||{},statistics:i,isPseudoSpatialReference:f,histograms:s});this.createRemoteDatasetStorageInfo(p,512,512),this._set("rasterInfo",p),this.updateTileInfo(),await this._buildInMemoryRaster(e,{width:512,height:512},t),this.datasetName=r,this.url="/InMemory/"+r}fetchRawTile(t,e,i,s={}){const r=this._pixelBlockTiles.get(`${t}/${e}/${i}`);return Promise.resolve(r)}async _buildInMemoryRaster(t,e,i){var l,u;const s=this.rasterInfo.storageInfo.maximumPyramidLevel,r=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:t,tileSize:e,maximumPyramidLevel:s},i):Promise.resolve(ii(t,e,s)),n=P(this.rasterInfo.statistics),a=P(this.rasterInfo.histograms),c=n?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},i):Promise.resolve(si(t)),o=await it([r,c]);if(!o[0].value&&o[1].value)throw new E("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=o[0].value,n||(this.rasterInfo.statistics=(l=o[1].value)==null?void 0:l.statistics),a||(this.rasterInfo.histograms=(u=o[1].value)==null?void 0:u.histograms)}};w([T({type:String,json:{write:!0}})],fe.prototype,"datasetFormat",void 0),w([T()],fe.prototype,"data",void 0),fe=w([ee("esri.layers.support.rasterDatasets.InMemoryRaster")],fe);const Pi=fe;function ce(t,e){if(!t||!e)return[];let i=e;e.includes("/")?(i=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const s=[];if(e){const n=ce(t,i);for(let a=0;a<n.length;a++)ce(n[a],e).forEach(c=>s.push(c));return s}const r=t.getElementsByTagNameNS("*",i);if(!r||r.length===0)return[];for(let n=0;n<r.length;n++)s.push(r[n]||r.item[n]);return s}function U(t,e){if(!t||!e)return null;let i=e;e.includes("/")?(i=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const s=ce(t,i);return s.length>0?e?U(s[0],e):s[0]:null}function Q(t,e=null){const i=e?U(t,e):t;let s;return i?(s=i.textContent||i.nodeValue,s?s.trim():null):null}function Mi(t,e){const i=ce(t,e),s=[];let r;for(let n=0;n<i.length;n++)r=i[n].textContent||i[n].nodeValue,r&&(r=r.trim(),r!==""&&s.push(r));return s}function ve(t,e){return Mi(t,e).map(i=>Number(i))}function ae(t,e){const i=Q(t,e);return Number(i)}function Me(t,e){var r;const i=(r=t==null?void 0:t.nodeName)==null?void 0:r.toLowerCase(),s=e.toLowerCase();return i.slice(i.lastIndexOf(":")+1)===s}function Ye(t,e){if(!t||!e)return null;const i=[];for(let s=0;s<t.length;s++)i.push(t[s]),i.push(e[s]);return i}function Fi(t){var u;const e=U(t,"GeodataXform"),i=_e(ae(e,"SpatialReference/WKID")||Q(e,"SpatialReference/WKT"));if(e.getAttribute("xsi:type")!=="typens:PolynomialXform")return{spatialReference:i,transform:null};const s=(u=ae(e,"PolynomialOrder"))!=null?u:1,r=ve(e,"CoeffX/Double"),n=ve(e,"CoeffY/Double"),a=ve(e,"InverseCoeffX/Double"),c=ve(e,"InverseCoeffY/Double"),o=Ye(r,n),l=Ye(a,c);return{spatialReference:i,transform:new $e({spatialReference:i,polynomialOrder:s,forwardCoefficients:o,inverseCoefficients:l})}}function Bi(t){var f;const e=ae(t,"NoDataValue"),i=U(t,"Histograms/HistItem"),s=ae(i,"HistMin"),r=ae(i,"HistMax"),n=ae(i,"BucketCount"),a=(f=Q(i,"HistCounts"))==null?void 0:f.split("|").map(d=>Number(d));let c,o,l,u;ce(t,"Metadata/MDI").forEach(d=>{var y;const p=Number((y=d.textContent)!=null?y:d.nodeValue);switch(d.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":c=p;break;case"STATISTICS_MAXIMUM":o=p;break;case"STATISTICS_MEAN":l=p;break;case"STATISTICS_STDDEV":u=p}});const h=ae(t,"Metadata/SourceBandIndex");return{noDataValue:e,histogram:(a==null?void 0:a.length)&&c!=null&&o!=null?{min:s,max:r,size:n||a.length,counts:a}:null,sourceBandIndex:h,statistics:c!=null&&o!=null?{min:c,max:o,avg:l,stddev:u}:null}}function _e(t){if(!t)return null;let e=Number(t);if(!isNaN(e)&&e!==0)return new V({wkid:e});if((t=String(t)).startsWith("COMPD_CS")){if(!t.includes("VERTCS")||!t.includes("GEOGCS")&&!t.startsWith("PROJCS"))return null;const i=t.indexOf("VERTCS"),s=t.indexOf("PROJCS"),r=s>-1?s:t.indexOf("GEOGCS");if(r===-1)return null;const n=t.slice(r,t.lastIndexOf("]",i)+1).trim(),a=t.slice(i,t.lastIndexOf("]")).trim();e=Fe(n);const c=new V(e?{wkid:e}:{wkt:n}),o=Fe(a);return o&&(c.vcsWkid=o),c}return t.startsWith("GEOGCS")||t.startsWith("PROJCS")?(e=Fe(t),new V(e!==0?{wkid:e}:{wkt:t})):null}function Fe(t){var r;const e=t.replace(/\]/g,"[").replace(/\"/g,"").split("[").map(n=>n.trim()).filter(n=>n!==""),i=e[e.length-1].split(","),s=(r=i[0])==null?void 0:r.toLowerCase();if((s==="epsg"||s==="esri")&&t.endsWith('"]]')){const n=Number(i[1]);if(!isNaN(n)&&n!==0)return n}return 0}function De(t){var s;if(((s=t==null?void 0:t.documentElement.tagName)==null?void 0:s.toLowerCase())!=="pamdataset")return{};const e={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};t.documentElement.childNodes.forEach(r=>{if(r.nodeType===1){if(Me(r,"SRS")){if(!e.spatialReference){const n=Q(r);e.spatialReference=_e(n)}}else if(Me(r,"Metadata"))if(r.getAttribute("domain")==="xml:ESRI"){const{spatialReference:n,transform:a}=Fi(r);e.transform=a,e.spatialReference||(e.spatialReference=n)}else ce(r,"MDI").forEach(n=>e.metadata[n.getAttribute("key")]=Q(n));else if(Me(r,"PAMRasterBand")){const n=Bi(r);n.sourceBandIndex!=null&&e.rasterBands[n.sourceBandIndex]==null?e.rasterBands[n.sourceBandIndex]=n:e.rasterBands.push(n)}}});const i=e.rasterBands;if(i){const r=!!i[0].statistics;e.statistics=r?i.map(a=>a.statistics):null;const n=!!i[0].histogram;e.histograms=n?i.map(a=>a.histogram):null}return e}let Re=class extends ue{async open(t){await this.init();const e=await this._fetchData(t);let{spatialReference:i,statistics:s,histograms:r,transform:n}=await this._fetchAuxiliaryData(t);const a=!i;a&&(i=new V({wkid:3857})),(r==null?void 0:r.length)&&s==null&&(s=Be(r));const{width:c,height:o}=e;let l=new G({xmin:-.5,ymin:.5-o,xmax:c-.5,ymax:.5,spatialReference:i});const u=n?n.forwardTransform(l):l;let h=!0;if(n){const d=n.forwardCoefficients;h=d&&d[1]===0&&d[2]===0,h&&(n=null,l=u)}const f=new Pi({data:{extent:u,nativeExtent:l,transform:n,pixelBlock:e,statistics:s,histograms:r,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});await f.open(),f.data=null,this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}fetchRawTile(t,e,i,s={}){return this._inMemoryRaster.fetchRawTile(t,e,i,s)}async _fetchData(t){const{data:e}=await this.request(this.url,{responseType:"array-buffer",signal:t==null?void 0:t.signal}),i=ri(e).toUpperCase();if(i!=="JPG"&&i!=="PNG"&&i!=="GIF"&&i!=="BMP")throw new E("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",i);const s=i.toLowerCase(),r=s==="gif"||s==="bmp"||!yt("ios");return await this.decodePixelBlock(e,{format:s,useCanvas:r,hasNoZlibMask:!0})}async _fetchAuxiliaryData(t){var l,u;const e=Y(t==null?void 0:t.signal),i=(l=this.ioConfig.skipExtensions)!=null?l:[],s=i.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:e}),r=this.datasetFormat,n=r==="JPG"?"jgw":r==="PNG"?"pgw":r==="BMP"?"bpw":null,a=i.includes(n)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+n,{responseType:"text",signal:e}),c=await it([s,a]);if(e==null?void 0:e.aborted)throw gt();const o=De((u=c[0].value)==null?void 0:u.data);if(!o.transform){const h=c[1].value?c[1].value.data.split(`
`).slice(0,6).map(f=>Number(f)):null;o.transform=(h==null?void 0:h.length)===6?new $e({forwardCoefficients:[h[4],h[5],h[0],-h[1],h[2],-h[3]]}):null}return o}};w([T({type:String,json:{write:!0}})],Re.prototype,"datasetFormat",void 0),Re=w([ee("esri.layers.support.rasterDatasets.ImageAuxRaster")],Re);const Se=Re;let de=class extends ue{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer"}async open(t){var a,c;await this.init();const e=t&&t.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:e});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const s=i.data;if(this.sourceJSON=s,!s)throw new E("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!s.tileInfo)throw new E("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const r=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=s.cacheType,this.tileType==null&&(r.includes(s.tileInfo.format.toLowerCase())?this.tileType="Map":s.tileInfo.format.toLowerCase()==="lerc"?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=s.name.slice(s.name.indexOf("/")+1);const n=await this._fetchRasterInfo({signal:e});if(!P(n))throw new E("image-server-raster:open","cannot initialize image service");{const o=this.tileType==="Map"?Ii(s.tileInfo,s):le.fromJSON(s.tileInfo),{extent:l,pixelSize:u}=n,h=.5/n.width*u.x;let f,d;const p=o.lodAt(Math.max.apply(null,o.lods.map(I=>I.level)));this.tileType!=="Map"&&s.maxScale!==0&&(this.tileType==="Raster"?(f=o.lods.find(I=>I.resolution===u.x),f||(f=o.lods[o.lods.length-1])):(f=o.lods.find(I=>Math.abs(I.scale-s.maxScale)<h),f||(f=o.lods.filter(I=>I.scale>s.maxScale).sort((I,S)=>I.scale>S.scale?1:-1)[0])),u.x=u.y=f.resolution,n.width=Math.ceil((l.xmax-l.xmin)/u.x-.1),n.height=Math.ceil((l.ymax-l.ymin)/u.y-.1)),f||(f=p);const y=o.lodAt(Math.min.apply(null,o.lods.map(I=>I.level)));this.tileType==="Map"?this._levelOffset=o.lods[0].level:s.minScale!==0&&this.tileType==="Elevation"&&(d=o.lods.find(I=>Math.abs(I.scale-s.minScale)<h),this._levelOffset=d.level-y.level),d||(d=y);const m=Math.max(u.x,u.y);(Math.abs(u.x-u.y)>h||!o.lods.some(I=>Math.abs(I.resolution-m)<h))&&(u.x=u.y=f.resolution,n.width=Math.ceil((l.xmax-l.xmin)/u.x-.1),n.height=Math.ceil((l.ymax-l.ymin)/u.y-.1));const g=f.level-d.level,[b,v]=o.size,_=[];o.lods.forEach(I=>{I.level>=d.level&&I.level<=f.level&&_.push({x:I.resolution,y:I.resolution})}),_.sort((I,S)=>I.x-S.x);const k=this.computeBlockBoundary(l,b,v,o.origin,_,g),R=_.length>1?_.slice(1):null;let x;s.transposeInfo&&(x={tileSize:[s.transposeInfo.rows,s.transposeInfo.cols],packetSize:(c=(a=n.keyProperties)==null?void 0:a._yxs.PacketSize)!=null?c:0}),n.storageInfo=new pe({blockWidth:o.size[0],blockHeight:o.size[1],pyramidBlockWidth:o.size[0],pyramidBlockHeight:o.size[1],pyramidResolutions:R,compression:o.format,origin:o.origin,firstPyramidLevel:1,maximumPyramidLevel:g,tileInfo:o,transposeInfo:x,blockBoundary:k}),this._fixGCSShift(n),this._set("rasterInfo",n)}if(s.capabilities.toLowerCase().includes("tilemap")){const o={tileInfo:n.storageInfo.tileInfo,parsedUrl:xt(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new wi({layer:o})}}async fetchRawTile(t,e,i,s={}){const{storageInfo:r,extent:n}=this.rasterInfo,{transposeInfo:a}=r,c=P(a)&&!!s.transposedVariableName;if(this._slices&&!c&&s.sliceId==null)return null;const o=c?0:r.maximumPyramidLevel-t+this._levelOffset,l=`${this.url}/tile/${o}/${e}/${i}`,u=this._slices?c?{variable:s.transposedVariableName}:{sliceId:s.sliceId||0}:null,{data:h}=await this.request(l,{query:u,responseType:"array-buffer",signal:s.signal});if(!h)return null;const f=c?a.tileSize:r.tileInfo.size,d=await this.decodePixelBlock(h,{width:f[0],height:f[1],planes:null,pixelType:null,isPoint:this.tileType==="Elevation",returnPixelInterleavedDims:c}),p=r.blockBoundary[t];if(r.compression!=="jpg"||i>p.minCol&&i<p.maxCol&&e>p.minRow&&e<p.maxRow)return d;const{origin:y,blockWidth:m,blockHeight:g}=r,{x:b,y:v}=this.getPyramidPixelSize(t),_=Math.round((n.xmin-y.x)/b)%m,k=Math.round((n.xmax-y.x)/b)%m||m,R=Math.round((y.y-n.ymax)/v)%g,x=Math.round((y.y-n.ymin)/v)%g||g,I=i===p.minCol?_:0,S=e===p.minRow?R:0,C=i===p.maxCol?k:m,F=e===p.maxRow?x:g;return ni(d,{x:I,y:S},{width:C-I,height:F-S}),d}getSliceIndex(t){if(!this._slices||O(t)||t.length===0)return null;const e=t;for(let i=0;i<this._slices.length;i++){const s=this._slices[i].multidimensionalDefinition;if(s.length===e.length&&!s.some(r=>{const n=e.find(a=>r.variableName===a.variableName&&a.dimensionName===r.dimensionName);return n?(Array.isArray(r.values[0])?`${r.values[0][0]}-${r.values[0][1]}`:r.values[0])!==(Array.isArray(n.values[0])?`${n.values[0][0]}-${n.values[0][1]}`:n.values[0]):!0}))return i}return null}async fetchVariableStatisticsHistograms(t,e){const i=this.request(this.url+"/statistics",{query:{variable:t,f:"json"},signal:e}).then(n=>{var a;return(a=n.data)==null?void 0:a.statistics}),s=this.request(this.url+"/histograms",{query:{variable:t,f:"json"},signal:e}).then(n=>{var a;return(a=n.data)==null?void 0:a.histograms}),r=await Promise.all([i,s]);return r[0]&&r[0].forEach(n=>{n.avg=n.mean,n.stddev=n.standardDeviation}),{statistics:r[0]||null,histograms:r[1]||null}}async computeBestPyramidLevelForLocation(t,e={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(t,0,Y(e.datumTransformation));if(i===null)return null;let s=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let n=r-s+this._levelOffset;const a=i.srcLocation;for(;n>=0;){try{if(await this._tilemapCache.fetchAvailability(n,i.row,i.col,e)==="available")break}catch{}if(n--,s++,i=this.identifyPixelLocation(a,s,Y(e.datumTransformation)),i===null)return null}return n===-1||i==null?null:s}async _fetchRasterInfo(t){const e=this.sourceJSON;if(this.tileType==="Map"){const a=Math.ceil((e.extent.xmax-e.extent.xmin)/e.pixelSizeX-.1),c=Math.ceil((e.extent.ymax-e.extent.ymin)/e.pixelSizeY-.1),o=V.fromJSON(e.spatialReference||e.extent.spatialReference),l=new j({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:o});return new ye({width:a,height:c,bandCount:3,extent:G.fromJSON(e.extent),spatialReference:o,pixelSize:l,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:i}=t,s=Gt(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),r=e.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:i}).then(a=>a.data&&a.data.slices).catch(()=>null):null,n=await Promise.all([s,r]);return this._slices=n[1],n[0]}_fixScaleInServiceInfo(){const{sourceJSON:t}=this;t.minScale&&t.minScale<0&&(t.minScale=0),t.maxScale&&t.maxScale<0&&(t.maxScale=0)}_fixGCSShift(t){const{extent:e,spatialReference:i}=t;e.xmin===0&&e.xmax===360&&i.wkid&&i.isGeographic&&(t.nativeExtent=t.extent,t.transform=new xi,t.extent=t.transform.forwardTransform(e))}};w([T({type:String,json:{write:!0}})],de.prototype,"datasetFormat",void 0),w([T()],de.prototype,"tileType",void 0),de=w([ee("esri.layers.support.rasterDatasets.ImageServerRaster")],de);const $i=de,Z=new Map;Z.set("Int8","s8"),Z.set("UInt8","u8"),Z.set("Int16","s16"),Z.set("UInt16","u16"),Z.set("Int32","s32"),Z.set("UInt32","u32"),Z.set("Float32","f32"),Z.set("Float64","f32"),Z.set("Double64","f32");const te=new Map;te.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),te.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),te.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),te.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let oe=class extends ue{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(t){var y,m;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const e=t?Y(t.signal):null,i=await this.request(this.url,{responseType:"xml",signal:e}),{rasterInfo:s,files:r}=this._parseHeader(i.data);if(((y=this.ioConfig.skipExtensions)==null?void 0:y.indexOf("aux.xml"))===-1){const g=await this._fetchAuxiliaryData(t);g!=null&&(s.statistics=(m=g.statistics)!=null?m:s.statistics,s.histograms=g.histograms,g.histograms&&O(s.statistics)&&(s.statistics=Be(g.histograms)))}this._set("rasterInfo",s),this._files=r;const n=await this.request(r.index,{responseType:"array-buffer",signal:e});this._storageIndex=this._parseIndex(n.data);const{blockWidth:a,blockHeight:c}=this.rasterInfo.storageInfo,o=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:l,height:u}=this.rasterInfo,h=[],f=this._getBandSegmentCount();let d=0,p=-1;for(;d<this._storageIndex.length;){p++;const g=Math.ceil(l/a/o**p)-1,b=Math.ceil(u/c/o**p)-1;d+=(g+1)*(b+1)*f*4,h.push({maxRow:b,maxCol:g,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=h,p>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=p),this.updateTileInfo()}async fetchRawTile(t,e,i,s={}){const{blockWidth:r,blockHeight:n,blockBoundary:a}=this.rasterInfo.storageInfo,c=a[t];if(!c||c.maxRow<e||c.maxCol<i||c.minRow>e||c.minCol>i)return null;const{bandCount:o,pixelType:l}=this.rasterInfo,{ranges:u,actualTileWidth:h,actualTileHeight:f}=this._getTileLocation(t,e,i);if(!u||u.length===0)return null;if(u[0].from===0&&u[0].to===0){const S=new Uint8Array(r*n);return new bi({width:r,height:n,pixels:null,mask:S,validPixelCount:0})}const{bandIds:d}=this.ioConfig,p=this._getBandSegmentCount(),y=[];let m=0;for(m=0;m<p;m++)(!d||d.indexOf[m]>-1)&&y.push(this.request(this._files.data,{range:{from:u[m].from,to:u[m].to},responseType:"array-buffer",signal:s.signal}));const g=await Promise.all(y),b=g.map(S=>S.data.byteLength).reduce((S,C)=>S+C),v=new Uint8Array(b);let _=0;for(m=0;m<p;m++)v.set(new Uint8Array(g[m].data),_),_+=g[m].data.byteLength;const k=te.get(this.rasterInfo.storageInfo.compression).decoderFormat,R=await this.decodePixelBlock(v.buffer,{width:r,height:n,format:k,planes:(d==null?void 0:d.length)||o,pixelType:l});if(P(this.rasterInfo.noDataValue)&&k!=="lerc"&&!R.mask){const S=this.rasterInfo.noDataValue[0];if(S!=null){const C=R.width*R.height,F=new Uint8Array(C);if(Math.abs(S)>1e24)for(m=0;m<C;m++)Math.abs((R.pixels[0][m]-S)/S)>1e-6&&(F[m]=1);else for(m=0;m<C;m++)R.pixels[0][m]!==S&&(F[m]=1);R.mask=F}}let x=0,I=0;if(h!==r||f!==n){let S=R.mask;if(S)for(m=0;m<n;m++)if(I=m*r,m<f)for(x=h;x<r;x++)S[I+x]=0;else for(x=0;x<r;x++)S[I+x]=0;else for(S=new Uint8Array(r*n),R.mask=S,m=0;m<f;m++)for(I=m*r,x=0;x<h;x++)S[I+x]=1}return R}_parseIndex(t){if(t.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let e,i,s,r,n,a;if(ai){for(i=new Uint8Array(t),r=new ArrayBuffer(t.byteLength),s=new Uint8Array(r),n=0;n<t.byteLength/4;n++)for(a=0;a<4;a++)s[4*n+a]=i[4*n+3-a];e=new Uint32Array(r)}else e=new Uint32Array(t);return e}_getBandSegmentCount(){return te.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(t,e,i){const{blockWidth:s,blockHeight:r,pyramidScalingFactor:n}=this.rasterInfo.storageInfo,{width:a,height:c}=this.rasterInfo,o=this._getBandSegmentCount();let l,u,h,f=0,d=0;for(h=0;h<t;h++)d=n**h,l=Math.ceil(a/s/d),u=Math.ceil(c/r/d),f+=l*u;d=n**t,l=Math.ceil(a/s/d),u=Math.ceil(c/r/d),f+=e*l+i,f*=4*o;const p=this._storageIndex.subarray(f,f+4*o);let y=0,m=0;const g=[];for(let b=0;b<o;b++)y=p[4*b+0]*2**32+p[4*b+1],m=y+p[4*b+2]*2**32+p[4*b+3],g.push({from:y,to:m});return{ranges:g,actualTileWidth:i<l-1?s:Math.ceil(a/d)-s*(l-1),actualTileHeight:e<u-1?r:Math.ceil(c/d)-r*(u-1)}}_parseHeader(t){const e=U(t,"MRF_META/Raster");if(!e)throw new E("mrf:open","not a valid MRF format");const i=U(e,"Size"),s=parseInt(i.getAttribute("x"),10),r=parseInt(i.getAttribute("y"),10),n=parseInt(i.getAttribute("c"),10),a=(Q(e,"Compression")||"none").toLowerCase();if(!te.has(a))throw new E("mrf:open","currently does not support compression "+a);const c=Q(e,"DataType")||"UInt8",o=Z.get(c);if(o==null)throw new E("mrf:open","currently does not support pixel type "+c);const l=U(e,"PageSize"),u=parseInt(l.getAttribute("x"),10),h=parseInt(l.getAttribute("y"),10),f=U(e,"DataValues");let d,p;if(f&&(p=f.getAttribute("NoData"),p!=null&&(d=p.trim().split(" ").map(F=>parseFloat(F)))),U(t,"MRF_META/CachedSource"))throw new E("mrf:open","currently does not support MRF referencing other data files");const y=U(t,"MRF_META/GeoTags"),m=U(y,"BoundingBox");let g,b=!1;if(m!=null){const F=parseFloat(m.getAttribute("minx")),q=parseFloat(m.getAttribute("miny")),K=parseFloat(m.getAttribute("maxx")),M=parseFloat(m.getAttribute("maxy")),N=Q(y,"Projection")||"";let H;if(N!=="LOCAL_CS[]")if(N.toLowerCase().startsWith("epsg:")){const A=Number(N.slice(5));isNaN(A)||A===0||(H=new V({wkid:A}))}else H=_e(N);else b=!0,H=new V({wkid:3857});g=new G(F,q,K,M),g.spatialReference=H}else b=!0,g=new G({xmin:-.5,ymin:.5-r,xmax:s-.5,ymax:.5,spatialReference:new V({wkid:3857})});const v=U(t,"MRF_META/Rsets"),_=parseInt(v&&v.getAttribute("scale")||"2",10),k=g.spatialReference,R=new pe({origin:new j({x:g.xmin,y:g.ymax,spatialReference:k}),blockWidth:u,blockHeight:h,pyramidBlockWidth:u,pyramidBlockHeight:h,compression:a,pyramidScalingFactor:_}),x=new j({x:g.width/s,y:g.height/r,spatialReference:k}),I=new ye({width:s,height:r,extent:g,isPseudoSpatialReference:b,spatialReference:k,bandCount:n,pixelType:o,pixelSize:x,noDataValue:d,storageInfo:R}),S=Q(t,"datafile"),C=Q(t,"IndexFile");return{rasterInfo:I,files:{mrf:this.url,index:C||this.url.replace(".mrf",".idx"),data:S||this.url.replace(".mrf",te.get(a).blobExtension)}}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:t==null?void 0:t.signal});return De(e)}catch{return null}}};w([T()],oe.prototype,"_files",void 0),w([T()],oe.prototype,"_storageIndex",void 0),w([T({type:String,json:{write:!0}})],oe.prototype,"datasetFormat",void 0),oe=w([ee("esri.layers.support.rasterIO.MRFRaster")],oe);const Di=oe,Ke=(t,e)=>{const i=t.get(e);return i&&i.values},Te=(t,e)=>{const i=t.get(e);return i&&i.values[0]};let ne=class extends ue{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(t){var N,H,A,W;await this.init();const e=t?Y(t.signal):null,{data:i}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:e});if(!i)throw new E("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:s,firstIFD:r,isBigTiff:n}=oi(i),a=[];await this._readIFDs(a,i,s,r,0,n?8:4,e);const c=li(a),{width:o,height:l,tileWidth:u,tileHeight:h,planes:f,pixelType:d,compression:p,firstPyramidLevel:y,maximumPyramidLevel:m,pyramidBlockWidth:g,pyramidBlockHeight:b,tileBoundary:v,affine:_,metadata:k}=c,R=((N=c.extent.spatialReference)==null?void 0:N.wkt)||((H=c.extent.spatialReference)==null?void 0:H.wkid);let x=_e(R),I=!1;x==null&&(I=!0,x=new V({wkid:3857}));const S=new G(L(B({},c.extent),{spatialReference:x})),C=new j(S?{x:S.xmin,y:S.ymax,spatialReference:x}:{x:0,y:0}),F=new pe({blockWidth:u,blockHeight:h,pyramidBlockWidth:g,pyramidBlockHeight:b,compression:p,origin:C,firstPyramidLevel:y,maximumPyramidLevel:m,blockBoundary:v}),q=new j({x:(S.xmax-S.xmin)/o,y:(S.ymax-S.ymin)/l,spatialReference:x}),K=k?{BandProperties:k.bandProperties,DataType:k.dataType}:{},M=new ye({width:o,height:l,bandCount:f,pixelType:d,compression:p,pixelSize:q,storageInfo:F,spatialReference:x,isPseudoSpatialReference:I,keyProperties:K,extent:S,statistics:k?k.statistics:null});if((_==null?void 0:_.length)&&(M.nativeExtent=new G({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:x}),M.transform=new $e({polynomialOrder:1,forwardCoefficients:[_[2]+_[0]/2,_[5]-_[3]/2,_[0],_[3],-_[1],-_[4]]}),M.extent=M.transform.forwardTransform(M.nativeExtent),M.pixelSize=new j({x:(S.xmax-S.xmin)/o,y:(S.ymax-S.ymin)/l,spatialReference:x}),F.origin.x=-.5,F.origin.y=.5),!((A=this.ioConfig.skipExtensions)==null?void 0:A.includes("aux.xml"))){const z=await this._fetchAuxiliaryData(t);if(z!=null){if(M.statistics=(W=z.statistics)!=null?W:M.statistics,M.histograms=z.histograms,z.histograms&&O(M.statistics)&&(M.statistics=Be(z.histograms)),z.transform&&!_){M.transform=z.transform,M.nativeExtent=M.extent;const $=M.transform.forwardTransform(M.nativeExtent);M.pixelSize=new j({x:($.xmax-$.xmin)/o,y:($.ymax-$.ymin)/l,spatialReference:x}),M.extent=$}M.spatialReference||(M.spatialReference=z.spatialReference)}}if(this._set("rasterInfo",M),this._headerInfo=B({littleEndian:s,isBigTiff:n,ifds:a},c),!this._headerInfo.isSupported)throw new E("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(t,e,i,s={}){var k;if(!((k=this._headerInfo)==null?void 0:k.isSupported)||this.isBlockOutside(t,e,i))return null;const r=this._getTileLocation(t,e,i);if(!r)return null;const{ranges:n,actualTileWidth:a,actualTileHeight:c,ifd:o}=r,l=n.map(R=>this.request(this.url,{range:R,responseType:"array-buffer",signal:s.signal})),u=await Promise.all(l),h=u.map(R=>R.data.byteLength).reduce((R,x)=>R+x),f=u.length===1?u[0].data:new ArrayBuffer(h),d=[0],p=[0];if(u.length>1){const R=new Uint8Array(f);for(let x=0,I=0;x<u.length;x++){const S=u[x].data;R.set(new Uint8Array(S),I),d[x]=I,I+=S.byteLength,p[x]=S.byteLength}}const{blockWidth:y,blockHeight:m}=this.getBlockWidthHeight(t),g=await this.decodePixelBlock(f,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:o,offsets:d,sizes:p},width:y,height:m,planes:null,pixelType:null});let b,v,_;if(a!==y||c!==m){let R=g.mask;if(R)for(b=0;b<m;b++)if(_=b*y,b<c)for(v=a;v<y;v++)R[_+v]=0;else for(v=0;v<y;v++)R[_+v]=0;else for(R=new Uint8Array(y*m),g.mask=R,b=0;b<c;b++)for(_=b*y,v=0;v<a;v++)R[_+v]=1}return g}async _readIFDs(t,e,i,s,r,n=4,a){if(!s)return null;(s>=e.byteLength||s<0)&&(e=(await this.request(this.url,{range:{from:s+r,to:s+r+this._bufferSize},responseType:"array-buffer",signal:a})).data,r=s+r,s=0);const c=await this._readIFD(e,i,s,r,Ie.TIFF_TAGS,n,a);if(t.push(c.ifd),!c.nextIFD)return null;await this._readIFDs(t,e,i,c.nextIFD-r,r,n,a)}async _readIFD(t,e,i,s,r=Ie.TIFF_TAGS,n=4,a){if(!t)return null;const c=ci(t,e,i,s,r,n);if(c.success){const o=[];if(c.ifd.forEach(l=>{l.values||o.push(l)}),o.length>0){const l=o.map(h=>h.offlineOffsetSize),u=Math.min.apply(null,l.map(h=>h[0]));if(Math.min.apply(null,l.map(h=>h[0]+h[1]))-u<=this._bufferSize){const{data:h}=await this.request(this.url,{range:{from:u,to:u+this._bufferSize},responseType:"array-buffer",signal:a});t=h,s=u,o.forEach(f=>ui(t,e,f,s))}}if(c.ifd.has("GEOKEYDIRECTORY")){const l=c.ifd.get("GEOKEYDIRECTORY"),u=l.values;if(u&&u.length>4){const h=u[0]+"."+u[1]+"."+u[2],f=await this._readIFD(t,e,l.valueOffset+6-s,s,Ie.GEO_KEYS,2,a);l.data=f.ifd,l.data&&l.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[h]})}}return c}if(c.requiredBufferSize&&c.requiredBufferSize!==t.byteLength)return(t=(await this.request(this.url,{range:{from:s,to:s+c.requiredBufferSize+4},responseType:"array-buffer",signal:a})).data).byteLength<c.requiredBufferSize?null:this._readIFD(t,e,0,s,Ie.TIFF_TAGS,4,a)}_getTileLocation(t,e,i){const{firstPyramidLevel:s,blockBoundary:r}=this.rasterInfo.storageInfo,n=t===0?0:t-(s-1),a=this._headerInfo.ifds[n];if(!a)return null;const c=hi(a,this._headerInfo),o=Ke(a,"TILEOFFSETS");if(o===void 0)return null;const l=Ke(a,"TILEBYTECOUNTS"),{minRow:u,minCol:h,maxRow:f,maxCol:d}=r[n];if(e>f||i>d||e<u||i<h)return null;const p=Te(a,"IMAGEWIDTH"),y=Te(a,"IMAGELENGTH"),m=Te(a,"TILEWIDTH"),g=Te(a,"TILELENGTH"),b=c?this.rasterInfo.bandCount:1,v=b*e*(d+1)+i,_=[{from:o[v],to:o[v+b-1]+l[v+b-1]-1}];if(c){let x=!0;for(let I=0;I<b;I++)if(o[v+I]+l[v+I]!==o[v+I+1]){x=!1;break}if(!x)for(let I=0;I<b;I++)_[I]={from:o[v+I],to:o[v+I]+l[v+I]-1}}const k=o[v],R=l[v];return k==null||R==null?null:{ranges:_,ifd:a,actualTileWidth:i===d?p%m:m,actualTileHeight:e===f?y%g:g}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:t==null?void 0:t.signal});return De(e)}catch{return null}}};w([T()],ne.prototype,"_files",void 0),w([T()],ne.prototype,"_headerInfo",void 0),w([T()],ne.prototype,"_bufferSize",void 0),w([T({type:String,json:{write:!0}})],ne.prototype,"datasetFormat",void 0),ne=w([ee("esri.layers.support.rasterDatasets.TIFFRaster")],ne);const Oi=ne,J=new Map;J.set("CRF",{desc:"Cloud Raster Format",constructor:Ci}),J.set("MRF",{desc:"Meta Raster Format",constructor:Di}),J.set("TIFF",{desc:"GeoTIFF",constructor:Oi}),J.set("RasterTileServer",{desc:"Raster Tile Server",constructor:$i}),J.set("JPG",{desc:"JPG Raster Format",constructor:Se}),J.set("PNG",{desc:"PNG Raster Format",constructor:Se}),J.set("GIF",{desc:"GIF Raster Format",constructor:Se}),J.set("BMP",{desc:"BMP Raster Format",constructor:Se});class zi{static get supportedFormats(){const e=new Set;return J.forEach((i,s)=>e.add(s)),e}static async open(e){const{url:i,ioConfig:s,sourceJSON:r}=e;let n=e.datasetFormat;n==null&&i.lastIndexOf(".")&&(n=i.slice(i.lastIndexOf(".")+1).toUpperCase()),n==="OVR"||n==="TIF"?n="TIFF":n!=="JPG"&&n!=="JPEG"&&n!=="JFIF"||(n="JPG"),i.toLowerCase().includes("/imageserver")&&!i.toLowerCase().includes("/wcsserver")&&(n="RasterTileServer");const a={url:i,sourceJSON:r,datasetFormat:n,ioConfig:s||{bandIds:null,sampling:null}};let c,o;if(this.supportedFormats.has(n)){if(n==="CRF"&&!s.enableCRF)throw new E("rasterfactory:open",`cannot open raster: ${i}`);return c=J.get(n).constructor,o=new c(a),await o.open({signal:e.signal}),o}if(n)throw new E("rasterfactory:open","not a supported format "+n);const l=Array.from(J.keys());let u=0;const h=()=>(n=l[u++],n&&(n!=="CRF"||s.enableCRF)?(c=J.get(n).constructor,o=new c(a),o.open({signal:e.signal}).then(()=>o).catch(()=>h())):null);return h()}static register(e,i,s){J.has(e.toUpperCase())||J.set(e.toUpperCase(),{desc:i,constructor:s})}}let D=class extends It(wt(bt(vt(St(vi(Tt(Rt(_t(kt))))))))){constructor(...t){super(...t),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(t,e){return typeof t=="string"?B({url:t},e):t}load(t){const e=P(t)?t.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},t).catch(Ct).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var r,n,a;let t=[new me({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const e=(n=(r=this.rasterInfo)==null?void 0:r.attributeTable)==null?void 0:n.fields,i="Raster.";if(e){const c=e.filter(o=>o.type!=="oid"&&o.name.toLowerCase()!=="value").map(o=>{const l=o.clone();return l.name=i+o.name,l});t=t.concat(c)}const s=this.rasterInfo.dataType;if((s==="vector-magdir"||s==="vector-uv")&&P(this.rasterInfo.multidimensionalInfo)){const c=(a=this.rasterInfo.multidimensionalInfo.variables[0].unit)==null?void 0:a.trim(),o="Magnitude"+(c?` (${c})`:"");t.push(new me({name:"Raster.Magnitude",alias:o,domain:null,editable:!1,type:"double"})),t.push(new me({name:"Raster.Direction",alias:"Direction (\xB0)",domain:null,editable:!1,type:"double"}))}return t}set renderer(t){this._set("renderer",t),this.updateRenderer()}readRenderer(t,e,i){const s=e&&e.layerDefinition&&e.layerDefinition.drawingInfo&&e.layerDefinition.drawingInfo.renderer,r=jt(s,i)||void 0;if(r!=null)return r}createPopupTemplate(t){return Pt({fields:this.rasterFields,title:this.title},t)}write(t,e){const{raster:i}=this;if(this.loaded?i.datasetFormat==="RasterTileServer"&&(i.tileType==="Raster"||i.tileType==="Map"):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(t,e);if(e&&e.messages){const s=`${e.origin}/${e.layerContainerType||"operational-layers"}`;e.messages.push(new E("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${s}'`,{layer:this}))}return null}async _openRaster(t){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await zi.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:L(B({sampling:"closest"},this.ioConfig),{customFetchParameters:this.customParameters}),signal:t});const{rasterInfo:e}=this.raster;if(!e)throw new E("imagery-tile-layer:load","cannot load resources on "+this.url);if(this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,this.sourceJSON!=null){const i=this.raster.tileType==="Map"&&this.sourceJSON.minLOD!=null&&this.sourceJSON.maxLOD!=null?this.sourceJSON:L(B({},this.sourceJSON),{minScale:0,maxScale:0});this.read(i,{origin:"service"})}this.title==null&&(this.title=this.raster.datasetName),this.raster.tileType==="Map"&&(this.popupEnabled=!1),this._configDefaultSettings(),this.own(Mt(()=>this.customParameters,i=>{this.raster.ioConfig.customFetchParameters=i}))}};w([T({type:[Ft],json:{write:{overridePolicy(){var t;return{enabled:!this.loaded||this.raster.tileType==="Raster"||((t=this.bandIds)==null?void 0:t.join(","))!=="0,1,2"}}}}})],D.prototype,"bandIds",void 0),w([T({json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.interpolation!=="bilinear"}}}}}),Bt(qt)],D.prototype,"interpolation",void 0),w([T({json:{write:!0}})],D.prototype,"multidimensionalDefinition",void 0),w([T($t)],D.prototype,"legendEnabled",void 0),w([T({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],D.prototype,"isReference",void 0),w([T({type:["show","hide"]})],D.prototype,"listMode",void 0),w([T({json:{read:!0,write:!0}})],D.prototype,"blendMode",void 0),w([T()],D.prototype,"sourceJSON",void 0),w([T({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],D.prototype,"version",void 0),w([T()],D.prototype,"title",void 0),w([T({readOnly:!0,json:{read:!1}})],D.prototype,"type",void 0),w([T({type:["ArcGISTiledImageServiceLayer"]})],D.prototype,"operationalLayerType",void 0),w([T({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(t,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}},writer(t,e,i){e[i]=!t}}}})],D.prototype,"popupEnabled",void 0),w([T({type:Dt,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}}}}})],D.prototype,"popupTemplate",void 0),w([T({readOnly:!0})],D.prototype,"defaultPopupTemplate",null),w([T({readOnly:!0,type:[me]})],D.prototype,"fields",void 0),w([T({readOnly:!0,type:[me]})],D.prototype,"rasterFields",null),w([T({types:st,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var e;const t=((e=this.renderer)==null?void 0:e.type)==="raster-stretch"&&this.renderer.stretchType==="none"&&!this.renderer.useGamma;return{enabled:!this.loaded||this.raster.tileType==="Raster"||!t}}},origins:{"web-scene":{types:Ut,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:t=>({enabled:t&&t.type!=="vector-field"&&t.type!=="flow"})}}}}})],D.prototype,"renderer",null),w([Ot("renderer")],D.prototype,"readRenderer",null),D=w([ee("esri.layers.ImageryTileLayer")],D);const qi=D;export{qi as default};

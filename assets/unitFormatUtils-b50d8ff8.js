import{aZ as m,a_ as c,a$ as y,b0 as h,b1 as u,b2 as B,b3 as l,b4 as D,b5 as p,b6 as $,b7 as w,b8 as M}from"./main-79e5ed80.js";function F(i,n,t){return i.units[n][t]}function a(i,n,t,e=2,s="abbr"){return`${c(n,{minimumFractionDigits:e,maximumFractionDigits:e,signDisplay:n>0?"never":"exceptZero"})} ${F(i,t,s)}`}function b(i,n,t,e=2,s="abbr"){return`${c(n,{minimumFractionDigits:e,maximumFractionDigits:e,signDisplay:"exceptZero"})} ${F(i,t,s)}`}function v(i,n,t,e=2,s="abbr"){const r=l(n,t);return a(i,u(n,t,r),r,e,s)}function E(i,n,t,e=2,s="abbr"){const r=l(n,t);return b(i,u(n,t,r),r,e,s)}function I(i,n,t,e=2,s="abbr"){const r=D(n,t);return a(i,u(n,t,r),r,e,s)}function T(i,n,t,e=2,s="abbr"){const r=D(n,t);return b(i,u(n,t,r),r,e,s)}function z(i,n,t,e=2,s="abbr"){const r=p(n,t);return a(i,u(n,t,r),r,e,s)}function K(i,n,t,e=2,s="abbr"){const r=p(n,t);return b(i,u(n,t,r),r,e,s)}function J(i,n,t,e=2,s="abbr"){const r=$(n,t);return a(i,u(n,t,r),r,e,s)}function L(i,n,t,e=2,s="abbr"){const r=$(n,t);return b(i,u(n,t,r),r,e,s)}function N(i,n,t,e=2,s="abbr"){const r=w(n,t);return a(i,u(n,t,r),r,e,s)}function U(i,n,t,e=2,s="abbr"){const r=M(n,t);return a(i,u(n,t,r),r,e,s)}function Y(i,n,t,e,s){s=s??2;let r=h.normalize(S(u(i,n,"degrees"),t,e),0,!0);const o={style:"unit",unitDisplay:"narrow",unit:"degree",maximumFractionDigits:s,minimumFractionDigits:s,signDisplay:r>0?"never":"exceptZero"};return r=x(r,o),c(r,o)}function j(i,n,t,e,s){t!==e&&(i=-i);const r={style:"unit",unitDisplay:"narrow",unit:"degree",maximumFractionDigits:s=s??2,minimumFractionDigits:s,signDisplay:"exceptZero"};let o=u(i,n,"degrees")%360;return o=x(o,r),c(o,r)}const f=new Map;function x(i,n){const t=JSON.stringify(n);let e=f.get(t);return e||(e=new Intl.NumberFormat("en-US",n),f.set(t,e)),/\-?\+?360/.test(e.format(i))?0:i}function S(i,n,t){if(n===t)return i;switch(t){case"arithmetic":return Z(i);case"geographic":return d(i)}}function Z(i){return 90-i}function d(i){return-i-90}const g=["B","kB","MB","GB","TB"];function k(i,n){let t=n===0?0:Math.floor(Math.log(n)/Math.log(m.KILOBYTES));t=B(t,0,g.length-1);const e=c(n/m.KILOBYTES**t,{maximumFractionDigits:2});return y(i.units.bytes[g[t]],{fileSize:e})}export{U as $,L as B,E as D,T as F,N as M,Y as S,a as b,J as d,b as g,K as h,v as p,k as v,j as w,I as x,z as y};

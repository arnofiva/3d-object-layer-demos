import{dL as a,aU as o,b6 as s,aD as r,aE as e,dm as p,aF as n}from"./index-cdda5707.js";import{O as m}from"./I3SMeshView3D-418a4136.js";import{n as l}from"./LayerView3D-b22e015d.js";import{d}from"./LayerView-200784d6.js";import"./I3SOverrides-72e2b294.js";import"./I3SNode-8310efaa.js";import"./meshFeatureSet-89a4fc28.js";import"./Mesh-5e599da2.js";import"./MeshGeoreferencedRelativeVertexSpace-78553062.js";import"./MeshLocalVertexSpace-7526bf91.js";import"./MeshTransform-24e5f7d8.js";import"./georeference-f88d775a.js";import"./External-c5063428.js";import"./FeatureLayerView3D-a432d75a.js";import"./FeatureLayerViewBase3D-f187104a.js";import"./FeatureLikeLayerView3D-5042cb26.js";import"./dehydratedFeatureComparison-860c6b48.js";import"./queryForSymbologySnapping-fd994e68.js";import"./hash-6f442295.js";import"./Graphics3DScaleVisibility-18b9f7c2.js";import"./rendererConversion-fa3e158c.js";import"./optimizedFeatureQueryEngineAdapter-59eeddb7.js";import"./centroid-3dcadaf5.js";import"./PooledRBush-31030974.js";import"./quickselect-7692f5ca.js";import"./floorFilterUtils-73949d2d.js";import"./QueryEngine-27d6735e.js";import"./normalizeUtils-a5d2b0fe.js";import"./normalizeUtilsCommon-24f79564.js";import"./WhereClause-dc16111f.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-42e44ded.js";import"./utils-044ce772.js";import"./generateRendererUtils-6b5398d1.js";import"./FeatureStore-b0a4d6f3.js";import"./BoundsStore-a4d619df.js";import"./projectExtentUtils-2b7f21f8.js";import"./query-2f8589ea.js";import"./pbfQueryUtils-0dd7c50f.js";import"./pbf-10aa4b25.js";import"./EventedSet-a956fe62.js";import"./RefreshableLayerView-eb18be25.js";import"./SceneModification-d0332e21.js";import"./SceneLayerWorker-00420594.js";const h=.2;let t=class extends m(l(d)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=a.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){return this._controller?.updatingProgress??0}get lodFactor(){return this.view?.qualitySettings?.sceneService?.integratedMesh?.lodFactor??1}get progressiveLoadFactor(){return this.lodFactor>=1?h:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),o),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const i=new s;return i.layer=this.layer,i.sourceLayer=this.layer,i}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const i=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>i,()=>this._modifications=i.toArray(),o),"modifications")}};r([e()],t.prototype,"layer",void 0),r([e()],t.prototype,"i3slayer",null),r([e(p)],t.prototype,"updatingProgress",void 0),r([e()],t.prototype,"updatingProgressValue",null),r([e()],t.prototype,"lodFactor",null),r([e({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),t=r([n("esri.views.3d.layers.SceneLayerView3D")],t);const et=t;export{et as default};

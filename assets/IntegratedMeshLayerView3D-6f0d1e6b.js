import{ed as a,aU as e,cg as s,aD as r,aE as o,dV as p,aF as m}from"./main-79e5ed80.js";import{O as n}from"./I3SMeshView3D-1d7d8215.js";import{n as l}from"./LayerView3D-af974166.js";import{d}from"./LayerView-535107ac.js";import"./I3SOverrides-50df23d3.js";import"./I3SNode-7e746cc9.js";import"./meshFeatureSet-93794d5a.js";import"./Mesh-d3af21f3.js";import"./MeshGeoreferencedRelativeVertexSpace-4cbafb45.js";import"./MeshLocalVertexSpace-0353b8cf.js";import"./MeshTransform-d557c89a.js";import"./georeference-ab089445.js";import"./External-2117cdfc.js";import"./FeatureLayerView3D-b3bb5f6d.js";import"./FeatureLayerViewBase3D-680cfbad.js";import"./FeatureLikeLayerView3D-0a06e10d.js";import"./dehydratedFeatureComparison-d30367d4.js";import"./queryForSymbologySnapping-be0451bb.js";import"./elevationInfoUtils-287337e4.js";import"./hash-6f442295.js";import"./Graphics3DScaleVisibility-eaf5a046.js";import"./rendererConversion-22515807.js";import"./optimizedFeatureQueryEngineAdapter-f5f88773.js";import"./centroid-3dcadaf5.js";import"./PooledRBush-506b9510.js";import"./quickselect-d16016af.js";import"./floorFilterUtils-73949d2d.js";import"./QueryEngine-360bd3bb.js";import"./normalizeUtils-996b11fe.js";import"./normalizeUtilsCommon-4aa2ad72.js";import"./WhereClause-ae8c5a06.js";import"./executionError-e8d36121.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-42e44ded.js";import"./utils-a3586684.js";import"./generateRendererUtils-0f364d1e.js";import"./FeatureStore-48143fe8.js";import"./BoundsStore-d475102f.js";import"./projectExtentUtils-d31b5a37.js";import"./query-2b60d096.js";import"./pbfQueryUtils-93c2b136.js";import"./pbf-725ddaf6.js";import"./EventedSet-9f3fb8de.js";import"./RefreshableLayerView-10c78a74.js";import"./SceneModification-26432643.js";import"./SceneLayerWorker-335e8e8a.js";const h=.2;let t=class extends n(l(d)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=a.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){return this._controller?.updatingProgress??0}get lodFactor(){return this.view?.qualitySettings?.sceneService?.integratedMesh?.lodFactor??1}get progressiveLoadFactor(){return this.lodFactor>=1?h:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),e),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const i=new s;return i.layer=this.layer,i.sourceLayer=this.layer,i}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const i=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>i,()=>this._modifications=i.toArray(),e),"modifications")}};r([o()],t.prototype,"layer",void 0),r([o()],t.prototype,"i3slayer",null),r([o(p)],t.prototype,"updatingProgress",void 0),r([o()],t.prototype,"updatingProgressValue",null),r([o()],t.prototype,"lodFactor",null),r([o({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),t=r([m("esri.views.3d.layers.SceneLayerView3D")],t);const at=t;export{at as default};

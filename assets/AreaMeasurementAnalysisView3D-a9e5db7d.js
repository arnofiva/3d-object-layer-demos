import{aW as Be,bA as Te,bh as c,bg as Ie,iE as J,lo as X,oX as He,r_ as Ke,nm as A,hA as U,di as ke,pM as re,r$ as ie,bs as Z,eO as ne,eN as Ee,oF as Qe,dl as ae,dm as Ue,s0 as Xe,bH as ge,pK as Ze,s1 as me,s2 as _e,o3 as Je,kl as Y,lk as fe,d7 as Le,s3 as Ye,mk as et,s4 as tt,bn as ye,s5 as ve,de as st,p2 as it,mc as rt,aD as o,aE as l,aF as te,au as ue,cr as j,cs as Se,dn as nt,dp as at,cd as ot,bi as ht,aT as je,ea as we,aV as y,s6 as lt,cy as oe,mb as dt,aA as ct,kr as ut,ks as pt,en as O,ku as be,kw as gt,qD as mt,oB as Ce,kA as _t,kB as W,kG as ft,az as Lt,pt as yt,kD as B,kI as vt,kJ as St,kK as wt,kL as bt,kM as Ct,kO as Pt,kP as Mt,kQ as At,kR as $t,kE as z,kH as Vt,kW as Rt,jY as Pe,jZ as H,kY as Gt,kZ as Dt,oK as zt,k$ as xt,qq as We,kj as ee,ki as G,s7 as Ot,o0 as Me,kk as Ae,s8 as Tt,em as It,eo as $e,ci as I,b_ as kt,nV as Et,pP as Ut,pQ as jt,b1 as Wt,ij as qt,b8 as Ft,b7 as Nt,b5 as Bt,b3 as Ht,pR as Kt}from"./main-79e5ed80.js";import{b as he,e as le,t as Qt,a as Xt}from"./UnitNormalizer-edf1cd88.js";import{s as Zt}from"./AnalysisView3D-797ede55.js";import{r as k,l as Ve,f as Jt,h as Re}from"./getDefaultUnitForView-33179f7a.js";import{geodesicArea as Yt}from"./geometryEngine-547e4a01.js";import{b as qe,R as Fe}from"./geodesicUtils-04ddd9a4.js";import{U as Ge}from"./euclideanAreaMeasurementUtils-00f3f32f.js";import{a as es,b as ts,u as E}from"./LineVisualElement-edcd3279.js";import{_ as De,p as ss,w as is,l as rs}from"./EditGeometryOperations-73b5f5f7.js";import{i as K,u as ns,s as ze,a as as}from"./analysisThemeUtils-558736fc.js";import{g as Q,m as xe,f as de}from"./Segment-11bdf3c4.js";function os(t,e){const s=e.center;Ie(s,0,0,0);for(let r=0;r<t.length;++r)J(s,s,t[r]);X(s,s,1/t.length);let i=0;for(let r=0;r<t.length;++r)i=Math.max(i,He(s,t[r]));e.radius=Math.sqrt(i)}function hs(t,e){if(t.length<3)throw new Error("need at least 3 points to fit a plane");Ke(t[0],t[1],t[2],e)}function ls(t,e){return A(t,e)+t[3]}function ds(t,e,s){return U(t,$,s)&&U(e,V,s)?ke($,V):0}function cs(t,e){if(!re(t,$)||!re(e,V))return 0;const s=new Fe;return qe(s,[$[0],$[1]],[V[0],V[1]]),s.distance}function us(t,e,s){const i=new Fe;return qe(i,[t[0],t[1]],[e[0],e[1]],s),i.distance}function ps(t,e,s,i){const r=ms;return ie(t,i,$)&&ie(e,i,V)&&ie(s,i,ce)?(r.setPoint(0,0,$),r.setPoint(0,1,V),r.setPoint(0,2,ce),Math.abs(Yt(r,"square-meters"))):0}function gs(t,e=null,s=!0){const r=(n,a)=>{if(a[0]===0&&a[1]===0&&a[2]===0)return!1;for(let h=0;h<n.length;++h)if(A(a,n[h])<-1e-6)return!1;return!0};if(t.length===0)return!1;if(t.length===1)return e&&Z(e,t[0]),!0;Ie(v,0,0,0);for(let n=0;n<t.length;++n)J(v,v,t[n]);if(ne(v,v),r(t,v))return e&&Z(e,v),!0;if(!s)return!1;for(let n=0;n<t.length;++n)for(let a=0;a<t.length;++a)if(n!==a&&(Ee(v,t[n],t[a]),ne(v,v),r(t,v)))return e&&Z(e,v),!0;return!1}const $=c(),V=c(),ce=c(),ms=new Be({rings:[[$,V,ce]],spatialReference:Te.WGS84}),v=c();class _s{constructor(e,s){this.positionsWorldCoords=[],this.positionsRenderCoords=[],this.positionsProjectedWorldCoords=[],this.positionsFittedRenderCoords=[],this.positionsGeographic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.areaCentroidWorldCoords=c(),this.areaCentroidRenderCoords=c(),this.geodesicAreaCentroidRenderCoords=c(),this.area=null,this.geodesicArea=null,this.pathLength=null,this.geodesicPathLength=null,this.perimeterLength=null,this._length=0,this._centroidRenderCoords=c(),this._planeWorldCoords=Qe(),this._worldUp=c(),this._worldTangent=c(),this._frame=[c(),c(),c()],this._pathVersion=-1,this._validMeasurement=!1,this._hasCursorPoint=!1,this._mode=null,this._tempU=c(),this._tempV=c(),this._tempVec3=c(),this._tempSphere={center:c(),radius:0},this._sceneView=e,this.unitNormalizer=s}update(e,s,i,r,n,a,h){const d=this.unitNormalizer,p=this._sceneView.renderSpatialReference,u=this.unitNormalizer.spatialReference,m=s!=null;if(this._pathVersion===e.version&&this._validMeasurement===r&&!h&&this._hasCursorPoint===m&&this._mode===a)return!e.isValidPolygon&&(this._updateCursorSegmentLength(e,s),!0);this._pathVersion=e.version,this._validMeasurement=r,this._hasCursorPoint=m;const g=e.numVertices;this._resize(g);const L=ae(i.spatialReference),b=Ue(i.spatialReference,L)&&Xe(i.spatialReference),{positionsGeographic:C,positionsWorldCoords:q,positionsRenderCoords:P,positionsSpherical:D}=this;e.forEachVertexPosition((f,w)=>{fs(i.elevationProvider,f),U(f,q[w],u),U(f,P[w],p),b&&(re(f,C[w]),U(f,D[w],L),ne(D[w],D[w]))});const F=this._updatePathLengths(r);if(this.pathLength=this._length>1?k(d.normalizeDistance(F),"meters"):null,b){const f=this._updateGeodesicPathLengths(r,u);this.geodesicPathLength=this._length>1?k(f,"meters"):null}else this.geodesicPathLength=null;return this._updateCursorSegmentLength(e,s),this._updateMode(e,a),r?(this._updateArea(i,d,p,u,n),b&&this._updateGeodesicArea(i),!0):(this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),this.geodesicIntersectingSegments.clear(),!0)}getData(){return{positionsWorldCoords:this.positionsWorldCoords,positionsRenderCoords:this.positionsRenderCoords,positionsProjectedWorldCoords:this.positionsProjectedWorldCoords,positionsFittedRenderCoords:this.positionsFittedRenderCoords,positionsGeographic:this.positionsGeographic,positionsSpherical:this.positionsSpherical,positionsStereographic:this.positionsStereographic,pathSegmentLengths:this.pathSegmentLengths,geodesicPathSegmentLengths:this.geodesicPathSegmentLengths,perimeterSegmentLengths:this.perimeterSegmentLengths,intersectingSegments:this.intersectingSegments,geodesicIntersectingSegments:this.geodesicIntersectingSegments,triangleIndices:this.triangleIndices,geodesicTriangleIndices:this.geodesicTriangleIndices,areaCentroidWorldCoords:this.areaCentroidWorldCoords,areaCentroidRenderCoords:this.areaCentroidRenderCoords,geodesicAreaCentroidRenderCoords:this.geodesicAreaCentroidRenderCoords,fittingMode:this.fittingMode,area:this.area,geodesicArea:this.geodesicArea,pathLength:this.pathLength,geodesicPathLength:this.geodesicPathLength,perimeterLength:this.perimeterLength,cursorSegmentLength:this.cursorSegmentLength,geodesicCursorSegmentLength:this.geodesicCursorSegmentLength,unitNormalizer:this.unitNormalizer,actualMeasurementMode:this.actualMeasurementMode}}_resize(e){for(e<this._length&&(this.positionsWorldCoords.length=e,this.positionsRenderCoords.length=e,this.positionsProjectedWorldCoords.length=e,this.positionsFittedRenderCoords.length=e,this.positionsGeographic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorldCoords.push(c()),this.positionsRenderCoords.push(c()),this.positionsProjectedWorldCoords.push(ge()),this.positionsFittedRenderCoords.push(c()),this.positionsGeographic.push(c()),this.positionsSpherical.push(c()),this.positionsStereographic.push(ge()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const s=this.positionsWorldCoords,i=this.pathSegmentLengths;let r=0;for(let n=0;n<this._length;++n){const a=i[n]=ke(s[n],s[(n+1)%this._length]);(n<this._length-1||e)&&(r+=a)}return r}_updateGeodesicPathLengths(e,s){const i=this.positionsGeographic,r=this.geodesicPathSegmentLengths;let n=0;for(let a=0;a<this._length;++a){const h=r[a]=us(i[a],i[(a+1)%this._length],s??void 0);(a<this._length-1||e)&&(n+=h)}return n}_updateArea(e,s,i,r,n){const a=e.renderCoordsHelper,h=this.positionsWorldCoords,d=this.positionsRenderCoords,p=this.positionsProjectedWorldCoords,u=this.positionsFittedRenderCoords,m=this._planeWorldCoords,g=this._centroidRenderCoords;he(d,g),a.worldUpAtPosition(g,this._worldUp),a.worldBasisAtPosition(g,Ze.X,this._worldTangent),me(g,this._worldUp,i,this._worldUp,r),me(g,this._worldTangent,i,this._worldTangent,r),h.length>2&&hs(h,m),this.fittingMode=this._selectFittingMode(m,h,this._worldUp,n);let L=0;if(this.fittingMode==="horizontal"){let f=-1/0;d.forEach((w,N)=>{const pe=a.getAltitude(d[N]);pe>f&&(f=pe,L=N)})}const b=h[L];let C=m,q=this._worldTangent;this.fittingMode==="horizontal"?C=this._worldUp:this.fittingMode==="vertical"&&(C=this._tempVec3,q=this._worldUp,_e(m,this._worldUp,C)),Z(this._frame[2],C),_e(q,C,this._frame[0]),Ee(this._frame[1],this._frame[0],this._frame[2]),Je(this._frame[1],this._frame[1]);const P=this._tempVec3,D=this._tempU,F=this._tempV;for(let f=0;f<this._length;++f){const w=p[f],N=u[f];Y(P,h[f],b),fe(w,A(this._frame[0],P),A(this._frame[1],P)),X(D,this._frame[0],w[0]),X(F,this._frame[1],w[1]),J(P,D,F),J(P,P,b),Le(P,r,N,i)}this.perimeterLength=this._length>0?k(s.normalizeDistance(this._updatePerimeterLengths()),"meters"):null,he(u,this.areaCentroidRenderCoords),Le(this.areaCentroidRenderCoords,i,this.areaCentroidWorldCoords,r),this._updateIntersectingSegments(),this.area=this.intersectingSegments.size===0?Ve(s.normalizeArea(this._computeArea()),"square-meters"):null}_updateGeodesicArea(e){const{renderCoordsHelper:s,spatialReference:i}=e,{positionsSpherical:r,positionsStereographic:n}=this,a=this._tempVec3,h=gs(r,a);if(!h)return void(this.geodesicArea=null);const d=this._tempU,p=this._tempV;Ye(a,d,p);for(let u=0;u<this._length;++u){const m=A(r[u],d),g=A(r[u],p),L=A(r[u],a);fe(n[u],m/L,g/L)}X(a,a,et(i).radius),s.toRenderCoords(a,ae(i),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=h&&this.geodesicIntersectingSegments.size===0?Ve(this._computeGeodesicArea(),"square-meters"):null}_updatePerimeterLengths(){const e=this.positionsProjectedWorldCoords,s=this.perimeterSegmentLengths;let i=0;for(let r=0;r<this._length;++r)i+=s[r]=tt(e[r],e[(r+1)%this._length]);return i}_updateIntersectingSegments(){const e=this.positionsProjectedWorldCoords,s=this.intersectingSegments;s.clear();for(let i=0;i<this._length;++i)for(let r=i+2;r<this._length;++r){if((r+1)%this._length===i)continue;const n=e[i],a=e[(i+1)%this._length],h=e[r],d=e[(r+1)%this._length];ye(n,a,h,d)&&(s.add(i),s.add(r))}}_computeArea(){const e=this.positionsProjectedWorldCoords,s=this.triangleIndices=ve(Ge(e));let i=0;for(let r=0;r<s.length;r+=3)i+=st(e[s[r]],e[s[r+1]],e[s[r+2]]);return i}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,s=this.geodesicIntersectingSegments;s.clear();for(let i=0;i<this._length;++i)for(let r=i+2;r<this._length;++r){if((r+1)%this._length===i)continue;const n=e[i],a=e[(i+1)%this._length],h=e[r],d=e[(r+1)%this._length];ye(n,a,h,d)&&(s.add(i),s.add(r))}}_computeGeodesicArea(){const e=this.positionsGeographic,s=this.positionsStereographic,i=this.geodesicTriangleIndices=ve(Ge(s));let r=0;for(let n=0;n<i.length;n+=3)r+=ps(e[i[n]],e[i[n+1]],e[i[n+2]],Te.WGS84);return r}_selectFittingMode(e,s,i,r){const n=s.map(u=>Math.abs(ls(e,u))).reduce((u,m)=>Math.max(u,m),0);os(s,this._tempSphere);const a=n/(2*this._tempSphere.radius),h=a<r.maxRelativeErrorCoplanar,d=a<r.maxRelativeErrorAlmostCoplanar;let p="horizontal";return h?p="oblique":d&&(p=Math.abs(A(i,e))>Math.cos(it(r.verticalAngleThreshold))?"horizontal":"vertical"),p}_updateCursorSegmentLength(e,s){const i=e.lastPoint;e.isValidPolygon||i==null||s==null?(this.geodesicCursorSegmentLength=null,this.cursorSegmentLength=null):(this.geodesicCursorSegmentLength=k(cs(i,s),"meters"),this.cursorSegmentLength=k(this.unitNormalizer.normalizeDistance(ds(i,s,this.unitNormalizer.spatialReference)),"meters"))}_updateMode(e,s){if(s===le.Auto){this.actualMeasurementMode="euclidean";let i=0;this.geodesicPathLength!=null&&(i+=this.geodesicPathLength.value),e.isValidPolygon||this.geodesicCursorSegmentLength==null||(i+=this.geodesicCursorSegmentLength.value),i>Ls&&(this.actualMeasurementMode="geodesic")}else this.actualMeasurementMode=s===le.Euclidean?"euclidean":"geodesic";this.geodesicPathLength==null&&(this.actualMeasurementMode="euclidean"),this._mode=s}}function fs(t,e){e.hasZ||(e.z=rt(t,e,"ground")??0)}const Ls=1e5;let x=class extends ue{constructor(t){super(t)}initialize(){const t=this.view.spatialReference,e=ae(t),s=e===nt?at:e,i=!t||Ue(t,s)?s:t,r=new Qt(i);this._measurementDataManager=new _s(this.view,r),this.addHandles([this.analysisViewData.path.on("change",()=>this._update()),j(()=>this.analysisViewData.cursorPoint,()=>this._update(),Se),j(()=>this.analysisViewData.mode,()=>this._update(),Se)]),this._update()}_update(t=!1){const{analysisViewData:e,view:s}=this,i={maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80};this._measurementDataManager.update(e.path,e.cursorPoint,s,e.validMeasurement,i,e.mode,t)&&(e.measurementData=this._measurementDataManager.getData())}};o([l({constructOnly:!0})],x.prototype,"view",void 0),o([l({constructOnly:!0})],x.prototype,"analysis",void 0),o([l({constructOnly:!0})],x.prototype,"analysisViewData",void 0),x=o([te("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],x);const Ne="esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurement3DPathHelper",ys=ot.getLogger(Ne);let M=class extends ht.EventedAccessor{constructor(t={}){super(t),this._handles=new je,this._version=0,this._internalGeometryChange=!1,this._extent=we()}destroy(){this._handles=y(this._handles)}set areaMeasurement(t){this._set("areaMeasurement",t),t!=null&&this.view!=null&&this._initialize(t,this.view)}set view(t){this._set("view",t),t!=null&&this.areaMeasurement!=null&&this._initialize(this.areaMeasurement,t)}get constructed(){return this.areaMeasurement!=null&&this.view!=null}get version(){return this._version}get isValidPolygon(){return this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].isClosed()}get extent(){if(this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].vertices.length>0){const t=we(this._extent);return this.forEachVertex(e=>{lt(t,e.pos)}),t}return null}get spatialReference(){return this.constructed?this._editGeometry.coordinateHelper.spatialReference:null}_initialize(t,e){this._handles.removeAll(),this._handles.add(j(()=>t.geometry,()=>{this._updateEditGeometryFromModelGeometry(t,e)},oe)),this._makeDirty(!0)}_makeDirty(t=!1){this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),t&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(t,e){if(this._version++,this._internalGeometryChange)return;this._handles.remove("EditGeometry");let s=t.geometry;if(s!=null){const i=dt(s,e.spatialReference);i==null&&es(t,s.spatialReference,ys),s=i}this._editGeometryOperations=s!=null?De.fromGeometry(s,e.state.viewingMode):new De(new ss("polygon",is(!0,!1,e.spatialReference))),this._makeDirty(!0),this.emit("change"),this._handles.add(this._editGeometry.on("change",i=>{this._makeDirty(i.addedVertices!=null||i.removedVertices!=null),this._internalGeometryChange=!0,t.geometry=this.numVertices>0?this._editGeometry.geometry:null,this._internalGeometryChange=!1}),"EditGeometry")}get _editGeometry(){return this._editGeometryOperations.data}get vertices(){const t=[];return this.forEachVertex(e=>{t.push(e)}),t}get numVertices(){return this.constructed&&this._editGeometry.components.length>0?this._editGeometry.components[0].vertices.length:0}get lastPoint(){if(this.constructed&&this._editGeometry.components.length>0){const t=this._editGeometry.components[0].getLastVertex();if(t!=null)return this._editGeometry.coordinateHelper.vectorToPoint(t.pos)}return null}getVertex(t){if(!this.constructed||this._editGeometry.components.length===0||this._editGeometry.components[0].vertices.length===0)return null;const e=this._editGeometry.components[0].vertices[0];let s=e;do{if(s.index===t)return s;s=s.rightEdge.rightVertex}while(s!==e&&s!=null);return null}getVertexPositionAsPoint(t){return this._editGeometry.coordinateHelper.vectorToPoint(t.pos)}getVertexPositionAsPointFromIndex(t){return this._editGeometry.coordinateHelper.vectorToPoint(this.getVertex(t).pos)}forEachVertex(t){this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].iterateVertices(t)}forEachVertexPosition(t){const e=this._editGeometry.coordinateHelper;this.forEachVertex((s,i)=>{e.vectorToPoint(s.pos,Oe),t(Oe,i)})}clear(){this.areaMeasurement!=null&&(this.areaMeasurement.geometry=null)}add(t){if(!this.constructed)return null;if(this._editGeometry.components.length===0){const s=this.view;this._editGeometry.components.push(new rs(s.spatialReference,s.state.viewingMode))}const e=this._editGeometryOperations.appendVertex(this._editGeometry.coordinateHelper.pointToVector(t));return this.emit("change"),e}close(){if(!this.constructed||this._editGeometry.components.length===0)return null;const t=this._editGeometryOperations.closeComponent(this._editGeometry.components[0]);return this.emit("change"),t}ensureContains(t,e=""){let s=!1;if(this._editGeometry.components.forEach(i=>{i.iterateVertices(r=>{r===t&&(s=!0)})}),!s)throw new Error(`vertex doesnt exist ${e}`);return s}setVertexPosition(t,e){if(!this.constructed)return null;const s=this._editGeometryOperations.setVertexPosition(t,this._editGeometry.coordinateHelper.pointToVector(e));return this.emit("change"),s}equals(t){if(this.numVertices!==t.numVertices)return!1;let e=!0;return this.forEachVertexPosition((s,i)=>{const r=t.getVertexPositionAsPointFromIndex(i);s.equals(r)||(e=!1)}),!!e}};o([l({value:null})],M.prototype,"areaMeasurement",null),o([l({value:null})],M.prototype,"view",null),o([l()],M.prototype,"isValidPolygon",null),o([l()],M.prototype,"extent",null),o([l()],M.prototype,"spatialReference",null),o([l()],M.prototype,"numVertices",null),M=o([te(Ne)],M);const Oe=new ct;function vs(t){const e=new ut,{vertex:s,fragment:i}=e;return pt(s,t),e.attributes.add(O.POSITION,"vec3"),e.attributes.add(O.UV0,"vec2"),e.varyings.add("vUV","vec2"),t.hasMultipassTerrain&&e.varyings.add("depth","float"),s.code.add(be`
    void main(void) {
      vUV = uv0;
      ${t.hasMultipassTerrain?"depth = (view * vec4(position, 1.0)).z;":""}
      gl_Position = proj * view * vec4(position, 1.0);
    }
  `),e.include(gt,t),i.uniforms.add(new mt("size",r=>r.size)),i.uniforms.add(new Ce("color1",r=>r.color1)),i.uniforms.add(new Ce("color2",r=>r.color2)),i.include(_t),i.code.add(be`
    void main() {
      ${t.hasMultipassTerrain?"terrainDepthTest(gl_FragCoord, depth);":""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      fragColor = mix(color2, color1, t);
      ${t.transparencyPassType===W.Color?"fragColor = premultiplyAlpha(fragColor);":""}
    }
  `),e}const Ss=Object.freeze(Object.defineProperty({__proto__:null,build:vs},Symbol.toStringTag,{value:"Module"}));class se extends vt{initializeProgram(e){return new St(e.rctx,se.shader.get().build(this.configuration),wt)}_setPipelineState(e){const s=this.configuration,i=e===W.NONE,r=e===W.FrontFace;return bt({blending:s.transparent?i?bs:Ct(e):null,depthTest:{func:Pt(e)},depthWrite:i?s.writeDepth?Mt:null:At(e),colorWrite:$t,polygonOffset:i||r?s.polygonOffset?ws:null:{factor:-1,units:-25}})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}}se.shader=new ft(Ss,()=>Lt(()=>import("./CheckerBoard.glsl-78be554f.js"),["./CheckerBoard.glsl-78be554f.js","./main-79e5ed80.js","./main-7772480e.css","./UnitNormalizer-edf1cd88.js","./getDefaultUnitForView-33179f7a.js","./unitFormatUtils-b50d8ff8.js","./AnalysisView3D-797ede55.js","./geometryEngine-547e4a01.js","./geometryEngineBase-d69ff1ad.js","./hydrated-e6cbef23.js","./geodesicUtils-04ddd9a4.js","./euclideanAreaMeasurementUtils-00f3f32f.js","./measurementUtils-c24c5920.js","./LineVisualElement-edcd3279.js","./EditGeometryOperations-73b5f5f7.js","./geometry2dUtils-9d16f4f8.js","./analysisThemeUtils-558736fc.js","./colorUtils-fa6b524d.js","./colorUtils-c0f43caf.js","./Segment-11bdf3c4.js","./viewUtils-ca2c33e3.js","./elevationInfoUtils-287337e4.js","./TextOverlayItem-ebd9edd4.js"],import.meta.url));const ws={factor:0,units:-25},bs=yt(B.SRC_ALPHA,B.ONE,B.ONE_MINUS_SRC_ALPHA,B.ONE_MINUS_SRC_ALPHA);class R extends Vt{constructor(){super(...arguments),this.transparencyPassType=W.NONE,this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.hasMultipassTerrain=!1,this.cullAboveGround=!1}}o([z({count:W.COUNT})],R.prototype,"transparencyPassType",void 0),o([z()],R.prototype,"transparent",void 0),o([z()],R.prototype,"writeDepth",void 0),o([z()],R.prototype,"polygonOffset",void 0),o([z()],R.prototype,"hasMultipassTerrain",void 0),o([z()],R.prototype,"cullAboveGround",void 0);class Cs extends Rt{constructor(e){super(e,new Ms),this._configuration=new R}dispose(){}getConfiguration(e,s){return this._configuration.transparent=this.parameters.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.transparencyPassType=s.transparencyPassType,this._configuration.hasMultipassTerrain=s.multipassTerrain.enabled,this._configuration.cullAboveGround=s.multipassTerrain.cullAboveGround,this._configuration}requiresSlot(e,s){return s===Pe.Color||s===Pe.Alpha?e===(this.parameters.transparent?this.parameters.writeDepth?H.TRANSPARENT_MATERIAL:H.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL:H.OPAQUE_MATERIAL)||e===H.DRAPED_MATERIAL:!1}createGLMaterial(e){return new Ps(e)}createBufferWriter(){return new Gt(Dt)}}class Ps extends zt{beginSlot(e){return this.ensureTechnique(se,e)}}class Ms extends xt{constructor(){super(...arguments),this.size=We(1,1),this.color1=ee(.75,.75,.75,1),this.color2=ee(.5,.5,.5,1),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1}}class As extends ts{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=G.OccludeAndTransparent,this._geometry=null,this._size=We(1,1),this._color1=ee(1,.5,0,.5),this._color2=ee(1,1,1,.5),this.applyProps(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this._geometryChanged()}get size(){return this._size}set size(e){Ot(this._size,e),this._updateMaterial()}get color1(){return this._color1}set color1(e){Me(e,this._color1)||(Ae(this._color1,e),this._updateMaterial())}get color2(){return this._color2}set color2(e){Me(e,this._color2)||(Ae(this._color2,e),this._updateMaterial())}_updateMaterial(){this._checkerBoardMaterial!=null&&this._checkerBoardMaterial.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new Cs({size:this._size,color1:this._color1,color2:this._color2,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:G.OccludeAndTransparent})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachExternalMaterial(e){this._checkerBoardMaterial!=null&&e(this._checkerBoardMaterial)}createGeometries(e){if(this._geometry==null||this._checkerBoardMaterial==null)return;const s=$s;Tt(s,this.transform);const i=this._geometry,r=[],n=c();i.position.forEach(d=>{Y(n,d,s),r.push(n[0],n[1],n[2])});const a=[];i.uv.forEach(d=>{a.push(d[0],d[1])});const h=new It(this._checkerBoardMaterial,[[O.POSITION,new $e(r,3,!0)],[O.UV0,new $e(a,2,!0)]],[[O.POSITION,i.triangleIndices],[O.UV0,i.triangleIndices]]);e.addGeometry(h)}_geometryChanged(){this.recreateGeometry()}}const $s=c();let S=class extends ue{get visible(){return this.analysisViewData.visible}get testData(){return{labels:{area:this._areaLabel,pathLength:this._pathLengthLabel,cursorSegmentLength:this._cursorSegmentLengthLabel,perimeterLength:this._perimeterLengthLabel}}}constructor(t){super(t),this._handles=new je,this._params={pathLineColor:I.toUnitRGBA(K()),pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:I.toUnitRGBA(K()),perimeterLineWidth:2,projectionLineColor:I.toUnitRGBA(K()),projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:I.toUnitRGBA(K(.5)),areaColor2:I.toUnitRGBA(ns(.5)),labelDistance:25},this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._pathLengthLabel=null,this._cursorSegmentLengthLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._cursorSegment=null,this._origin=c(),this._originTransform=kt(),this._cursorPositionRenderSpace=c(),this.messages=null,this.viewData=Vs,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}initialize(){const{analysisViewData:t,_params:e,view:s}=this;this._path=new E({view:s,attached:!0,width:e.pathLineWidth,color:e.pathLineColor,polygonOffset:!0,renderOccluded:G.OccludeAndTransparent}),this._intersectedPath=new E({view:s,attached:!0,width:e.pathLineWidth,color:e.intersectingLineColor,polygonOffset:!0,renderOccluded:G.OccludeAndTransparent}),this._perimeter=new E({view:s,attached:!0,width:e.perimeterLineWidth,color:e.perimeterLineColor,polygonOffset:!0,renderOccluded:G.OccludeAndTransparent}),this._intersectedPerimeter=new E({view:s,attached:!0,width:e.perimeterLineWidth,color:e.intersectingLineColor,polygonOffset:!0,renderOccluded:G.OccludeAndTransparent}),this._projectionLines=new E({view:s,attached:!0,width:e.projectionLineWidth,color:e.projectionLineColor,stipplePattern:Et(e.projectionLineStippleSize),polygonOffset:!0,renderOccluded:G.OccludeAndTransparent}),this._measurementArea=new As({view:s,attached:!0,color1:e.areaColor1,color2:e.areaColor2});const i={attached:!0,backgroundColor:ze(.6),calloutColor:ze(.5),textColor:as(),view:s};this._areaLabel=new Q({...i,fontSize:T.Large}),this._pathLengthLabel=new Q({...i,fontSize:T.Small}),this._cursorSegmentLengthLabel=new Q({...i,fontSize:T.Small}),this._perimeterLengthLabel=new Q({...i,fontSize:T.Small}),this._handles.add([j(()=>[t.mode,this.visible,t.unit,t.measurementData,t.cursorPoint],()=>this._update(),oe),j(()=>s.state?.camera,()=>this._updateLabels(),oe),Ut(()=>this._updateMessageBundle())]),this._updateMessageBundle()}destroy(){this._measurementArea=y(this._measurementArea),this._path=y(this._path),this._intersectedPath=y(this._intersectedPath),this._perimeter=y(this._perimeter),this._intersectedPerimeter=y(this._intersectedPerimeter),this._areaLabel=y(this._areaLabel),this._pathLengthLabel=y(this._pathLengthLabel),this._cursorSegmentLengthLabel=y(this._cursorSegmentLengthLabel),this._perimeterLengthLabel=y(this._perimeterLengthLabel),this._projectionLines=y(this._projectionLines),this._handles=y(this._handles),this.set("view",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const{analysisViewData:{measurementData:t},analysisViewData:e}=this;t!=null&&(this._updateViewData(t,e.path,e.cursorPoint),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(t,e,s){const i=e.isValidPolygon,r=t.actualMeasurementMode==="geodesic",n=r?t.geodesicArea:t.area;let a=1;if(n){const d=this._toPreferredAreaUnit(n,this.analysisViewData.unit);a=jt(Math.sqrt(d.value)/Math.sqrt(300)),a*=Math.sqrt(Wt(1,d.unit,"square-meters")),a/=t.unitNormalizer.normalizeDistance(1)}const h={validMeasurement:i,path:e,pathVersion:e.version,cursorPoint:s,measurementData:t,mode:t.actualMeasurementMode,positionsGeographic:t.positionsGeographic,positionsRenderCoords:t.positionsRenderCoords,positionsProjected:t.positionsProjectedWorldCoords,positionsFittedRenderCoords:t.positionsFittedRenderCoords,intersectingSegments:r?t.geodesicIntersectingSegments:t.intersectingSegments,triangleIndices:r?t.geodesicTriangleIndices:t.triangleIndices,fittingMode:t.fittingMode,areaCentroid:r?t.geodesicAreaCentroidRenderCoords:t.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:i?0:e.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:a};this._set("viewData",h)}_updateOrigin(){const t=this.viewData;he(t.positionsRenderCoords,this._origin),qt(this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(t){const e=this.viewData,s=e.path,i=this.view.renderCoordsHelper.spatialReference,r=e.mode,n=[],a=[],h=[],d=e.validMeasurement?s.numVertices:s.numVertices-1;for(let p=0;p<d;++p){const u=e[t][p],m=e[t][(p+1)%s.numVertices];let g=null;switch(r){case"euclidean":g=new de(u,m);break;case"geodesic":g=new xe(u,m,i)}e.intersectingSegments.has(p)?h.push(g):a.push(g),n.push(g)}return{all:n,nonIntersecting:a,intersecting:h}}_updatePathSegments(){const{view:{renderCoordsHelper:t},viewData:e,visible:s}=this,i=this._createSegments("positionsRenderCoords"),{cursorPoint:r,mode:n,path:a}=e,h=!a.isValidPolygon,d=t.spatialReference;if(this._cursorSegment=null,a.numVertices>0&&h&&r!=null&&t.toRenderCoords(r,this._cursorPositionRenderSpace)){const p=e.positionsRenderCoords[a.numVertices-1],u=this._cursorPositionRenderSpace;let m=null;switch(n){case"euclidean":m=new de(p,u);break;case"geodesic":m=new xe(p,u,d)}i.nonIntersecting.push(m),this._cursorSegment=m}this._path.setGeometryFromSegments(i.nonIntersecting,this._origin),this._path.visible=s,this._intersectedPath.setGeometryFromSegments(i.intersecting,this._origin),this._intersectedPath.visible=s,this._pathSegments=i.all}_updatePerimeterSegments(){const t=this.visible&&this.viewData.mode==="euclidean",e=this._createSegments("positionsFittedRenderCoords");this._perimeter.setGeometryFromSegments(e.nonIntersecting,this._origin),this._perimeter.visible=t,this._intersectedPerimeter.setGeometryFromSegments(e.intersecting,this._origin),this._intersectedPerimeter.visible=t,this._perimeterSegments=e.all}_updateArea(){const t=this.viewData;switch(t.mode){case"euclidean":this._updateAreaEuclidean(t);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(t){const e=this.visible;t.validMeasurement&&t.intersectingSegments.size===0&&t.triangleIndices?(this._measurementArea.geometry={uv:t.positionsProjected,position:t.positionsFittedRenderCoords,triangleIndices:t.triangleIndices},this._measurementArea.size=[t.checkerSize,t.checkerSize],this._measurementArea.visible=e):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const t=this.viewData,e=this.visible,s=t.path,i=t.mode;if(s.numVertices>0&&t.validMeasurement&&i==="euclidean"){const r=[];for(let n=0;n<s.numVertices;++n){const a=c();Y(a,t.positionsRenderCoords[n],this._origin);const h=c();Y(h,t.positionsFittedRenderCoords[n],this._origin),r.push([a,h])}this._projectionLines.geometry=r,this._projectionLines.visible=e}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const{viewData:t}=this,{measurementData:e,mode:s,path:i}=t;if(!i)return;const r=!i.isValidPolygon,n=this.visible,a=this._formatAreaLabel(this.messages,s==="geodesic"?e.geodesicArea:e.area,this.analysisViewData.unit);a!=null?(this._areaLabel.geometry={type:"point",point:t.areaCentroid},this._areaLabel.text=a,this._areaLabel.visible=t.validMeasurement&&t.intersectingSegments.size===0&&n):this._areaLabel.visible=!1,this._set("areaLabel",a);const h=this._formatLengthLabel(this.messages,s==="geodesic"?e.geodesicPathLength:e.pathLength,this.analysisViewData.unit);if(h!=null&&t.pathLengthLabelSegmentIndex>=0&&t.pathLengthLabelSegmentIndex<this._pathSegments.length){const g=this._pathSegments[t.pathLengthLabelSegmentIndex],L=this._cursorSegment!=null?this._cursorSegment:Rs;this._pathLengthLabel.distance=this._params.labelDistance,this._pathLengthLabel.geometry={type:"corner",left:g,right:L},this._pathLengthLabel.text=h,this._pathLengthLabel.visible=r&&i.numVertices>0&&n}else this._pathLengthLabel.visible=!1;const d=s==="geodesic"?t.measurementData.geodesicCursorSegmentLength:t.measurementData.cursorSegmentLength;if(d!=null){const g=this._formatLengthLabel(this.messages,d,this.analysisViewData.unit);this._cursorSegmentLengthLabel.distance=this._params.labelDistance,this._cursorSegmentLengthLabel.geometry=this._cursorSegment!=null?{type:"segment",segment:this._cursorSegment,sampleLocation:"end"}:null,this._cursorSegmentLengthLabel.anchor="bottom",this._cursorSegmentLengthLabel.text=g,this._cursorSegmentLengthLabel.visible=r&&d.value!==0&&n}else this._cursorSegmentLengthLabel.visible=!1;this._cursorSegmentLengthLabel.overlaps(this._pathLengthLabel)&&(this._cursorSegmentLengthLabel.visible=!1),this._pathLengthLabel.overlaps(this._areaLabel)&&(this._pathLengthLabel.visible=!1);const p=t.mode==="geodesic",u=p?e.geodesicPathLength:e.perimeterLength,m=this._formatLengthLabel(this.messages,u,this.analysisViewData.unit);if(this._set("perimeterLengthLabel",m),t.validMeasurement&&t.intersectingSegments.size===0){this._perimeterLengthLabel.distance=this._params.labelDistance,this._perimeterLengthLabel.anchor="top",this._perimeterLengthLabel.text=m,this._perimeterLengthLabel.visible=!0;let g=!0;for(let L=0;L<t.path.numVertices;++L){const b=(t.perimeterLengthLabelSegmentIndex+L)%t.path.numVertices,C=p?this._pathSegments[b]:this._perimeterSegments[b];if(g=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:C,sampleLocation:"center"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;g=!1}this._perimeterLengthLabel.visible=g&&n}else this._perimeterLengthLabel.visible=!1}_toPreferredAreaUnit(t,e){return Jt(t,this._preferredAreaUnit(t,e))}_preferredAreaUnit(t,e){switch(e){case"metric":return Nt(t.value,t.unit);case"imperial":return Ft(t.value,t.unit);default:return e}}_preferredLengthUnit(t,e){const s=this._deriveLengthUnitFromAreaUnit(e);switch(s){case"metric":return Ht(t.value,t.unit);case"imperial":return Bt(t.value,t.unit);default:return s}}_deriveLengthUnitFromAreaUnit(t){switch(t){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers"}throw new Error("unhandled area unit")}_formatAreaLabel(t,e,s){return t&&e&&Re(t,e,this._preferredAreaUnit(e,s))}_formatLengthLabel(t,e,s){return t&&e&&Re(t,e,this._preferredLengthUnit(e,s))}_updateMessageBundle(){this.loadingMessages=!0,Kt("esri/core/t9n/Units").then(t=>{this.messages=t,this.view&&this._update()}).finally(()=>{this.loadingMessages=!1})}};var T;o([l()],S.prototype,"view",void 0),o([l()],S.prototype,"messages",void 0),o([l()],S.prototype,"analysis",void 0),o([l()],S.prototype,"viewData",void 0),o([l()],S.prototype,"analysisViewData",void 0),o([l({readOnly:!0})],S.prototype,"areaLabel",void 0),o([l({readOnly:!0})],S.prototype,"perimeterLengthLabel",void 0),o([l()],S.prototype,"loadingMessages",void 0),o([l()],S.prototype,"visible",null),S=o([te("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],S),function(t){t[t.Small=12]="Small",t[t.Large=16]="Large"}(T||(T={}));const Vs={validMeasurement:!1,path:null,pathVersion:-1,cursorPoint:null,measurementData:null,mode:null,positionsGeographic:null,positionsRenderCoords:null,positionsProjected:null,positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null},Rs=new de(c(),c());let _=class extends Zt(ue){constructor(t){super(t),this.type="area-measurement-view-3d",this.analysis=null,this.measurementData=null,this.lastDraggedVertex=null,this.cursorPoint=null,this.mode=le.Auto}initialize(){const{analysis:t,view:e}=this;this.path=new M({view:e,areaMeasurement:t}),this.analysisVisualization=new S({view:e,analysis:t,analysisViewData:this}),this.analysisController=new x({view:e,analysis:t,analysisViewData:this})}destroy(){this.analysisController=y(this.analysisController),this.analysisVisualization=y(this.analysisVisualization),this.path.destroy()}get updating(){return!!this.analysisVisualization?.loadingMessages}get result(){const{measurementData:t}=this;return t==null?{area:null,mode:null,perimeter:null}:t.actualMeasurementMode==="euclidean"?{area:t.area,perimeter:t.perimeterLength,mode:"euclidean"}:{area:t.geodesicArea,perimeter:t.pathLength,mode:"geodesic"}}get viewData(){return this.analysisVisualization.viewData}get validMeasurement(){return this.path.isValidPolygon}get unit(){return this.analysis.unit??this._defaultUnit}get testData(){return{visualization:this.analysisVisualization,controller:this.analysisController}}};o([l({readOnly:!0})],_.prototype,"type",void 0),o([l({constructOnly:!0,nonNullable:!0})],_.prototype,"analysis",void 0),o([l()],_.prototype,"updating",null),o([l()],_.prototype,"analysisVisualization",void 0),o([l()],_.prototype,"analysisController",void 0),o([l()],_.prototype,"result",null),o([l()],_.prototype,"measurementData",void 0),o([l()],_.prototype,"viewData",null),o([l()],_.prototype,"validMeasurement",null),o([l()],_.prototype,"path",void 0),o([l()],_.prototype,"lastDraggedVertex",void 0),o([l()],_.prototype,"cursorPoint",void 0),o([l()],_.prototype,"mode",void 0),o([l()],_.prototype,"unit",null),o([l(Xt)],_.prototype,"_defaultUnit",void 0),_=o([te("esri.views.3d.analysis.AreaMeasurementAnalysisView3D")],_);const Gs=_,qs=Object.freeze(Object.defineProperty({__proto__:null,default:Gs},Symbol.toStringTag,{value:"Module"}));export{qs as A,vs as n};

import{y as n,r as c,a as r,d as i,n as s}from"./vendor.fd144a9e.js";import{o as l}from"./queryEngineUtils.fc6cd348.js";import"./DimensioningAnalysisView3D.44a3999f.js";import"./LineVisualElement.8fc1a873.js";import"./analysisViewUtils.e61caa7d.js";import"./PointVisualElement.566cfb09.js";import"./RightAngleQuadVisualElement.c9cc8344.js";import"./Segment.115ca660.js";import"./elevationInfoUtils.45a1c5b7.js";import"./dragEventPipeline3D.5c6f4875.js";import"./EditGeometryOperations.a1e50b07.js";import"./QueryEngineResult.ec64a57b.js";import"./WhereClause.6eb5053b.js";import"./utils.e2968790.js";import"./ClassBreaksDefinition.e6a81499.js";import"./json.d1a0fa35.js";let e=class extends n{constructor(t){super(t)}get availability(){return 1}refresh(){}async fetchCandidates(t,p){const o=this.layerSource.layer.source;return o.querySnapping?(await o.querySnapping({distance:t.distance,point:t.coordinateHelper.vectorToPoint(t.point).toJSON(),types:t.types,query:c(t.filter)?t.filter.createQuery().toJSON():{where:"1=1"}},{signal:p})).candidates.map(a=>l(a,t.coordinateHelper,t.elevationInfo)):[]}};r([i({constructOnly:!0})],e.prototype,"layerSource",void 0),r([i({readOnly:!0})],e.prototype,"availability",null),e=r([s("esri.views.interactive.snapping.featureSources.FeatureCollectionSnappingSource")],e);export{e as FeatureCollectionSnappingSource};

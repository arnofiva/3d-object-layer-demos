import{ca as g,gn as L,lz as K,c_ as A,c3 as J,cR as j,lA as E,lB as S,lC as w,lD as D,bA as O,bi as W,gp as q,dY as M,cs as c,cr as $,dw as _,dk as G,lE as V,ce as I,aD as i,aE as n,lF as B,bj as P,aF as C,h$ as H,b9 as U,gq as Q,ba as Y,fh as X,fi as Z,fj as ee,eP as te,dQ as se,fm as re,bk as ie,fq as le,be as oe}from"./main-79e5ed80.js";const ne={esriGeometryPoint:"points",esriGeometryPolyline:"polylines",esriGeometryPolygon:"polygons"};function R(e){const t=e.folders||[],r=t.slice(),s=new Map,o=new Map,p=new Map,v=new Map,m=new Map,f={esriGeometryPoint:o,esriGeometryPolyline:p,esriGeometryPolygon:v};(e.featureCollection&&e.featureCollection.layers||[]).forEach(l=>{const d=g(l);d.featureSet.features=[];const y=l.featureSet.geometryType;s.set(y,d);const k=l.layerDefinition.objectIdField;y==="esriGeometryPoint"?x(o,k,l.featureSet.features):y==="esriGeometryPolyline"?x(p,k,l.featureSet.features):y==="esriGeometryPolygon"&&x(v,k,l.featureSet.features)}),e.groundOverlays&&e.groundOverlays.forEach(l=>{m.set(l.id,l)}),t.forEach(l=>{l.networkLinkIds.forEach(d=>{const y=ue(d,l.id,e.networkLinks);y&&r.push(y)})}),r.forEach(l=>{if(l.featureInfos){l.points=g(s.get("esriGeometryPoint")),l.polylines=g(s.get("esriGeometryPolyline")),l.polygons=g(s.get("esriGeometryPolygon")),l.mapImages=[];for(const d of l.featureInfos)switch(d.type){case"esriGeometryPoint":case"esriGeometryPolyline":case"esriGeometryPolygon":{const y=f[d.type].get(d.id);y&&l[ne[d.type]]?.featureSet.features.push(y);break}case"GroundOverlay":{const y=m.get(d.id);y&&l.mapImages.push(y);break}}l.fullExtent=F([l])}});const h=F(r);return{folders:t,sublayers:r,extent:h}}function T(e,t,r,s){const o=L&&L.findCredential(e);e=K(e,{token:o&&o.token});const p=A.kmlServiceUrl;return J(p,{query:{url:e,model:"simple",folders:"",refresh:r!==0||void 0,outSR:JSON.stringify(t)},responseType:"json",signal:s})}function N(e,t,r=null,s=[]){const o=[],p={},v=t.sublayers,m=t.folders.map(f=>f.id);return v.forEach(f=>{const h=new e;if(r?h.read(f,r):h.read(f),s.length&&m.includes(h.id)&&(h.visible=s.includes(h.id)),p[f.id]=h,f.parentFolderId!=null&&f.parentFolderId!==-1){const l=p[f.parentFolderId];l.sublayers||(l.sublayers=[]),l.sublayers?.unshift(h)}else o.unshift(h)}),o}function x(e,t,r){r.forEach(s=>{e.set(s.attributes[t],s)})}function ae(e,t){let r;return t.some(s=>s.id===e&&(r=s,!0)),r}function ue(e,t,r){const s=ae(e,r);return s&&(s.parentFolderId=t,s.networkLink=s),s}function F(e){const t=j(E),r=j(E);for(const s of e){if(s.polygons&&s.polygons.featureSet&&s.polygons.featureSet.features)for(const o of s.polygons.featureSet.features)S(t,o.geometry),w(r,t);if(s.polylines&&s.polylines.featureSet&&s.polylines.featureSet.features)for(const o of s.polylines.featureSet.features)S(t,o.geometry),w(r,t);if(s.points&&s.points.featureSet&&s.points.featureSet.features)for(const o of s.points.featureSet.features)S(t,o.geometry),w(r,t);if(s.mapImages)for(const o of s.mapImages)S(t,o.extent),w(r,t)}return D(r,E)?void 0:{xmin:r[0],ymin:r[1],zmin:r[2],xmax:r[3],ymax:r[4],zmax:r[5],spatialReference:O.WGS84}}var b;let u=b=class extends W.EventedMixin(q(H)){constructor(...e){super(...e),this.description=null,this.fullExtent=null,this.id=null,this.networkLink=null,this.parent=null,this.sublayers=null,this.title=null,this.sourceJSON=null,this.layer=null,this.addHandles([M(()=>this.sublayers,"after-add",({item:t})=>{t.parent=this,t.layer=this.layer},c),M(()=>this.sublayers,"after-remove",({item:t})=>{t.layer=t.parent=null},c),$(()=>this.sublayers,(t,r)=>{if(r)for(const s of r)s.layer=s.parent=null;if(t)for(const s of t)s.parent=this,s.layer=this.layer},c),$(()=>this.layer,t=>{if(this.sublayers)for(const r of this.sublayers)r.layer=t},c)])}initialize(){_(()=>this.networkLink).then(()=>_(()=>this.visible===!0)).then(()=>this.load())}load(e){if(!this.networkLink||this.networkLink.viewFormat)return;const t=e!=null?e.signal:null,r=this._fetchService(this._get("networkLink")?.href??"",t).then(s=>{const o=F(s.sublayers);this.fullExtent=G.fromJSON(o),this.sourceJSON=s;const p=V(I.ofType(b),N(b,s));this.sublayers?this.sublayers.addMany(p):this.sublayers=p,this.layer?.emit("sublayer-update"),this.layer&&this.layer.notifyChange("visibleSublayers")});return this.addResolvingPromise(r),Promise.resolve(this)}get visible(){return this._get("visible")}set visible(e){this._get("visible")!==e&&(this._set("visible",e),this.layer&&this.layer.notifyChange("visibleSublayers"))}readVisible(e,t){return!!t.visibility}_fetchService(e,t){return T(e,this.layer.outSpatialReference,this.layer.refreshInterval,t).then(r=>R(r.data))}};i([n()],u.prototype,"description",void 0),i([n({type:G})],u.prototype,"fullExtent",void 0),i([n()],u.prototype,"id",void 0),i([n({readOnly:!0,value:null})],u.prototype,"networkLink",void 0),i([n({json:{write:{allowNull:!0}}})],u.prototype,"parent",void 0),i([n({type:I.ofType(b),json:{write:{allowNull:!0}}})],u.prototype,"sublayers",void 0),i([n({value:null,json:{read:{source:"name",reader:e=>B(e)}}})],u.prototype,"title",void 0),i([n({value:!0})],u.prototype,"visible",null),i([P("visible",["visibility"])],u.prototype,"readVisible",null),i([n()],u.prototype,"sourceJSON",void 0),i([n()],u.prototype,"layer",void 0),u=b=i([C("esri.layers.support.KMLSublayer")],u);const z=u,ye=["kml","xml"];let a=class extends U(Q(Y(X(Z(ee(oe)))))){constructor(...e){super(...e),this._visibleFolders=[],this.allSublayers=new te({getCollections:()=>[this.sublayers],getChildrenFunction:t=>t.sublayers}),this.outSpatialReference=O.WGS84,this.path=null,this.legendEnabled=!1,this.operationalLayerType="KML",this.sublayers=null,this.type="kml",this.url=null}initialize(){this.addHandles([$(()=>this.sublayers,(e,t)=>{t&&t.forEach(r=>{r.parent=null,r.layer=null}),e&&e.forEach(r=>{r.parent=this,r.layer=this})},c),this.on("sublayer-update",()=>this.notifyChange("fullExtent"))])}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}readSublayersFromItemOrWebMap(e,t){this._visibleFolders=t.visibleFolders}readSublayers(e,t,r){return N(z,t,r,this._visibleFolders)}writeSublayers(e,t){const r=[],s=e.toArray();for(;s.length;){const o=s[0];o.networkLink||(o.visible&&r.push(o.id),o.sublayers&&s.push(...o.sublayers.toArray())),s.shift()}t.visibleFolders=r}get title(){const e=this._get("title");return e&&this.originOf("title")!=="defaults"?e:this.url?se(this.url,ye)||"KML":e||""}set title(e){this._set("title",e)}get visibleSublayers(){const e=this.sublayers,t=[],r=s=>{s.visible&&(t.push(s),s.sublayers&&s.sublayers.forEach(r))};return e&&e.forEach(r),t}get fullExtent(){return this._recomputeFullExtent()}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["KML"],supportsData:!1},e).catch(re).then(()=>this._fetchService(t))),Promise.resolve(this)}destroy(){super.destroy(),this.allSublayers.destroy()}async _fetchService(e){const t=await Promise.resolve().then(()=>this.resourceInfo?{ssl:!1,data:this.resourceInfo}:T(this.url??"",this.outSpatialReference,this.refreshInterval,e)),r=R(t.data);r&&this.read(r,{origin:"service"})}_recomputeFullExtent(){let e=null;this.extent!=null&&(e=this.extent.clone());const t=r=>{if(r.sublayers)for(const s of r.sublayers.items)t(s),s.visible&&s.fullExtent&&(e!=null?e.union(s.fullExtent):e=s.fullExtent.clone())};return t(this),e}};i([n({readOnly:!0})],a.prototype,"allSublayers",void 0),i([n({type:O})],a.prototype,"outSpatialReference",void 0),i([n({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],a.prototype,"path",void 0),i([n({readOnly:!0,json:{read:!1,write:!1}})],a.prototype,"legendEnabled",void 0),i([n({type:["show","hide","hide-children"]})],a.prototype,"listMode",void 0),i([n({type:["KML"]})],a.prototype,"operationalLayerType",void 0),i([n({})],a.prototype,"resourceInfo",void 0),i([n({type:I.ofType(z),json:{write:{ignoreOrigin:!0}}})],a.prototype,"sublayers",void 0),i([P(["web-map","portal-item"],"sublayers",["visibleFolders"])],a.prototype,"readSublayersFromItemOrWebMap",null),i([P("service","sublayers",["sublayers"])],a.prototype,"readSublayers",null),i([ie("sublayers")],a.prototype,"writeSublayers",null),i([n({readOnly:!0,json:{read:!1}})],a.prototype,"type",void 0),i([n({json:{origins:{"web-map":{read:{source:"title"}}},write:{ignoreOrigin:!0}}})],a.prototype,"title",null),i([n(le)],a.prototype,"url",void 0),i([n({readOnly:!0})],a.prototype,"visibleSublayers",null),i([n({type:G})],a.prototype,"extent",void 0),i([n()],a.prototype,"fullExtent",null),a=i([C("esri.layers.KMLLayer")],a);const fe=a;export{fe as default};

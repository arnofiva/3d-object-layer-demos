import{ib as tt,ci as et,aD as E,aE as L,gN as Rt,bl as Bt,aB as Tt,ca as Ut,cd as j,aF as Pt}from"./main-79e5ed80.js";import{z as lt,y as Q,v as it,p as $t}from"./colorUtils-c0f43caf.js";import{s as ot}from"./pixelRangeUtils-04f58c28.js";const Kt=["random","ndvi","ndvi2","ndvi3","elevation","gray","hillshade"],Ct=[{id:"aspect",type:"multipart",colorRamps:[{fromColor:[190,190,190],toColor:[255,45,8]},{fromColor:[255,45,8],toColor:[255,181,61]},{fromColor:[255,181,61],toColor:[255,254,52]},{fromColor:[255,254,52],toColor:[0,251,50]},{fromColor:[0,251,50],toColor:[255,254,52]},{fromColor:[0,253,255],toColor:[0,181,255]},{fromColor:[0,181,255],toColor:[26,35,253]},{fromColor:[26,35,253],toColor:[255,57,251]},{fromColor:[255,57,251],toColor:[255,45,8]}]},{id:"black-to-white",fromColor:[0,0,0],toColor:[255,255,255]},{id:"blue-bright",fromColor:[204,204,255],toColor:[0,0,224]},{id:"blue-light-to-dark",fromColor:[211,229,232],toColor:[46,100,140]},{id:"blue-green-bright",fromColor:[203,245,234],toColor:[48,207,146]},{id:"blue-green-light-to-dark",fromColor:[216,242,237],toColor:[21,79,74]},{id:"brown-light-to-dark",fromColor:[240,236,170],toColor:[102,72,48]},{id:"brown-to-blue-green-diverging-right",type:"multipart",colorRamps:[{fromColor:[156,85,31],toColor:[255,255,191]},{fromColor:[255,255,191],toColor:[33,130,145]}]},{id:"brown-to-blue-green-diverging-dark",type:"multipart",colorRamps:[{fromColor:[110,70,45],toColor:[204,204,102]},{fromColor:[204,204,102],toColor:[48,100,102]}]},{id:"coefficient-bias",fromColor:[214,214,255],toColor:[0,57,148]},{id:"cold-to-hot-diverging",type:"multipart",colorRamps:[{fromColor:[69,117,181],toColor:[255,255,191]},{fromColor:[255,255,191],toColor:[214,47,39]}]},{id:"condition-number",type:"multipart",colorRamps:[{fromColor:[0,97,0],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,34,0]}]},{id:"cyan-to-purple",type:"multipart",colorRamps:[{fromColor:[0,245,245],toColor:[0,0,245]},{fromColor:[0,0,245],toColor:[245,0,245]}]},{id:"cyan-light-to-blue-dark",type:"multipart",colorRamps:[{fromColor:[182,237,240],toColor:[31,131,224]},{fromColor:[31,131,224],toColor:[9,9,145]}]},{id:"distance",fromColor:[255,200,0],toColor:[0,0,255]},{id:"elevation1",type:"multipart",colorRamps:[{fromColor:[175,240,233],toColor:[255,255,179]},{fromColor:[255,255,179],toColor:[0,128,64]},{fromColor:[0,128,64],toColor:[252,186,3]},{fromColor:[252,186,3],toColor:[128,0,0]},{fromColor:[120,0,0],toColor:[105,48,13]},{fromColor:[105,48,13],toColor:[171,171,171]},{fromColor:[171,171,171],toColor:[255,252,255]}]},{id:"elevation2",type:"multipart",colorRamps:[{fromColor:[118,219,211],toColor:[255,255,199]},{fromColor:[255,255,199],toColor:[255,255,128]},{fromColor:[255,255,128],toColor:[217,194,121]},{fromColor:[217,194,121],toColor:[135,96,38]},{fromColor:[135,96,38],toColor:[150,150,181]},{fromColor:[150,150,181],toColor:[181,150,181]},{fromColor:[181,150,181],toColor:[255,252,255]}]},{id:"errors",fromColor:[255,235,214],toColor:[196,10,10]},{id:"gray-light-to-dark",fromColor:[219,219,219],toColor:[69,69,69]},{id:"green-bright",fromColor:[204,255,204],toColor:[14,204,14]},{id:"green-light-to-dark",fromColor:[220,245,233],toColor:[34,102,51]},{id:"green-to-blue",type:"multipart",colorRamps:[{fromColor:[32,204,16],toColor:[0,242,242]},{fromColor:[0,242,242],toColor:[2,33,227]}]},{id:"orange-bright",fromColor:[255,235,204],toColor:[240,118,5]},{id:"orange-light-to-dark",fromColor:[250,233,212],toColor:[171,65,36]},{id:"partial-spectrum",type:"multipart",colorRamps:[{fromColor:[242,241,162],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,0,0]},{fromColor:[252,3,69],toColor:[176,7,237]},{fromColor:[176,7,237],toColor:[2,29,173]}]},{id:"partial-spectrum-1-diverging",type:"multipart",colorRamps:[{fromColor:[135,38,38],toColor:[240,149,12]},{fromColor:[240,149,12],toColor:[255,255,191]},{fromColor:[255,255,191],toColor:[74,80,181]},{fromColor:[74,80,181],toColor:[39,32,122]}]},{id:"partial-spectrum-2-diverging",type:"multipart",colorRamps:[{fromColor:[115,77,42],toColor:[201,137,52]},{fromColor:[201,137,52],toColor:[255,255,191]},{fromColor:[255,255,191],toColor:[91,63,176]},{fromColor:[91,63,176],toColor:[81,13,97]}]},{id:"pink-to-yellow-green-diverging-bright",type:"multipart",colorRamps:[{fromColor:[158,30,113],toColor:[255,255,191]},{fromColor:[255,255,191],toColor:[99,110,45]}]},{id:"pink-to-yellow-green-diverging-dark",type:"multipart",colorRamps:[{fromColor:[97,47,73],toColor:[204,204,102]},{fromColor:[204,204,102],toColor:[22,59,15]}]},{id:"precipitation",type:"multipart",colorRamps:[{fromColor:[194,82,60],toColor:[237,161,19]},{fromColor:[237,161,19],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[0,219,0]},{fromColor:[0,219,0],toColor:[32,153,143]},{fromColor:[32,153,143],toColor:[11,44,122]}]},{id:"prediction",type:"multipart",colorRamps:[{fromColor:[40,146,199],toColor:[250,250,100]},{fromColor:[250,250,100],toColor:[232,16,20]}]},{id:"purple-bright",fromColor:[255,204,255],toColor:[199,0,199]},{id:"purple-to-green-diverging-bright",type:"multipart",colorRamps:[{fromColor:[77,32,150],toColor:[255,255,191]},{fromColor:[255,255,191],toColor:[20,122,11]}]},{id:"purple-to-green-diverging-dark",type:"multipart",colorRamps:[{fromColor:[67,14,89],toColor:[204,204,102]},{fromColor:[204,204,102],toColor:[24,79,15]}]},{id:"purple-blue-bright",fromColor:[223,184,230],toColor:[112,12,242]},{id:"purple-blue-light-to-dark",fromColor:[229,213,242],toColor:[93,44,112]},{id:"purple-red-bright",fromColor:[255,204,225],toColor:[199,0,99]},{id:"purple-red-light-to-dark",fromColor:[250,215,246],toColor:[143,17,57]},{id:"red-bright",fromColor:[255,204,204],toColor:[219,0,0]},{id:"red-light-to-dark",fromColor:[255,224,224],toColor:[143,10,10]},{id:"red-to-blue-diverging-bright",type:"multipart",colorRamps:[{fromColor:[196,69,57],toColor:[255,255,191]},{fromColor:[255,255,191],toColor:[48,95,207]}]},{id:"red-to-blue-diverging-dark",type:"multipart",colorRamps:[{fromColor:[107,13,13],toColor:[204,204,102]},{fromColor:[204,204,102],toColor:[13,53,97]}]},{id:"red-to-green",type:"multipart",colorRamps:[{fromColor:[245,0,0],toColor:[245,245,0]},{fromColor:[245,245,0],toColor:[0,245,0]}]},{id:"red-to-green-diverging-bright",type:"multipart",colorRamps:[{fromColor:[186,20,20],toColor:[255,255,191]},{fromColor:[255,255,191],toColor:[54,145,33]}]},{id:"red-to-green-diverging-dark",type:"multipart",colorRamps:[{fromColor:[97,21,13],toColor:[204,204,102]},{fromColor:[204,204,102],toColor:[16,69,16]}]},{id:"slope",type:"multipart",colorRamps:[{fromColor:[56,168,0],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,0,0]}]},{id:"spectrum-full-bright",type:"multipart",colorRamps:[{fromColor:[255,0,0],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[0,255,255]},{fromColor:[0,255,255],toColor:[0,0,255]}]},{id:"spectrum-full-dark",type:"multipart",colorRamps:[{fromColor:[153,0,0],toColor:[153,153,0]},{fromColor:[153,153,0],toColor:[0,153,153]},{fromColor:[0,153,153],toColor:[0,0,153]}]},{id:"spectrum-full-light",type:"multipart",colorRamps:[{fromColor:[255,153,153],toColor:[255,255,153]},{fromColor:[255,255,153],toColor:[153,255,255]},{fromColor:[153,255,255],toColor:[153,153,255]}]},{id:"surface",type:"multipart",colorRamps:[{fromColor:[112,153,89],toColor:[242,238,162]},{fromColor:[242,238,162],toColor:[242,206,133]},{fromColor:[242,206,133],toColor:[194,140,124]},{fromColor:[194,140,124],toColor:[255,242,255]}]},{id:"temperature",type:"multipart",colorRamps:[{fromColor:[255,252,255],toColor:[255,0,255]},{fromColor:[255,0,255],toColor:[0,0,255]},{fromColor:[0,0,255],toColor:[0,255,255]},{fromColor:[0,255,255],toColor:[0,255,0]},{fromColor:[0,255,0],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,128,0]},{fromColor:[255,128,0],toColor:[128,0,0]}]},{id:"white-to-black",fromColor:[255,255,255],toColor:[0,0,0]},{id:"yellow-to-dark-red",type:"multipart",colorRamps:[{fromColor:[255,255,128],toColor:[242,167,46]},{fromColor:[242,167,46],toColor:[107,0,0]}]},{id:"yellow-to-green-to-dark-blue",type:"multipart",colorRamps:[{fromColor:[255,255,128],toColor:[56,224,9]},{fromColor:[56,224,9],toColor:[26,147,171]},{fromColor:[26,147,171],toColor:[12,16,120]}]},{id:"yellow-to-red",fromColor:[245,245,0],toColor:[255,0,0]},{id:"yellow-green-bright",fromColor:[236,252,204],toColor:[157,204,16]},{id:"yellow-green-light-to-dark",fromColor:[215,240,175],toColor:[96,107,45]}],Dt=new tt({Aspect:"aspect","Black to White":"black-to-white","Blue Bright":"blue-bright","Blue Light to Dark":"blue-light-to-dark","Blue-Green Bright":"blue-green-bright","Blue-Green Light to Dark":"blue-green-light-to-dark","Brown Light to Dark":"brown-light-to-dark","Brown to Blue Green Diverging, Bright":"brown-to-blue-green-diverging-right","Brown to Blue Green Diverging, Dark":"brown-to-blue-green-diverging-dark","Coefficient Bias":"coefficient-bias","Cold to Hot Diverging":"cold-to-hot-diverging","Condition Number":"condition-number","Cyan to Purple":"cyan-to-purple","Cyan-Light to Blue-Dark":"cyan-light-to-blue-dark",Distance:"distance","Elevation #1":"elevation1","Elevation #2":"elevation2",Errors:"errors","Gray Light to Dark":"gray-light-to-dark","Green Bright":"green-bright","Green Light to Dark":"green-light-to-dark","Green to Blue":"green-to-blue","Orange Bright":"orange-bright","Orange Light to Dark":"orange-light-to-dark","Partial Spectrum":"partial-spectrum","Partial Spectrum 1 Diverging":"partial-spectrum-1-diverging","Partial Spectrum 2 Diverging":"partial-spectrum-2-diverging","Pink to YellowGreen Diverging, Bright":"pink-to-yellow-green-diverging-bright","Pink to YellowGreen Diverging, Dark":"pink-to-yellow-green-diverging-dark",Precipitation:"precipitation",Prediction:"prediction","Purple Bright":"purple-bright","Purple to Green Diverging, Bright":"purple-to-green-diverging-bright","Purple to Green Diverging, Dark":"purple-to-green-diverging-dark","Purple-Blue Bright":"purple-blue-bright","Purple-Blue Light to Dark":"purple-blue-light-to-dark","Purple-Red Bright":"purple-red-bright","Purple-Red Light to Dark":"purple-red-light-to-dark","Red Bright":"red-bright","Red Light to Dark":"red-light-to-dark","Red to Blue Diverging, Bright":"red-to-blue-diverging-bright","Red to Blue Diverging, Dark":"red-to-blue-diverging-dark","Red to Green":"red-to-green","Red to Green Diverging, Bright":"red-to-green-diverging-bright","Red to Green Diverging, Dark":"red-to-green-diverging-dark",Slope:"slope","Spectrum-Full Bright":"spectrum-full-bright","Spectrum-Full Dark":"spectrum-full-dark","Spectrum-Full Light":"spectrum-full-light",Surface:"surface",Temperature:"temperature","White to Black":"white-to-black","Yellow to Dark Red":"yellow-to-dark-red","Yellow to Green to Dark Blue":"yellow-to-green-to-dark-blue","Yellow to Red":"yellow-to-red","Yellow-Green Bright":"yellow-green-bright","Yellow-Green Light to Dark":"yellow-green-light-to-dark"});function J(t,o){if(!t||!o||t.length!==o.length)return!1;for(let r=0;r<t.length;r++)if(t[r]>o[r]+2||t[r]<o[r]-2)return!1;return!0}function nt(t){const o=t.clone();return o.fromColor=t.toColor,o.toColor=t.fromColor,o.algorithm=t.algorithm,o}function It(t){if(t.type==="multipart"){const o=t.clone();return o.colorRamps?.length&&(o.colorRamps=o.colorRamps.reverse().map(r=>nt(r))),o}return nt(t)}function st(t,o){if(!t)return;const r=o??Ct;let l=null;return t.type==="algorithmic"?r.some(s=>{if(J(t.fromColor.toRgb(),s.fromColor)&&J(t.toColor.toRgb(),s.toColor))return l=s.id,!0}):t.type==="multipart"&&r.some(s=>{const e=t.colorRamps,i=s.colorRamps;if(e&&i&&e.length===i.length&&!i.some((h,a)=>{if(!J(e[a].fromColor.toRgb(),new et(h.fromColor).toRgb())||!J(e[a].toColor.toRgb(),new et(h.toColor).toRgb()))return!0})){if(l)return!0;l=s.id}}),l}function St(t,o){if(!t)return;let r=st(t,o);return r==null&&(r=st(t=It(t),o)),r}function Gt(t){const o=typeof t=="string"?t:St(t);return o?Dt.toJSON(o):null}function Qt(t,o="esriCIELabAlgorithm"){const r=Ct.find(({id:l})=>l===t);return r?r.colorRamps?{type:"multipart",colorRamps:r.colorRamps.map(l=>({type:"algorithmic",algorithm:o,fromColor:[...l.fromColor],toColor:[...l.toColor]}))}:{type:"algorithmic",algorithm:o,fromColor:[...r.fromColor],toColor:[...r.toColor]}:null}function yt(t){const o=(t=t||{}).numColors||256,r=t.distanceOffset||0,l=t.isCustomInterval!=null?t.isCustomInterval:t.distanceInterval!==null&&t.distanceInterval!==1/(o-1),s=t.distanceInterval||1/(o-1);return{...t,numColors:o,distanceOffset:r,interpolateAlpha:!!t.interpolateAlpha,distanceInterval:s,isCustomInterval:l,weights:t.weights}}function Et(t,o,r){const{numColors:l,distanceOffset:s,distanceInterval:e,isCustomInterval:i}=r,h=t.s===0,a=o.s===0;let c=t.h,n=o.h;h&&!a?c=n:a&&!h&&(o={...o,h:c},n=c);let u,p=Math.abs(n-c);const f=360;p<f/2?u=(n-c)*e:(p=f-p,u=c>n?p*e:-p*e);const m=(o.s-t.s)*e,g=(o.v-t.v)*e;let{s:d,v:C}=t,y=c;if(s){const k=s/e;y=(y+k*u+f)%f,d+=k*m,C+=k*g}const w=[];for(let k=0;k<l-1;k++)w.push({h:y,s:d,v:C}),y=(y+u+f)%f,d+=m,C+=g;return w.push(i?{h:y,s:d,v:C}:o),w}function Lt(t,o,r){const{numColors:l,distanceOffset:s,distanceInterval:e,isCustomInterval:i}=r;let{l:h,a,b:c}=t;const n=(o.l-h)*e,u=(o.a-a)*e,p=(o.b-c)*e,f=[];if(s){const m=s/e;h+=m*n,a+=m*u,c+=m*p}for(let m=0;m<l-1;m++)f.push({l:h,a,b:c}),h+=n,a+=u,c+=p;return f.push(i?{l:h,a,b:c}:o),f}function Ft(t,o,r){const{numColors:l,distanceOffset:s,distanceInterval:e,isCustomInterval:i}=r,h=t.h,a=o.h,c=2*Math.PI;let n;if(h<=a){const y=a-h,w=a-h-c;n=Math.abs(w)<Math.abs(y)?w:y}else{const y=a+c-h,w=a-h;n=Math.abs(w)<Math.abs(y)?w:y}const u=n*e,p=(o.l-t.l)*e,f=(o.c-t.c)*e;let{l:m,c:g,h:d}=t;if(s){const y=s/e;m+=y*p,g+=y*f,d=(d+y*u+c)%c}const C=[];for(let y=0;y<l-1;y++)C.push({l:m,c:g,h:d}),m+=p,g+=f,d=(d+u+c)%c;return C.push(i?{l:m,c:g,h:d}:o),C}function kt(t,o){let{fromColor:r,toColor:l}=t;r=[...r],l=[...l],r.length===3&&(r=r.concat([255])),l.length===3&&(l=l.concat([255]));const s=t.algorithm||"esriCIELabAlgorithm",e=yt(o),{numColors:i,distanceOffset:h,isCustomInterval:a,interpolateAlpha:c}=e;if(i===1&&h===0)return[r];if(i===2&&h===0&&!a)return[r,l];const n={r:r[0],g:r[1],b:r[2]},u={r:l[0],g:l[1],b:l[2]},p=s==="esriCIELabAlgorithm"?Lt(lt(n),lt(u),e):s==="esriHSVAlgorithm"?Et(Q(n),Q(u),e):Ft(it(n),it(u),e),f=[],m=r[3]??255,g=((l[3]??255)-m)/(i-1);for(let d=0;d<i;d++){const{r:C,g:y,b:w}=$t(p[d]),k=c?Math.round(m+g*d):255;f.push([C,y,w,k])}return f}function _t(t,o){const{numColors:r,interpolateAlpha:l}=yt(o);let s=o?.weights;const{colorRamps:e}=t;if(s){const p=s.reduce((f,m)=>f+m);s=s.map(f=>f/p)}else{s=[];for(let p=0;p<e.length;p++)s[p]=1/e.length}const i=[];let h=0,a=0;const c=1/(r-1);let n=!1;for(let p=0;p<e.length;p++){let f=n?0:h*c-a,m=p===e.length-1?r-1-h:(s[p]-f)/c;if(n=Math.ceil(m)===m,m=Math.ceil(m),m===0)continue;f/=s[p];const g=kt(e[p],{numColors:m,interpolateAlpha:l,distanceOffset:f,distanceInterval:c/s[p]});h+=g.length,i.push(...g),a+=s[p]}const u=[...e[e.length-1].toColor];return u.length===3&&u.push(255),i.push(u),i}function Vt(t,o){const r="toJSON"in t?t.toJSON():t;return r.type==="multipart"?_t(r,o):kt(r,o)}function Zt(t,o){const r=Vt(t,o),l=o?.interpolateAlpha;return r.forEach((s,e)=>{s.unshift(e),l||s.pop()}),r}function at(t){const o=Q(t);return{type:"HsvColor",Hue:o.h,Saturation:o.s,Value:o.v,AlphaValue:255}}function ht(t){return{Algorithm:t.toJSON()?.Algorithm||"esriHSVAlgorithm",type:"AlgorithmicColorRamp",FromColor:at(t.fromColor),ToColor:at(t.toColor)}}function to(t){const o=Gt(t);if(!o)return null;if(t.type==="algorithmic")return{...ht(t),Name:o};if(t.colorRamps){const r=t.colorRamps.map(ht);return{type:"MultiPartColorRamp",NumColorRamps:r.length,ArrayOfColorRamp:r,Name:o}}return null}function oo(t){const o=t.reverse().map(r=>{const l=r.toString(16);return l.length<2?"0"+l:l});return 4294967295&Number.parseInt(o.join(""),16)}const ro=new tt({none:"none",standardDeviation:"standard-deviation",histogramEqualization:"histogram-equalization",minMax:"min-max",percentClip:"percent-clip",sigmoid:"sigmoid"}),eo={0:"none",3:"standardDeviation",4:"histogramEqualization",5:"minMax",6:"percentClip",9:"sigmoid"};let ft=class{constructor(o=null,r=null,l=null){this.minValue=o,this.maxValue=r,this.noDataValue=l}};var _;let S=_=class extends Bt{static createEmptyBand(t,o){return new(_.getPixelArrayConstructor(t))(o)}static getPixelArrayConstructor(t){let o;switch(t){case"u1":case"u2":case"u4":case"u8":o=Uint8Array;break;case"u16":o=Uint16Array;break;case"u32":o=Uint32Array;break;case"s8":o=Int8Array;break;case"s16":o=Int16Array;break;case"s32":o=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":o=Float32Array;break;case"f64":o=Float64Array}return o}constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(t){if(!t)return"f32";let o=t.toLowerCase();return["u1","u2","u4"].includes(o)?o="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(o)||(o="f32"),o}getPlaneCount(){return this.pixels?.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new Tt("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics??new ft)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map(r=>this._calculateBandStatistics(r,this.mask));const t=this.mask;let o=0;if(t!=null)for(let r=0;r<t.length;r++)t[r]&&o++;else o=this.width*this.height;this.validPixelCount=o}clamp(t){if(!t||t==="f64"||t==="f32"||!this.pixels)return;const[o,r]=ot(t),l=this.pixels,s=this.width*this.height,e=l.length;let i,h,a;const c=[];for(let n=0;n<e;n++){a=_.createEmptyBand(t,s),i=l[n];for(let u=0;u<s;u++)h=i[u],a[u]=h>r?r:h<o?o:h;c.push(a)}this.pixels=c,this.pixelType=t}extractBands(t){const{pixels:o,statistics:r}=this;if(t==null||t.length===0||!o||o.length===0)return this;const l=o.length,s=t.some(u=>u>=o.length),e=l===t.length&&!t.some((u,p)=>u!==p);if(s||e)return this;const i=this.bandMasks?.length===l?t.map(u=>this.bandMasks[u]):void 0;let{mask:h,validPixelCount:a}=this;const{width:c,height:n}=this;if(i){if(i.length===1)h=i[0];else{const u=c*n;h=new Uint8Array(u).fill(255);for(let p=0;p<i.length;p++){const f=i[p];for(let m=0;m<u;m++)f[m]||(h[m]=0)}}a=h.filter(u=>!!u).length}return new _({pixelType:this.pixelType,width:c,height:n,mask:h,bandMasks:i,validPixelCount:a,maskIsAlpha:this.maskIsAlpha,pixels:t.map(u=>o[u]),statistics:r&&t.map(u=>r[u])})}clone(){const t=new _({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let o;this.mask!=null&&(this.mask instanceof Uint8Array?t.mask=new Uint8Array(this.mask):t.mask=this.mask.slice(0)),this.bandMasks&&(t.bandMasks=this.bandMasks.map(l=>new Uint8Array(l)));const r=_.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const l=!!this.pixels[0].slice;for(o=0;o<this.pixels.length;o++)t.pixels[o]=l?this.pixels[o].slice(0,this.pixels[o].length):new r(this.pixels[o])}if(this.statistics)for(t.statistics=[],o=0;o<this.statistics.length;o++)t.statistics[o]=Ut(this.statistics[o]);return t.premultiplyAlpha=this.premultiplyAlpha,t}_fillFrom8Bit(t){const{mask:o,maskIsAlpha:r,premultiplyAlpha:l,pixels:s}=this;if(!t||!s||!s.length)return void j.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let e,i,h,a;e=i=h=s[0],s.length>=3?(i=s[1],h=s[2]):s.length===2&&(i=s[1]);const c=new Uint32Array(t),n=this.width*this.height;if(e.length===n)if(o!=null&&o.length===n)if(r)for(a=0;a<n;a++){const u=o[a];if(u){const p=u/255;c[a]=l?u<<24|h[a]*p<<16|i[a]*p<<8|e[a]*p:u<<24|h[a]<<16|i[a]<<8|e[a]}}else for(a=0;a<n;a++)o[a]&&(c[a]=255<<24|h[a]<<16|i[a]<<8|e[a]);else for(a=0;a<n;a++)c[a]=255<<24|h[a]<<16|i[a]<<8|e[a];else j.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:o,mask:r,statistics:l}=this;if(!t||!o||!o.length)return void j.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const s=this.pixelType;let e=1,i=0,h=1;if(l&&l.length>0){for(const g of l)if(g.minValue!=null&&(i=Math.min(i,g.minValue)),g.maxValue!=null&&g.minValue!=null){const d=g.maxValue-g.minValue;h=Math.max(h,d)}e=255/h}else{let g=255;s==="s8"?(i=-128,g=127):s==="u16"?g=65535:s==="s16"?(i=-32768,g=32767):s==="u32"?g=4294967295:s==="s32"?(i=-2147483648,g=2147483647):s==="f32"?(i=-34e38,g=34e38):s==="f64"&&(i=-Number.MAX_VALUE,g=Number.MAX_VALUE),e=255/(g-i)}const a=new Uint32Array(t),c=this.width*this.height;let n,u,p,f,m;if(n=u=p=o[0],n.length!==c)return j.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(o.length>=2)if(u=o[1],o.length>=3&&(p=o[2]),r!=null&&r.length===c)for(f=0;f<c;f++)r[f]&&(a[f]=255<<24|(p[f]-i)*e<<16|(u[f]-i)*e<<8|(n[f]-i)*e);else for(f=0;f<c;f++)a[f]=255<<24|(p[f]-i)*e<<16|(u[f]-i)*e<<8|(n[f]-i)*e;else if(r!=null&&r.length===c)for(f=0;f<c;f++)m=(n[f]-i)*e,r[f]&&(a[f]=255<<24|m<<16|m<<8|m);else for(f=0;f<c;f++)m=(n[f]-i)*e,a[f]=255<<24|m<<16|m<<8|m}_fillFrom32Bit(t){const{pixels:o,mask:r}=this;if(!t||!o||!o.length)return j.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let l,s,e,i;l=s=e=o[0],o.length>=3?(s=o[1],e=o[2]):o.length===2&&(s=o[1]);const h=this.width*this.height;if(l.length!==h)return j.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let a=0;if(r!=null&&r.length===h)for(i=0;i<h;i++)t[a++]=l[i],t[a++]=s[i],t[a++]=e[i],t[a++]=1&r[i];else for(i=0;i<h;i++)t[a++]=l[i],t[a++]=s[i],t[a++]=e[i],t[a++]=1}_calculateBandStatistics(t,o){let r=1/0,l=-1/0;const s=t.length;let e,i=0;if(o!=null)for(e=0;e<s;e++)o[e]&&(i=t[e],r=i<r?i:r,l=i>l?i:l);else for(e=0;e<s;e++)i=t[e],r=i<r?i:r,l=i>l?i:l;return new ft(r,l)}};E([L({json:{write:!0}})],S.prototype,"width",void 0),E([L({json:{write:!0}})],S.prototype,"height",void 0),E([L({json:{write:!0}})],S.prototype,"pixelType",void 0),E([Rt("pixelType")],S.prototype,"castPixelType",null),E([L({json:{write:!0}})],S.prototype,"validPixelCount",void 0),E([L({json:{write:!0}})],S.prototype,"mask",void 0),E([L({json:{write:!0}})],S.prototype,"maskIsAlpha",void 0),E([L({json:{write:!0}})],S.prototype,"pixels",void 0),E([L()],S.prototype,"premultiplyAlpha",void 0),E([L({json:{write:!0}})],S.prototype,"statistics",void 0),E([L({json:{write:!0}})],S.prototype,"depthCount",void 0),E([L({json:{write:!0}})],S.prototype,"noDataValues",void 0),E([L({json:{write:!0}})],S.prototype,"bandMasks",void 0),S=_=E([Pt("esri.layers.support.PixelBlock")],S);const $=S;var ut,ct;(function(t){t[t.matchAny=0]="matchAny",t[t.matchAll=1]="matchAll"})(ut||(ut={})),function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(ct||(ct={}));const io=6;function D(t){return t!=null&&t.declaredClass==="esri.layers.support.PixelBlock"&&t.pixels&&t.pixels.length>0}function no(t){if(!t?.length||t.some(n=>!D(n)))return null;if(t.length===1)return t[0]?.clone()??null;const o=t,{width:r,height:l,pixelType:s}=o[0];if(o.some(n=>n.width!==r||n.height!==l))return null;const e=o.map(({mask:n})=>n).filter(n=>n!=null);let i=null;e.length&&(i=new Uint8Array(r*l),i.set(e[0]),e.length>1&&xt(e.slice(1),i));const h=[];o.forEach(({pixels:n})=>h.push(...n));const a=o.map(({statistics:n})=>n).filter(n=>n?.length),c=[];return a.forEach(n=>c.push(...n)),new $({pixelType:s,width:r,height:l,mask:i,pixels:h,statistics:c.length?c:null})}function so(t){if(!t)return;const o=t.colormap;if(!o||o.length===0)return;const r=o.sort((u,p)=>u[0]-p[0]);let l=0;r[0][0]<0&&(l=r[0][0]);const s=Math.max(256,r[r.length-1][0]-l+1),e=new Uint8Array(4*s),i=[];let h,a=0,c=0;const n=r[0].length===5;if(s>65536)return r.forEach(u=>{i[u[0]-l]=n?u.slice(1):u.slice(1).concat([255])}),{indexed2DColormap:i,offset:l,alphaSpecified:n};if(t.fillUnspecified)for(h=r[c],a=h[0]-l;a<s;a++)e[4*a]=h[1],e[4*a+1]=h[2],e[4*a+2]=h[3],e[4*a+3]=n?h[4]:255,a===h[0]-l&&(h=c===r.length-1?h:r[++c]);else for(a=0;a<r.length;a++)h=r[a],c=4*(h[0]-l),e[c]=h[1],e[c+1]=h[2],e[c+2]=h[3],e[c+3]=n?h[4]:255;return{indexedColormap:e,offset:l,alphaSpecified:n}}function ao(t,o){if(!D(t)||!o||!o.indexedColormap&&!o.indexed2DColormap)return t;const r=t.clone(),l=r.pixels;let s=r.mask;const e=r.width*r.height;if(l.length!==1)return t;const{indexedColormap:i,indexed2DColormap:h,offset:a,alphaSpecified:c}=o;let n=0;const u=l[0],p=new Uint8Array(u.length),f=new Uint8Array(u.length),m=new Uint8Array(u.length);let g,d=0;if(i){const C=i.length-1;if(s!=null)for(n=0;n<e;n++)s[n]&&(d=4*(u[n]-a),d<a||d>C?s[n]=0:(p[n]=i[d],f[n]=i[d+1],m[n]=i[d+2],s[n]=i[d+3]));else{for(s=new Uint8Array(e),n=0;n<e;n++)d=4*(u[n]-a),d<a||d>C?s[n]=0:(p[n]=i[d],f[n]=i[d+1],m[n]=i[d+2],s[n]=i[d+3]);r.mask=s}}else if(h)if(s!=null)for(n=0;n<e;n++)s[n]&&(g=h[u[n]],p[n]=g[0],f[n]=g[1],m[n]=g[2],s[n]=g[3]);else{for(s=new Uint8Array(e),n=0;n<e;n++)g=h[u[n]],p[n]=g[0],f[n]=g[1],m[n]=g[2],s[n]=g[3];r.mask=s}return r.pixels=[p,f,m],r.statistics=null,r.pixelType="u8",r.maskIsAlpha=c,r}function ho(t,o){if(!D(t))return null;const{pixels:r,mask:l}=t,s=r.length;let e=o.lut;const{offset:i}=o;e&&e[0].length===1&&(e=r.map(()=>e));const h=[],a=o.outputPixelType||"u8";for(let n=0;n<s;n++){const u=wt(r[n],l,e[n],i||0,a);h.push(u)}const c=new $({width:t.width,height:t.height,pixels:h,mask:l,pixelType:a});return c.updateStatistics(),c}function wt(t,o,r,l,s){const e=t.length,i=$.createEmptyBand(s,e);if(o)for(let h=0;h<e;h++)o[h]&&(i[h]=r[t[h]-l]);else for(let h=0;h<e;h++)i[h]=r[t[h]-l];return i}function fo(t,o){if(!D(t))return null;const r=t.clone(),{pixels:l}=r,s=r.width*r.height,e=o.length,i=Math.floor(e/2),h=o[Math.floor(i)],a=l[0];let c,n,u,p,f,m,g=!1;const d=new Uint8Array(s),C=new Uint8Array(s),y=new Uint8Array(s);let w=r.mask;const k=o[0].mappedColor.length===4;for(w||(w=new Uint8Array(s),w.fill(k?255:1),r.mask=w),f=0;f<s;f++)if(w[f]){for(c=a[f],g=!1,m=i,n=h,u=0,p=e-1;p-u>1;){if(c===n.value){g=!0;break}c>n.value?u=m:p=m,m=Math.floor((u+p)/2),n=o[Math.floor(m)]}g||(c===o[u].value?(n=o[u],g=!0):c===o[p].value?(n=o[p],g=!0):c<o[u].value?(g=!1,n=null):c>o[u].value&&(c<o[p].value?(n=o[u],g=!0):p===e-1?(g=!1,n=null):(n=o[p],g=!0))),g?(d[f]=n.mappedColor[0],C[f]=n.mappedColor[1],y[f]=n.mappedColor[2],w[f]=n.mappedColor[3]):d[f]=C[f]=y[f]=w[f]=0}return r.pixels=[d,C,y],r.mask=w,r.pixelType="u8",r.maskIsAlpha=k,r}function uo(t,o){if(!D(t))return null;const{width:r,height:l}=t,{inputRanges:s,outputValues:e,outputPixelType:i,noDataRanges:h,allowUnmatched:a,isLastInputRangeInclusive:c}=o,n=t.pixels[0],u=$.createEmptyBand(i,n.length),p=t.mask,f=new Uint8Array(r*l);p?f.set(p):f.fill(255);const m=t.pixelType.startsWith("f")?1e-6:0,g=s.map(k=>k-m);g[0]=s[0],g[g.length-1]=s[s.length-1]+(c?1e-6:0);const d=s.length/2,[C,y]=ot(i);for(let k=0;k<l;k++)for(let b=0;b<r;b++){const M=k*r+b;if(f[M]){const v=n[M];let R=!1;for(let U=d-1;U>=0;U--)if(v===g[2*U]||v>g[2*U]&&v<g[2*U+1]){u[M]=e[U],R=!0;break}R||(a?u[M]=v>y?y:v<C?C:v:f[M]=0)}}const w=h?.length;if(w)for(let k=0;k<l;k++)for(let b=0;b<r;b++){const M=k*r+b;if(!p||p[M]){const v=n[M];for(let R=0;R<w;R+=2)if(v>=h[R]&&v<=h[R+1]){u[M]=0,f[M]=0;break}}}return new $({width:r,height:l,pixelType:i,pixels:[u],mask:f})}function pt(t,o,r,l){const s=r!=null&&r.length>=2?new Set(r):null,e=r?.length===1?r[0]:null,i=!!o?.length;for(let h=0;h<t.length;h++)if(l[h]){const a=t[h];if(i){let c=!1;for(let n=0;n<o.length;n+=2)if(a>=o[n]&&a<=o[n+1]){c=!0;break}c||(l[h]=0)}l[h]&&(a===e||s?.has(a))&&(l[h]=0)}}function gt(t,o){const r=t[0].length;for(let l=0;l<r;l++)if(o[l]){let s=!1;for(let e=0;e<t.length;e++)if(t[e][l]){s=!0;break}s||(o[l]=0)}}function xt(t,o){const r=t[0].length;for(let l=0;l<r;l++)if(o[l]){let s=!1;for(let e=0;e<t.length;e++)if(t[e][l]===0){s=!0;break}s&&(o[l]=0)}}function co(t,o){if(!D(t))return null;const{width:r,height:l,pixels:s}=t,e=r*l,i=new Uint8Array(e);t.mask?i.set(t.mask):i.fill(255);const h=s.length,{includedRanges:a,noDataValues:c,outputPixelType:n,matchAll:u,lookups:p}=o;if(p){const f=[];for(let m=0;m<h;m++){const g=p[m],d=wt(s[m],i,g.lut,g.offset||0,"u8");f.push(d)}f.length===1?i.set(f[0]):u?gt(f,i):xt(f,i)}else if(u){const f=[];for(let m=0;m<h;m++){const g=new Uint8Array(e);g.set(i),pt(s[m],a?.slice(2*m,2*m+2),c?.[m],g),f.push(g)}f.length===1?i.set(f[0]):gt(f,i)}else for(let f=0;f<h;f++)pt(s[f],a?.slice(2*f,2*f+2),c?.[f],i);return new $({width:r,height:l,pixelType:n,pixels:s,mask:i})}function po(t){const{srcPixelType:o,inputRanges:r,outputValues:l,allowUnmatched:s,noDataRanges:e,isLastInputRangeInclusive:i,outputPixelType:h}=t;if(o!=="u8"&&o!=="s8"&&o!=="u16"&&o!=="s16")return null;const a=o.includes("16")?65536:256,c=o.includes("s")?-a/2:0,n=$.createEmptyBand(h,a),u=new Uint8Array(a);s&&u.fill(255);const[p,f]=ot(h);if(r?.length&&l?.length){const g=r.map(d=>d-1e-6);g[0]=r[0],i&&(g[g.length-1]=r[r.length-1]);for(let d=0;d<g.length;d++){const C=l[d]>f?f:l[d]<p?p:l[d],y=Math.ceil(g[2*d]-c),w=Math.floor(g[2*d+1]-c);for(let k=y;k<=w;k++)n[k]=C,u[k]=255}}if(e?.length)for(let m=0;m<e.length;m++){const g=Math.ceil(e[2*m]-c),d=Math.floor(e[2*m+1]-c);for(let C=g;C<=d;C++)u[C]=0}return{lut:n,offset:c,mask:u}}function go(t,o,r){if(t!=="u8"&&t!=="s8"&&t!=="u16"&&t!=="s16")return null;const l=t.includes("16")?65536:256,s=t.includes("s")?-l/2:0,e=new Uint8Array(l);if(o)for(let i=0;i<o.length;i++){const h=Math.ceil(o[2*i]-s),a=Math.floor(o[2*i+1]-s);for(let c=h;c<=a;c++)e[c]=255}else e.fill(255);if(r)for(let i=0;i<r.length;i++)e[r[i]-s]=0;return{lut:e,offset:s}}function Nt(t,o,r,l,s,e,i,h){return{xmin:s<=r*t?0:s<r*t+t?s-r*t:t,ymin:e<=l*o?0:e<l*o+o?e-l*o:o,xmax:s+i<=r*t?0:s+i<r*t+t?s+i-r*t:t,ymax:e+h<=l*o?0:e+h<l*o+o?e+h-l*o:o}}function K(t,o,r,l,s,e){const{width:i,height:h}=r.block,{x:a,y:c}=r.offset,{width:n,height:u}=r.mosaic,p=Nt(i,h,l,s,a,c,n,u);let f=0,m=0;if(e){const g=e.hasGCSSShiftTransform?360:e.halfWorldWidth??0,d=i*e.resolutionX,C=e.startX+l*d;C<g&&C+d>g?m=e.rightPadding:C>=g&&(f=e.leftMargin-e.rightPadding,m=0)}if(p.xmax-=m,typeof o!="number")for(let g=p.ymin;g<p.ymax;g++){const d=(s*h+g-c)*n+(l*i-a)+f,C=g*i;for(let y=p.xmin;y<p.xmax;y++)t[d+y]=o[C+y]}else for(let g=p.ymin;g<p.ymax;g++){const d=(s*h+g-c)*n+(l*i-a)+f;for(let C=p.xmin;C<p.xmax;C++)t[d+C]=o}}function mo(t,o,r={}){const{clipOffset:l,clipSize:s,alignmentInfo:e,blockWidths:i}=r;if(i)return jt(t,o,{blockWidths:i});const h=t.find(A=>D(A));if(h==null)return null;const a=s?s.width:o.width,c=s?s.height:o.height,n=h.width,u=h.height,p=o.width/n,f=o.height/u,m={offset:l||{x:0,y:0},mosaic:s||o,block:{width:n,height:u}},g=h.pixelType,d=$.getPixelArrayConstructor(g),C=h.pixels.length,y=[];let w,k;for(let A=0;A<C;A++){k=new d(a*c);for(let B=0;B<f;B++)for(let x=0;x<p;x++){const T=t[B*p+x];D(T)&&(w=T.pixels[A],K(k,w,m,x,B,e))}y.push(k)}const b=t.some(A=>A==null||A.mask!=null&&A.mask.length>0),M=t.some(A=>A!=null&&A.bandMasks&&A.bandMasks.length>1),v=b?new Uint8Array(a*c):void 0,R=M?[]:void 0;if(v){for(let A=0;A<f;A++)for(let B=0;B<p;B++){const x=t[A*p+B],T=x!=null?x.mask:null;K(v,T??(x?255:0),m,B,A,e)}if(R)for(let A=0;A<C;A++){const B=new Uint8Array(a*c);for(let x=0;x<f;x++)for(let T=0;T<p;T++){const G=t[x*p+T],I=G?.bandMasks?.[A]??G?.mask;K(B,I??(G?255:0),m,T,x,e)}R.push(B)}}const U=new $({width:a,height:c,pixels:y,pixelType:g,bandMasks:R,mask:v});return U.updateStatistics(),U}function jt(t,o,r){const l=t.find(d=>d!=null);if(l==null)return null;const s=t.some(d=>d==null||!!d.mask),{width:e,height:i}=o,h=s?new Uint8Array(e*i):null,{blockWidths:a}=r,c=[],n=l.getPlaneCount(),u=$.getPixelArrayConstructor(l.pixelType);if(s)for(let d=0,C=0;d<t.length;C+=a[d],d++){const y=t[d];if(!D(y))continue;const w=y.mask;for(let k=0;k<i;k++)for(let b=0;b<a[d];b++)h[k*e+b+C]=w==null?255:w[k*y.width+b]}const p=t.some(d=>d!=null&&d.bandMasks&&d.bandMasks.length>1),f=p?[]:void 0,m=e*i;for(let d=0;d<n;d++){const C=new u(m),y=p?new Uint8Array(m):void 0;for(let w=0,k=0;w<t.length;k+=a[w],w++){const b=t[w];if(!D(b))continue;const M=b.pixels[d];if(M!=null){for(let v=0;v<i;v++)for(let R=0;R<a[w];R++)C[v*e+R+k]=M[v*b.width+R];if(y){const v=b.bandMasks?.[d]??b.mask;for(let R=0;R<i;R++)for(let U=0;U<a[w];U++)y[R*e+U+k]=v?v[R*b.width+U]:255}}}c.push(C),f&&y&&f.push(y)}const g=new $({width:e,height:i,mask:h,bandMasks:f,pixels:c,pixelType:l.pixelType});return g.updateStatistics(),g}function Co(t,o,r){if(!D(t))return null;const{width:l,height:s}=t,e=o.x,i=o.y,h=r.width+e,a=r.height+i;if(e<0||i<0||h>l||a>s||e===0&&i===0&&h===l&&a===s)return t;t.mask||(t.mask=new Uint8Array(l*s));const c=t.mask;for(let n=0;n<s;n++){const u=n*l;for(let p=0;p<l;p++)c[u+p]=n<i||n>=a||p<e||p>=h?0:1}return t.updateStatistics(),t}function Ot(t){if(!D(t))return null;const o=t.clone(),{width:r,height:l,pixels:s}=t,e=s[0],i=o.pixels[0],h=t.mask;for(let a=2;a<l-1;a++){const c=new Map;for(let u=a-2;u<a+2;u++)for(let p=0;p<4;p++){const f=u*r+p;z(c,e[f],h?h[f]:1)}i[a*r]=mt(c),i[a*r+1]=i[a*r+2]=i[a*r];let n=3;for(;n<r-1;n++){let u=(a-2)*r+n+1;z(c,e[u],h?h[u]:1),u=(a-1)*r+n+1,z(c,e[u],h?h[u]:1),u=a*r+n+1,z(c,e[u],h?h[u]:1),u=(a+1)*r+n+1,z(c,e[u],h?h[u]:1),u=(a-2)*r+n-3,X(c,e[u],h?h[u]:1),u=(a-1)*r+n-3,X(c,e[u],h?h[u]:1),u=a*r+n-3,X(c,e[u],h?h[u]:1),u=(a+1)*r+n-3,X(c,e[u],h?h[u]:1),i[a*r+n]=mt(c)}i[a*r+n+1]=i[a*r+n]}for(let a=0;a<r;a++)i[a]=i[r+a]=i[2*r+a],i[(l-1)*r+a]=i[(l-2)*r+a];return o.updateStatistics(),o}function mt(t){if(t.size===0)return 0;let o=0,r=-1,l=0;const s=t.keys();let e=s.next();for(;!e.done;)l=t.get(e.value),l>o&&(r=e.value,o=l),e=s.next();return r}function X(t,o,r){if(r===0)return;const l=t.get(o);l===1?t.delete(o):t.set(o,l-1)}function z(t,o,r){r!==0&&t.set(o,t.has(o)?t.get(o)+1:1)}function Wt(t,o,r){let{x:l,y:s}=o;const{width:e,height:i}=r;if(l===0&&s===0&&i===t.height&&e===t.width)return t;const{width:h,height:a}=t,c=Math.max(0,s),n=Math.max(0,l),u=Math.min(l+e,h),p=Math.min(s+i,a);if(u<0||p<0||!D(t))return null;l=Math.max(0,-l),s=Math.max(0,-s);const{pixels:f}=t,m=e*i,g=f.length,d=[];for(let k=0;k<g;k++){const b=f[k],M=$.createEmptyBand(t.pixelType,m);for(let v=c;v<p;v++){const R=v*h;let U=(v+s-c)*e+l;for(let A=n;A<u;A++)M[U++]=b[R+A]}d.push(M)}const C=new Uint8Array(m),y=t.mask;for(let k=c;k<p;k++){const b=k*h;let M=(k+s-c)*e+l;for(let v=n;v<u;v++)C[M++]=y?y[b+v]:1}const w=new $({width:r.width,height:r.height,pixelType:t.pixelType,pixels:d,mask:C});return w.updateStatistics(),w}function zt(t,o=!0){if(!D(t))return null;const{pixels:r,width:l,height:s,mask:e,pixelType:i}=t,h=[],a=Math.round(l/2),c=Math.round(s/2),n=s-1,u=l-1;for(let f=0;f<r.length;f++){const m=r[f],g=$.createEmptyBand(i,a*c);let d=0;for(let C=0;C<s;C+=2)for(let y=0;y<l;y+=2){const w=m[C*l+y];if(o){const k=y===u?w:m[C*l+y+1],b=C===n?w:m[C*l+y+l],M=y===u?b:C===n?k:m[C*l+y+l+1];g[d++]=(w+k+b+M)/4}else g[d++]=w}h.push(g)}let p=null;if(e!=null){p=new Uint8Array(a*c);let f=0;for(let m=0;m<s;m+=2)for(let g=0;g<l;g+=2){const d=e[m*l+g];if(o){const C=g===u?d:e[m*l+g+1],y=m===n?d:e[m*l+g+l],w=g===u?y:m===n?C:e[m*l+g+l+1];p[f++]=d*C*y*w?1:0}else p[f++]=d}}return new $({width:a,height:c,pixelType:i,pixels:h,mask:p})}function yo(t,o,r){if(!D(t))return null;const{width:l,height:s}=o;let{width:e,height:i}=t;const h=new Map,a={x:0,y:0},c=r==null?1:1+r;let n=t;for(let u=0;u<c;u++){const p=Math.ceil(e/l),f=Math.ceil(i/s);for(let m=0;m<f;m++){a.y=m*s;for(let g=0;g<p;g++){a.x=g*l;const d=Wt(n,a,o);h.set(`${u}/${m}/${g}`,d)}}u<c-1&&(n=zt(n)),e=Math.round(e/2),i=Math.round(i/2)}return h}function bt(t,o,r,l,s=0){const{width:e,height:i}=t,{width:h,height:a}=o,c=l.cols,n=l.rows,u=Math.ceil(h/c-.1/c),p=Math.ceil(a/n-.1/n);let f,m,g,d,C,y,w;const k=u*c,b=k*p*n,M=new Float32Array(b),v=new Float32Array(b),R=new Uint32Array(b),U=new Uint32Array(b);let A,B,x=0;for(let T=0;T<p;T++)for(let G=0;G<u;G++){f=12*(T*u+G),m=r[f],g=r[f+1],d=r[f+2],C=r[f+3],y=r[f+4],w=r[f+5];for(let I=0;I<n;I++){x=(T*n+I)*k+G*c,B=(I+.5)/n;for(let P=0;P<I;P++)A=(P+.5)/c,M[x+P]=(m*A+g*B+d)*e+s,v[x+P]=(C*A+y*B+w)*i+s,R[x+P]=Math.floor(M[x+P]),U[x+P]=Math.floor(v[x+P])}f+=6,m=r[f],g=r[f+1],d=r[f+2],C=r[f+3],y=r[f+4],w=r[f+5];for(let I=0;I<n;I++){x=(T*n+I)*k+G*c,B=(I+.5)/n;for(let P=I;P<c;P++)A=(P+.5)/c,M[x+P]=(m*A+g*B+d)*e+s,v[x+P]=(C*A+y*B+w)*i+s,R[x+P]=Math.floor(M[x+P]),U[x+P]=Math.floor(v[x+P])}}return{offsets_x:M,offsets_y:v,offsets_xi:R,offsets_yi:U,gridWidth:k}}function ko(t,o){const{coefficients:r,spacing:l}=o,{offsets_x:s,offsets_y:e,gridWidth:i}=bt(t,t,r,{rows:l[0],cols:l[1]}),{width:h,height:a}=t,c=new Float32Array(h*a),n=180/Math.PI;for(let u=0;u<a;u++)for(let p=0;p<h;p++){const f=u*i+p,m=u===0?f:f-i,g=u===a-1?f:f+i,d=s[m]-s[g],C=e[g]-e[m];if(isNaN(d)||isNaN(C))c[u*h+p]=90;else{let y=Math.atan2(C,d)*n;y=(360+y)%360,c[u*h+p]=y}}return c}function wo(t,o,r,l,s="nearest"){if(!D(t))return null;s==="majority"&&(t=Ot(t));const{pixels:e,mask:i,bandMasks:h,pixelType:a}=t,c=t.width,n=t.height,u=$.getPixelArrayConstructor(a),p=e.length,{width:f,height:m}=o;let g=!1;for(let x=0;x<r.length;x+=3)r[x]===-1&&r[x+1]===-1&&r[x+2]===-1&&(g=!0);const{offsets_x:d,offsets_y:C,offsets_xi:y,offsets_yi:w,gridWidth:k}=bt({width:c,height:n},o,r,l,s==="majority"?.5:0);let b;const M=(x,T,G,I)=>{const P=x instanceof Float32Array||x instanceof Float64Array?0:.5;for(let F=0;F<m;F++){b=F*k;for(let N=0;N<f;N++){if(d[b]<0||C[b]<0)x[F*f+N]=0;else if(I)x[F*f+N]=T[y[b]+w[b]*c];else{const O=Math.floor(d[b]),W=Math.floor(C[b]),H=Math.ceil(d[b]),Y=Math.ceil(C[b]),q=d[b]-O,rt=C[b]-W;if(!G||G[O+W*c]&&G[H+W*c]&&G[O+Y*c]&&G[H+Y*c]){const At=(1-q)*T[O+W*c]+q*T[H+W*c],Mt=(1-q)*T[O+Y*c]+q*T[H+Y*c];x[F*f+N]=(1-rt)*At+rt*Mt+P}else x[F*f+N]=T[y[b]+w[b]*c]}b++}}},v=[];let R;const U=h?.length===p,A=[];for(let x=0;x<p;x++){if(U){const T=new Uint8Array(f*m);M(T,h[x],h[x],!0),A.push(T)}R=new u(f*m),M(R,e[x],U?h[x]:i,s==="nearest"||s==="majority"),v.push(R)}const B=new $({width:f,height:m,pixelType:a,pixels:v,bandMasks:U?A:void 0});if(i!=null)B.mask=new Uint8Array(f*m),M(B.mask,i,i,!0);else if(g){B.mask=new Uint8Array(f*m);for(let x=0;x<f*m;x++)B.mask[x]=d[x]<0||C[x]<0?0:1}return B.updateStatistics(),B}const V=new Map;V.set("meter-per-second",1),V.set("kilometer-per-hour",.277778),V.set("knots",.514444),V.set("feet-per-second",.3048),V.set("mile-per-hour",.44704);const Z=180/Math.PI,xo=new tt({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function bo(t,o){return V.get(t)/V.get(o)||1}function vt(t){return(450-t)%360}function Ht(t,o="geographic"){const[r,l]=t,s=Math.sqrt(r*r+l*l);let e=Math.atan2(l,r)*Z;return e=(360+e)%360,o==="geographic"&&(e=vt(e)),[s,e]}function Yt(t,o="geographic"){let r=t[1];o==="geographic"&&(r=vt(r)),r%=360;const l=t[0];return[l*Math.cos(r/Z),l*Math.sin(r/Z)]}function vo(t,o,r,l="geographic"){if(!D(t)||r==null)return t;const s=o==="vector-magdir"?t.clone():dt(t,o),e=s.pixels[1];for(let i=0;i<e.length;i++)e[i]=l==="geographic"?(e[i]+r[i]+270)%360:(e[i]+360-r[i])%360;return o==="vector-magdir"?s:dt(s,"vector-magdir")}function dt(t,o,r="geographic",l=1){if(!D(t))return t;const{pixels:s,width:e,height:i}=t,h=e*i,a=s[0],c=s[1],n=t.pixelType.startsWith("f")?t.pixelType:"f32",u=$.createEmptyBand(n,h),p=$.createEmptyBand(n,h);let f=0;for(let g=0;g<i;g++)for(let d=0;d<e;d++)o==="vector-uv"?([u[f],p[f]]=Ht([a[f],c[f]],r),u[f]*=l):([u[f],p[f]]=Yt([a[f],c[f]],r),u[f]*=l,p[f]*=l),f++;const m=new $({pixelType:n,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[u,p]});return m.updateStatistics(),m}function Ao(t,o,r=1){if(r===1||!D(t))return t;const l=t.clone(),{pixels:s,width:e,height:i}=l,h=s[0],a=s[1];let c=0;for(let n=0;n<i;n++)for(let u=0;u<e;u++)o==="vector-uv"?(h[c]*=r,a[c]*=r):h[c]*=r,c++;return l.updateStatistics(),l}export{co as A,po as B,Ct as C,wt as D,uo as E,oo as G,ko as I,wo as R,Co as T,mo as U,yo as W,vo as a,eo as b,bo as c,fo as d,ho as e,dt as f,so as g,ao as h,to as i,Gt as j,Dt as k,Ht as l,Kt as m,ro as n,D as o,Ao as p,Vt as q,Qt as r,xo as s,no as t,$ as u,ct as v,Zt as w,ut as x,go as y,io as z};

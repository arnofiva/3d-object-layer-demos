var X=Object.defineProperty,z=Object.defineProperties;var Y=Object.getOwnPropertyDescriptors;var k=Object.getOwnPropertySymbols;var _=Object.prototype.hasOwnProperty,q=Object.prototype.propertyIsEnumerable;var G=(n,t,e)=>t in n?X(n,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[t]=e,y=(n,t)=>{for(var e in t||(t={}))_.call(t,e)&&G(n,e,t[e]);if(k)for(var e of k(t))q.call(t,e)&&G(n,e,t[e]);return n},g=(n,t)=>z(n,Y(t));import{gb as d,o4 as E,bs as S,o5 as H,N as l,o6 as J,o7 as A,o8 as R,bF as U,t as N,ap as Q,fw as B,f_ as T,bG as K,bH as Z,aE as ee,hj as te,r as v}from"./vendor.fd144a9e.js";import{i as ne}from"./geojson.2508f0d3.js";import{n as F,o as x}from"./xmlUtils.986ddba5.js";function ae(n){var t;return(t=se(n))!=null?t:re(n)}function re(n){const t=new Date(n).getTime();return Number.isNaN(t)?null:t}function se(n){var f,h,P,$;const t=oe.exec(n);if(!t)return null;const e=t.groups,a=+e.year,r=+e.month-1,s=+e.day,o=+((f=e.hours)!=null?f:"0"),i=+((h=e.minutes)!=null?h:"0"),u=+((P=e.seconds)!=null?P:"0");if(o>23||i>59||u>59)return null;const p=($=e.ms)!=null?$:"0",c=p?+p.padEnd(3,"0").substring(0,3):0;let m;if(e.isUTC)m=Date.UTC(a,r,s,o,i,u,c);else if(e.offsetSign){const V=+e.offsetHours,W=+e.offsetMinutes;m=6e4*(e.offsetSign==="+"?-1:1)*(60*V+W)+Date.UTC(a,r,s,o,i,u,c)}else m=new Date(a,r,s,o,i,u,c).getTime();return Number.isNaN(m)?null:m}const oe=/^(?:(?<year>-?\d{4,})-(?<month>\d{2})-(?<day>\d{2}))(?:T(?<hours>\d{2}):(?<minutes>\d{2}):(?<seconds>\d{2})(?:\.(?<ms>\d+))?)?(?:(?<isUTC>Z)|(?:(?<offsetSign>\+|-)(?<offsetHours>\d{2}):(?<offsetMinutes>\d{2})))?$/,C="xlink:href",w="2.0.0",D="__esri_wfs_id__",ie="wfs-layer:getWFSLayerTypeInfo-error",ue="wfs-layer:empty-service",I="wfs-layer:feature-type-not-found",pe="wfs-layer:geojson-not-supported",ce="wfs-layer:kvp-encoding-not-supported",le="wfs-layer:malformed-json",M="wfs-layer:unknown-geometry-type",me="wfs-layer:unknown-field-type",ye="wfs-layer:unsupported-spatial-reference",fe="wfs-layer:unsupported-wfs-version";async function Ie(n,t){const e=de((await S(n,{responseType:"text",query:y({SERVICE:"WFS",REQUEST:"GetCapabilities",VERSION:w},t==null?void 0:t.customParameters),signal:t==null?void 0:t.signal})).data);return be(n,e),e}function de(n){const t=L(n);Ae(t),j(t);const e=t.firstElementChild,a=H(he(e));return{operations:we(e),get featureTypes(){return Array.from(a())},readFeatureTypes:a}}const ge=new Set(["json","application/json","geojson","application/json; subtype=geojson"]);function we(n){let t=!1;const e={GetCapabilities:{url:""},DescribeFeatureType:{url:""},GetFeature:{url:"",outputFormat:null,supportsPagination:!1}};if(x(n,{OperationsMetadata:{Operation:a=>{switch(a.getAttribute("name")){case"GetCapabilities":return{DCP:{HTTP:{Get:r=>{e.GetCapabilities.url=r.getAttribute(C)}}}};case"DescribeFeatureType":return{DCP:{HTTP:{Get:r=>{e.DescribeFeatureType.url=r.getAttribute(C)}}}};case"GetFeature":return{DCP:{HTTP:{Get:r=>{e.GetFeature.url=r.getAttribute(C)}}},Parameter:r=>{if(r.getAttribute("name")==="outputFormat")return{AllowedValues:{Value:s=>{const o=s.textContent;ge.has(o.toLowerCase())&&(e.GetFeature.outputFormat=o)}}}}}}},Constraint:a=>{switch(a.getAttribute("name")){case"KVPEncoding":return{DefaultValue:r=>{t=r.textContent.toLowerCase()==="true"}};case"ImplementsResultPaging":return{DefaultValue:r=>{e.GetFeature.supportsPagination=r.textContent.toLowerCase()==="true"}}}}}}),!t)throw new l(ce,"WFS service doesn't support key/value pair (KVP) encoding");if(N(e.GetFeature.outputFormat))throw new l(pe,"WFS service doesn't support GeoJSON output format");return e}function be(n,t){J(n)&&(A(n,t.operations.DescribeFeatureType.url,!0)&&(t.operations.DescribeFeatureType.url=R(t.operations.DescribeFeatureType.url)),A(n,t.operations.GetFeature.url,!0)&&(t.operations.GetFeature.url=R(t.operations.GetFeature.url)))}function he(n){return F(n,{FeatureTypeList:{FeatureType:t=>{const e={typeName:"undefined:undefined",name:"",title:"",description:"",extent:null,namespacePrefix:"",namespaceUri:"",supportedSpatialReferences:[]},a=new Set([4326]),r=s=>{var i,u;const o=parseInt((u=(i=s.textContent.match(/(?<wkid>\d+$)/i))==null?void 0:i.groups)==null?void 0:u.wkid,10);Number.isNaN(o)||a.add(o)};return x(t,{Name:s=>{const{name:o,prefix:i}=b(s.textContent);e.typeName=`${i}:${o}`,e.name=o,e.namespacePrefix=i,e.namespaceUri=s.lookupNamespaceURI(i)},Abstract:s=>{e.description=s.textContent},Title:s=>{e.title=s.textContent},WGS84BoundingBox:s=>{e.extent=Te(s)},DefaultSRS:r,DefaultCRS:r,OtherSRS:r,OtherCRS:r}),e.title||(e.title=e.name),e.supportedSpatialReferences.push(...a),e}}})}function Te(n){let t,e,a,r;for(const s of n.children)switch(s.localName){case"LowerCorner":[t,e]=s.textContent.split(" ").map(o=>Number.parseFloat(o));break;case"UpperCorner":[a,r]=s.textContent.split(" ").map(o=>Number.parseFloat(o))}return{xmin:t,ymin:e,xmax:a,ymax:r,spatialReference:T}}function Fe(n,t,e){return E(n,a=>e?a.name===t&&a.namespaceUri===e:a.typeName===t||a.name===t)}async function Me(n,t,e,a={}){var m;const{featureType:r,extent:s}=await Se(n,t,e,a),{fields:o,geometryType:i,swapXY:u,objectIdField:p,geometryField:c}=await xe(n,r.typeName,a);return{url:n.operations.GetCapabilities.url,name:r.name,namespaceUri:r.namespaceUri,fields:o,geometryField:c,geometryType:i,objectIdField:p,spatialReference:(m=a.spatialReference)!=null?m:U.WGS84,extent:s,swapXY:u,wfsCapabilities:n,customParameters:a.customParameters}}async function Se(n,t,e,a={}){const{spatialReference:r=U.WGS84}=a,s=n.readFeatureTypes(),o=t?Fe(s,t,e):s.next().value;if(N(o))throw t?new l(I,`The type '${t}' could not be found in the service`):new l(ue,"The service is empty");let i=new Q(g(y({},o.extent),{spatialReference:r}));if(!B(r,T))try{await K(T,r,void 0,a),i=Z(i,T)}catch{throw new l(ye,"Projection not supported")}return{extent:i,spatialReference:r,featureType:o}}async function xe(n,t,e={}){const[a,r]=await ee([Ne(n.operations.DescribeFeatureType.url,t,e),Ee(n,t,e)]);if(a.error||r.error)throw new l(ie,`An error occurred while getting info about the feature type '${t}'`,{error:a.error||r.error});const{fields:s,errors:o}=a.value,i=a.value.geometryType||r.value.geometryType,u=r.value.swapXY;if(N(i))throw new l(M,`The geometry type could not be determined for type '${t}`,{typeName:t,geometryType:i,fields:s,errors:o});return g(y({},Ce(s)),{geometryType:i,swapXY:u})}function Ce(n){var a;const t=n.find(r=>r.type==="geometry");let e=n.find(r=>r.type==="oid");return n=n.filter(r=>r.type!=="geometry"),e||(e=new d({name:D,type:"oid",alias:D}),n.unshift(e)),{geometryField:(a=t==null?void 0:t.name)!=null?a:null,objectIdField:e.name,fields:n}}async function Ee(n,t,e={}){var u;let a,r=!1;const[s,o]=await Promise.all([Ge(n.operations.GetFeature.url,t,n.operations.GetFeature.outputFormat,g(y({},e),{count:1})),S(n.operations.GetFeature.url,{responseType:"text",query:O(t,void 0,g(y({},e),{count:1})),signal:e==null?void 0:e.signal})]),i=s.type==="FeatureCollection"&&((u=s.features[0])==null?void 0:u.geometry);if(i){let p;switch(a=te.fromJSON(ne(i.type)),i.type){case"Point":p=i.coordinates;break;case"LineString":case"MultiPoint":p=i.coordinates[0];break;case"MultiLineString":case"Polygon":p=i.coordinates[0][0];break;case"MultiPolygon":p=i.coordinates[0][0][0]}const c=/<[^>]*pos[^>]*> *(-?\d+(?:\.\d+)?) (-?\d+(?:\.\d+)?)/.exec(o.data);if(c){const m=p[0].toFixed(3),f=p[1].toFixed(3),h=parseFloat(c[1]).toFixed(3);m===parseFloat(c[2]).toFixed(3)&&f===h&&(r=!0)}}return{geometryType:a,swapXY:r}}async function Ne(n,t,e){return Pe(t,(await S(n,{responseType:"text",query:y({SERVICE:"WFS",REQUEST:"DescribeFeatureType",VERSION:w,TYPENAME:t},e==null?void 0:e.customParameters),signal:e==null?void 0:e.signal})).data)}function Pe(n,t){const{name:e}=b(n),a=L(t);j(a);const r=E(F(a.firstElementChild,{element:s=>({name:s.getAttribute("name"),typeName:b(s.getAttribute("type")).name})}),({name:s})=>s===e);if(v(r)){const s=E(F(a.firstElementChild,{complexType:o=>o}),o=>o.getAttribute("name")===r.typeName);if(v(s))return ke(s)}throw new l(I,`Type '${n}' not found in document`,{document:new XMLSerializer().serializeToString(a)})}const $e=new Set(["objectid","fid"]);function ke(n){const t=[],e=[];let a;const r=F(n,{complexContent:{extension:{sequence:{element:s=>s}}}});for(const s of r){const o=s.getAttribute("name");if(!o)continue;let i,u;if(s.hasAttribute("type")?i=b(s.getAttribute("type")).name:x(s,{simpleType:{restriction:m=>(i=b(m.getAttribute("base")).name,{maxLength:f=>{u=+f.getAttribute("value")}})}}),!i)continue;const p=s.getAttribute("nillable")==="true";let c=!1;switch(i.toLowerCase()){case"integer":case"nonpositiveinteger":case"negativeinteger":case"long":case"int":case"short":case"byte":case"nonnegativeinteger":case"unsignedlong":case"unsignedint":case"unsignedshort":case"unsignedbyte":case"positiveinteger":e.push(new d({name:o,alias:o,type:"integer",nullable:p}));break;case"float":case"double":case"decimal":e.push(new d({name:o,alias:o,type:"double",nullable:p}));break;case"boolean":case"string":case"gyearmonth":case"gyear":case"gmonthday":case"gday":case"gmonth":case"anyuri":case"qname":case"notation":case"normalizedstring":case"token":case"language":case"idrefs":case"entities":case"nmtoken":case"nmtokens":case"name":case"ncname":case"id":case"idref":case"entity":case"duration":case"time":e.push(new d({name:o,alias:o,type:"string",nullable:p,length:u!=null?u:255}));break;case"datetime":case"date":e.push(new d({name:o,alias:o,type:"date",nullable:p,length:u!=null?u:36}));break;case"pointpropertytype":a="point",c=!0;break;case"multipointpropertytype":a="multipoint",c=!0;break;case"curvepropertytype":case"multicurvepropertytype":case"multilinestringpropertytype":a="polyline",c=!0;break;case"surfacepropertytype":case"multisurfacepropertytype":case"multipolygonpropertytype":a="polygon",c=!0;break;case"geometrypropertytype":case"multigeometrypropertytype":c=!0,t.push(new l(M,`geometry type '${i}' is not supported`,{type:new XMLSerializer().serializeToString(n)}));break;default:t.push(new l(me,`Unknown field type '${i}'`,{type:new XMLSerializer().serializeToString(n)}))}c&&e.push(new d({name:o,alias:o,type:"geometry",nullable:p}))}for(const s of e)if(s.type==="integer"&&!s.nullable&&$e.has(s.name.toLowerCase())){s.type="oid";break}return{geometryType:a,fields:e,errors:t}}async function Ge(n,t,e,a){var s;let{data:r}=await S(n,{responseType:"text",query:O(t,e,a),signal:a==null?void 0:a.signal});r=r.replace(/": +(-?\d+),(\d+)(,)?/g,'": $1.$2$3');try{if((s=a==null?void 0:a.dateFields)==null?void 0:s.length){const o=new Set(a.dateFields);return JSON.parse(r,(i,u)=>o.has(i)?ae(u):u)}return JSON.parse(r)}catch(o){throw new l(le,"Error while parsing the\xA0response",{response:r,error:o})}}function O(n,t,e){return y({SERVICE:"WFS",REQUEST:"GetFeature",VERSION:w,TYPENAMES:n,OUTPUTFORMAT:t,SRSNAME:"EPSG:4326",STARTINDEX:e==null?void 0:e.startIndex,COUNT:e==null?void 0:e.count},e==null?void 0:e.customParameters)}function L(n){return new DOMParser().parseFromString(n.trim(),"text/xml")}function b(n){const[t,e]=n.split(":");return{prefix:e?t:"",name:e!=null?e:t}}function Ae(n){const t=n.firstElementChild.getAttribute("version");if(t&&t!==w)throw new l(fe,`Unsupported WFS version ${t}. Supported version: ${w}`)}function j(n){let t,e;if(x(n.firstElementChild,{Exception:a=>(t=a.getAttribute("exceptionCode"),{ExceptionText:r=>{e=r.textContent}})}),t)throw new l(`wfs-layer:${t}`,e)}export{D as C,Ie as D,Ge as K,Fe as W,Me as X,Ce as z};

import{cY as w,fe as O,f8 as I}from"./main-79e5ed80.js";import{n as R,i as g}from"./cimAnalyzer-653b100f.js";import{GeometryStyle as P,CIMSymbolRasterizer as V}from"./CIMSymbolRasterizer-797468b4.js";import{t as b,l as $}from"./symbolUtils-2e5baa60.js";import"./TileClipper-ae6eca9e.js";import"./definitions-40cbc24b.js";import"./number-e491b09e.js";import"./BidiEngine-9a40f2f4.js";import"./imageutils-7ddd1810.js";import"./rasterizingUtils-4b81019f.js";import"./colorUtils-c0f43caf.js";const m=new V(null,!0),c=w(b.size),x=w(b.maxSize),q=w(b.lineWidth),D=1;function E(t){const e=t?.size;return typeof e=="number"?{width:e,height:e}:{width:e!=null&&typeof e=="object"&&"width"in e?e.width:null,height:e!=null&&typeof e=="object"&&"height"in e?e.height:null}}async function Q(t,e={}){const{node:M,opacity:v,symbolConfig:a}=e,F=a!=null&&typeof a=="object"&&"isSquareFill"in a&&a.isSquareFill,S=e.cimOptions||e,o=S.geometryType||O(t?.data?.symbol),i=E(e),{feature:C,fieldMap:L}=S;if(i.width==null||i.height==null){const l=await R.resolveSymbolOverrides(t.data,C,null,L,o);if(!l)return null;(t=t.clone()).data={type:"CIMSymbolReference",symbol:l},t.data.primitiveOverrides=void 0;const h=[];g.fetchResources(l,m.resourceManager,h),g.fetchFonts(l,m.resourceManager,h),h.length>0&&await Promise.all(h);const z=g.getEnvelope(l,null,m.resourceManager),p=z?.width,d=z?.height;i.width=o==="esriGeometryPolygon"?c:o==="esriGeometryPolyline"?q:p!=null&&isFinite(p)?Math.min(p,x):c,i.height=o==="esriGeometryPolygon"?c:d!=null&&isFinite(d)?Math.max(Math.min(d,x),D):c}const u=await m.rasterizeCIMSymbolAsync(t,C,i,F||o!=="esriGeometryPolygon"?P.Preview:P.Legend,L,o);if(!u)return null;const{width:G,height:j}=u,r=document.createElement("canvas");r.width=G,r.height=j,r.getContext("2d").putImageData(u,0,0);const f=I(i.width),y=I(i.height),n=new Image(f,y);n.src=r.toDataURL(),n.ariaLabel=e.ariaLabel??null,n.alt=e.ariaLabel??"",v!=null&&(n.style.opacity=`${v}`);let s=n;if(e.effectView!=null){const l={shape:{type:"image",x:0,y:0,width:f,height:y,src:n.src},fill:null,stroke:null,offset:[0,0]};s=$([[l]],[f,y],{effectView:e.effectView,ariaLabel:e.ariaLabel})}return M&&s&&M.appendChild(s),s}export{Q as previewCIMSymbol};
